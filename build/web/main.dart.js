// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 2.19.2 (stable) (Tue Feb 7 18:37:17 2023 +0000) on "linux_x64"
// Module: zapp_user_main
// Flags: soundNullSafety(true), enableAsserts(true)
define('zapp_user_main', ['dart_sdk', 'flutter_sdk'], (function load__zapp_user_main(dart_sdk, flutter_sdk) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const _interceptors = dart_sdk._interceptors;
  const js = dart_sdk.js;
  const ui = dart_sdk.ui;
  const _js_helper = dart_sdk._js_helper;
  const collection = dart_sdk.collection;
  const _internal = dart_sdk._internal;
  const developer = dart_sdk.developer;
  const convert = dart_sdk.convert;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const app = flutter_sdk.src__material__app;
  const theme_data = flutter_sdk.src__material__theme_data;
  const colors = flutter_sdk.src__material__colors;
  const framework = flutter_sdk.src__widgets__framework;
  const binding = flutter_sdk.src__widgets__binding;
  const change_notifier = flutter_sdk.src__foundation__change_notifier;
  const scaffold = flutter_sdk.src__material__scaffold;
  const app_bar = flutter_sdk.src__material__app_bar;
  const text = flutter_sdk.src__widgets__text;
  const icon_button = flutter_sdk.src__material__icon_button;
  const icon = flutter_sdk.src__widgets__icon;
  const icons = flutter_sdk.src__material__icons;
  const navigator = flutter_sdk.src__widgets__navigator;
  const container = flutter_sdk.src__widgets__container;
  const media_query = flutter_sdk.src__widgets__media_query;
  const edge_insets = flutter_sdk.src__painting__edge_insets;
  const list_tile = flutter_sdk.src__material__list_tile;
  const scroll_view = flutter_sdk.src__widgets__scroll_view;
  const form = flutter_sdk.src__widgets__form;
  const single_child_scroll_view = flutter_sdk.src__widgets__single_child_scroll_view;
  const basic = flutter_sdk.src__widgets__basic;
  const image = flutter_sdk.src__widgets__image;
  const elevated_button = flutter_sdk.src__material__elevated_button;
  const text_style = flutter_sdk.src__painting__text_style;
  const outlined_button = flutter_sdk.src__material__outlined_button;
  const rounded_rectangle_border = flutter_sdk.src__painting__rounded_rectangle_border;
  const border_radius = flutter_sdk.src__painting__border_radius;
  const borders = flutter_sdk.src__painting__borders;
  const number_format = flutter_sdk.src__intl__number_format;
  const page = flutter_sdk.src__material__page;
  const circle_avatar = flutter_sdk.src__material__circle_avatar;
  const divider = flutter_sdk.src__material__divider;
  const floating_action_button_location = flutter_sdk.src__material__floating_action_button_location;
  const floating_action_button = flutter_sdk.src__material__floating_action_button;
  const card = flutter_sdk.src__material__card;
  const ink_well = flutter_sdk.src__material__ink_well;
  const flex = flutter_sdk.src__rendering__flex;
  const box_decoration = flutter_sdk.src__painting__box_decoration;
  const box_border = flutter_sdk.src__painting__box_border;
  const popup_menu = flutter_sdk.src__material__popup_menu;
  const text_form_field = flutter_sdk.src__material__text_form_field;
  const input_decorator = flutter_sdk.src__material__input_decorator;
  const input_border = flutter_sdk.src__material__input_border;
  const icon_data = flutter_sdk.src__widgets__icon_data;
  const editable_text = flutter_sdk.src__widgets__editable_text;
  const alignment = flutter_sdk.src__painting__alignment;
  const text_input = flutter_sdk.src__services__text_input;
  const text_formatter = flutter_sdk.src__services__text_formatter;
  const assertions = flutter_sdk.src__foundation__assertions;
  const binding$ = flutter_sdk.src__scheduler__binding;
  const diagnostics = flutter_sdk.src__foundation__diagnostics;
  const sliver = flutter_sdk.src__widgets__sliver;
  const layout_builder = flutter_sdk.src__widgets__layout_builder;
  const equality = flutter_sdk.src__equality;
  const value_listenable_builder = flutter_sdk.src__widgets__value_listenable_builder;
  var $46zapp_entry = Object.create(dart.library);
  var main = Object.create(dart.library);
  var web_plugin_registrant = Object.create(dart.library);
  var cart_repository = Object.create(dart.library);
  var cart = Object.create(dart.library);
  var login = Object.create(dart.library);
  var products = Object.create(dart.library);
  var purchase_confirmation = Object.create(dart.library);
  var register = Object.create(dart.library);
  var provider = Object.create(dart.library);
  var product = Object.create(dart.library);
  var product_card = Object.create(dart.library);
  var custom_text_field = Object.create(dart.library);
  var profile = Object.create(dart.library);
  var string_validator = Object.create(dart.library);
  var products_repository = Object.create(dart.library);
  var product_details = Object.create(dart.library);
  var async_provider = Object.create(dart.library);
  var change_notifier_provider = Object.create(dart.library);
  var consumer = Object.create(dart.library);
  var listenable_provider = Object.create(dart.library);
  var provider$ = Object.create(dart.library);
  var proxy_provider = Object.create(dart.library);
  var reassemble_handler = Object.create(dart.library);
  var selector$ = Object.create(dart.library);
  var value_listenable_provider = Object.create(dart.library);
  var validator = Object.create(dart.library);
  var sanitizer = Object.create(dart.library);
  var nested = Object.create(dart.library);
  var helpers = Object.create(dart.library);
  var $toString = dartx.toString;
  var $contains = dartx.contains;
  var $add = dartx.add;
  var $forEach = dartx.forEach;
  var $remove = dartx.remove;
  var $isEmpty = dartx.isEmpty;
  var $_get = dartx._get;
  var $length = dartx.length;
  var $isNotEmpty = dartx.isNotEmpty;
  var $runtimeType = dartx.runtimeType;
  var $_set = dartx._set;
  var $clear = dartx.clear;
  var $toLowerCase = dartx.toLowerCase;
  var $indexOf = dartx.indexOf;
  var $split = dartx.split;
  var $join = dartx.join;
  var $sort = dartx.sort;
  var $removeLast = dartx.removeLast;
  var $toUpperCase = dartx.toUpperCase;
  var $modulo = dartx['%'];
  var $toList = dartx.toList;
  var $replaceAll = dartx.replaceAll;
  var $substring = dartx.substring;
  var $toInt = dartx.toInt;
  var $reversed = dartx.reversed;
  var $removeAt = dartx.removeAt;
  var $putIfAbsent = dartx.putIfAbsent;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T$ = {
    VoidTovoid: () => (T$.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    ListOfString: () => (T$.ListOfString = dart.constFn(core.List$(core.String)))(),
    ListOfStringTodynamic: () => (T$.ListOfStringTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T$.ListOfString()])))(),
    JSArrayOfString: () => (T$.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    dynamicToNull: () => (T$.dynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic])))(),
    VoidToNull: () => (T$.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    ObjectAndStackTraceTovoid: () => (T$.ObjectAndStackTraceTovoid = dart.constFn(dart.fnType(dart.void, [core.Object, core.StackTrace])))(),
    ZoneAndZoneDelegateAndZone__Tovoid: () => (T$.ZoneAndZoneDelegateAndZone__Tovoid = dart.constFn(dart.fnType(dart.void, [async.Zone, async.ZoneDelegate, async.Zone, core.String])))(),
    BuildContextToProducts: () => (T$.BuildContextToProducts = dart.constFn(dart.fnType(products.Products, [framework.BuildContext])))(),
    BuildContextToCart: () => (T$.BuildContextToCart = dart.constFn(dart.fnType(cart.Cart, [framework.BuildContext])))(),
    BuildContextToPurchaseConfirmation: () => (T$.BuildContextToPurchaseConfirmation = dart.constFn(dart.fnType(purchase_confirmation.PurchaseConfirmation, [framework.BuildContext])))(),
    BuildContextToLogin: () => (T$.BuildContextToLogin = dart.constFn(dart.fnType(login.Login, [framework.BuildContext])))(),
    BuildContextToRegister: () => (T$.BuildContextToRegister = dart.constFn(dart.fnType(register.Register, [framework.BuildContext])))(),
    BuildContextToWidget: () => (T$.BuildContextToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext])))(),
    IdentityMapOfString$BuildContextToWidget: () => (T$.IdentityMapOfString$BuildContextToWidget = dart.constFn(_js_helper.IdentityMap$(core.String, T$.BuildContextToWidget())))(),
    ChangeNotifierProviderOfCartRepository: () => (T$.ChangeNotifierProviderOfCartRepository = dart.constFn(change_notifier_provider.ChangeNotifierProvider$(cart_repository.CartRepository)))(),
    BuildContextToCartRepository: () => (T$.BuildContextToCartRepository = dart.constFn(dart.fnType(cart_repository.CartRepository, [framework.BuildContext])))(),
    JSArrayOfProduct: () => (T$.JSArrayOfProduct = dart.constFn(_interceptors.JSArray$(product.Product)))(),
    UnmodifiableListViewOfProduct: () => (T$.UnmodifiableListViewOfProduct = dart.constFn(collection.UnmodifiableListView$(product.Product)))(),
    ProductTovoid: () => (T$.ProductTovoid = dart.constFn(dart.fnType(dart.void, [product.Product])))(),
    ObjectN: () => (T$.ObjectN = dart.constFn(dart.nullable(core.Object)))(),
    JSArrayOfWidget: () => (T$.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    ConsumerOfCartRepository: () => (T$.ConsumerOfCartRepository = dart.constFn(consumer.Consumer$(cart_repository.CartRepository)))(),
    BuildContextAndintToProductCard: () => (T$.BuildContextAndintToProductCard = dart.constFn(dart.fnType(product_card.ProductCard, [framework.BuildContext, core.int])))(),
    WidgetN: () => (T$.WidgetN = dart.constFn(dart.nullable(framework.Widget)))(),
    BuildContextAndCartRepositoryAndWidgetNToStatelessWidget: () => (T$.BuildContextAndCartRepositoryAndWidgetNToStatelessWidget = dart.constFn(dart.fnType(framework.StatelessWidget, [framework.BuildContext, cart_repository.CartRepository, T$.WidgetN()])))(),
    GlobalKeyOfFormState: () => (T$.GlobalKeyOfFormState = dart.constFn(framework.GlobalKey$(form.FormState)))(),
    StringN: () => (T$.StringN = dart.constFn(dart.nullable(core.String)))(),
    StringNToStringN: () => (T$.StringNToStringN = dart.constFn(dart.fnType(T$.StringN(), [T$.StringN()])))(),
    BuildContextToProductDetails: () => (T$.BuildContextToProductDetails = dart.constFn(dart.fnType(product_details.ProductDetails, [framework.BuildContext])))(),
    BuildContextAndintToListTile: () => (T$.BuildContextAndintToListTile = dart.constFn(dart.fnType(list_tile.ListTile, [framework.BuildContext, core.int])))(),
    BuildContextAndintToDivider: () => (T$.BuildContextAndintToDivider = dart.constFn(dart.fnType(divider.Divider, [framework.BuildContext, core.int])))(),
    StringNTovoid: () => (T$.StringNTovoid = dart.constFn(dart.fnType(dart.void, [T$.StringN()])))(),
    BuildContextToProfile: () => (T$.BuildContextToProfile = dart.constFn(dart.fnType(profile.Profile, [framework.BuildContext])))(),
    JSArrayOfPopupMenuItem: () => (T$.JSArrayOfPopupMenuItem = dart.constFn(_interceptors.JSArray$(popup_menu.PopupMenuItem)))(),
    ListOfPopupMenuItem: () => (T$.ListOfPopupMenuItem = dart.constFn(core.List$(popup_menu.PopupMenuItem)))(),
    BuildContextToListOfPopupMenuItem: () => (T$.BuildContextToListOfPopupMenuItem = dart.constFn(dart.fnType(T$.ListOfPopupMenuItem(), [framework.BuildContext])))(),
    IdentityMapOfString$Color: () => (T$.IdentityMapOfString$Color = dart.constFn(_js_helper.IdentityMap$(core.String, ui.Color)))(),
    JSArrayOfTextInputFormatter: () => (T$.JSArrayOfTextInputFormatter = dart.constFn(_interceptors.JSArray$(text_formatter.TextInputFormatter)))(),
    StringTovoid: () => (T$.StringTovoid = dart.constFn(dart.fnType(dart.void, [core.String])))(),
    ObjectNToNull: () => (T$.ObjectNToNull = dart.constFn(dart.fnType(core.Null, [T$.ObjectN()])))(),
    ChangeNotifierN: () => (T$.ChangeNotifierN = dart.constFn(dart.nullable(change_notifier.ChangeNotifier)))(),
    BuildContextAndChangeNotifierNTovoid: () => (T$.BuildContextAndChangeNotifierNTovoid = dart.constFn(dart.fnType(dart.void, [framework.BuildContext, T$.ChangeNotifierN()])))(),
    ListenableN: () => (T$.ListenableN = dart.constFn(dart.nullable(change_notifier.Listenable)))(),
    InheritedContextAndListenableNToFn: () => (T$.InheritedContextAndListenableNToFn = dart.constFn(dart.fnType(T$.VoidTovoid(), [provider$.InheritedContext, T$.ListenableN()])))(),
    VoidTobool: () => (T$.VoidTobool = dart.constFn(dart.fnType(core.bool, [])))(),
    ElementTobool: () => (T$.ElementTobool = dart.constFn(dart.fnType(core.bool, [framework.Element])))(),
    TTovoid$1: () => (T$.TTovoid$1 = dart.constFn(dart.gFnType(T => [dart.void, [T]], T => [T$.ObjectN()])))(),
    ElementTovoid: () => (T$.ElementTovoid = dart.constFn(dart.fnType(dart.void, [framework.Element])))(),
    _NestedHookElementN: () => (T$._NestedHookElementN = dart.constFn(dart.nullable(nested._NestedHookElement)))(),
    LinkedHashMapOfString$ProviderNode: () => (T$.LinkedHashMapOfString$ProviderNode = dart.constFn(collection.LinkedHashMap$(core.String, provider$.ProviderNode)))(),
    DurationTovoid: () => (T$.DurationTovoid = dart.constFn(dart.fnType(dart.void, [core.Duration])))(),
    JSArrayOfDiagnosticsNode: () => (T$.JSArrayOfDiagnosticsNode = dart.constFn(_interceptors.JSArray$(diagnostics.DiagnosticsNode)))(),
    JSArrayOfPostEventCall: () => (T$.JSArrayOfPostEventCall = dart.constFn(_interceptors.JSArray$(provider$.PostEventCall)))(),
    IdentityMapOfString$ProviderNode: () => (T$.IdentityMapOfString$ProviderNode = dart.constFn(_js_helper.IdentityMap$(core.String, provider$.ProviderNode)))(),
    DefaultEqualityOfNever: () => (T$.DefaultEqualityOfNever = dart.constFn(equality.DefaultEquality$(dart.Never)))(),
    FnToR: () => (T$.FnToR = dart.constFn(dart.gFnType((T, R) => {
      var __t$TToR = () => (__t$TToR = dart.constFn(dart.fnType(R, [T])))();
      return [R, [__t$TToR()]];
    }, (T, R) => {
      var __t$TToR = () => (__t$TToR = dart.constFn(dart.fnType(R, [T])))();
      return [T$.ObjectN(), T$.ObjectN()];
    })))(),
    VoidToT: () => (T$.VoidToT = dart.constFn(dart.gFnType(T => [T, []], T => [T$.ObjectN()])))(),
    IdentityMapOfString$Object: () => (T$.IdentityMapOfString$Object = dart.constFn(_js_helper.IdentityMap$(core.String, core.Object)))(),
    StringAndStringToint: () => (T$.StringAndStringToint = dart.constFn(dart.fnType(core.int, [core.String, core.String])))(),
    IdentityMapOfString$bool: () => (T$.IdentityMapOfString$bool = dart.constFn(_js_helper.IdentityMap$(core.String, core.bool)))(),
    JSArrayOfint: () => (T$.JSArrayOfint = dart.constFn(_interceptors.JSArray$(core.int)))(),
    IdentityMapOfString$RegExp: () => (T$.IdentityMapOfString$RegExp = dart.constFn(_js_helper.IdentityMap$(core.String, core.RegExp)))(),
    LinkedHashSetOf_NestedHookElement: () => (T$.LinkedHashSetOf_NestedHookElement = dart.constFn(collection.LinkedHashSet$(nested._NestedHookElement)))(),
    SingleChildStateOfSingleChildStatefulWidget: () => (T$.SingleChildStateOfSingleChildStatefulWidget = dart.constFn(nested.SingleChildState$(nested.SingleChildStatefulWidget)))(),
    SingleChildStateMixinOfStatefulWidget: () => (T$.SingleChildStateMixinOfStatefulWidget = dart.constFn(nested.SingleChildStateMixin$(framework.StatefulWidget)))(),
    VoidToObject: () => (T$.VoidToObject = dart.constFn(dart.fnType(core.Object, [])))(),
    StringAndObjectTovoid: () => (T$.StringAndObjectTovoid = dart.constFn(dart.fnType(dart.void, [core.String, core.Object])))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.fn(main.main, T$.VoidTovoid());
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Cadastro"
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 20,
        [EdgeInsets_right]: 20,
        [EdgeInsets_top]: 20,
        [EdgeInsets_left]: 20
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 30,
        [SizedBox_width]: null
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 15,
        [SizedBox_width]: null
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: ui.FontWeight.prototype,
        [FontWeight_value]: 500,
        [FontWeight_index]: 4
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[7] || CT.C7,
        [TextStyle_fontSize]: 15,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: null,
        [TextStyle_inherit]: true
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[6] || CT.C6,
        [Text_textSpan]: null,
        [Text_data]: "Entrar"
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Produtos"
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Confirmação de Compra"
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[6] || CT.C6,
        [Text_textSpan]: null,
        [Text_data]: "Voltar para a tela de produtos"
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[6] || CT.C6,
        [Text_textSpan]: null,
        [Text_data]: "Cadastrar"
      });
    },
    get C12() {
      return C[12] = dart.fn(change_notifier_provider.ChangeNotifierProvider._dispose, T$.BuildContextAndChangeNotifierNTovoid());
    },
    get C13() {
      return C[13] = dart.fn(listenable_provider.ListenableProvider._startListening, T$.InheritedContextAndListenableNToFn());
    },
    get C14() {
      return C[14] = dart.constList([], core.String);
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: core.Object.prototype
      });
    },
    get C16() {
      return C[16] = dart.constMap(T$.ObjectN(), T$.ObjectN(), []);
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: T$.DefaultEqualityOfNever().prototype
      });
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: equality.DeepCollectionEquality.prototype,
        [DeepCollectionEquality__unordered]: false,
        [DeepCollectionEquality__base]: C[18] || CT.C18
      });
    }
  }, false);
  var C = Array(19).fill(void 0);
  var I = [
    "file:///zapp/project/lib/main.dart",
    "package:flutter_app/repositories/cart_repository.dart",
    "package:flutter_app/screens/cart.dart",
    "package:flutter_app/screens/login.dart",
    "package:flutter_app/screens/products.dart",
    "package:flutter_app/screens/purchase_confirmation.dart",
    "package:flutter_app/screens/register.dart",
    "package:flutter_app/models/product.dart",
    "package:flutter_app/components/product_card.dart",
    "package:flutter_app/components/custom_text_field.dart",
    "package:flutter_app/screens/profile.dart",
    "package:flutter_app/repositories/products_repository.dart",
    "package:flutter_app/screens/product_details.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/provider-5.0.0/lib/src/inherited_provider.dart",
    "package:nested/nested.dart",
    "package:provider/src/provider.dart",
    "package:provider/src/async_provider.dart",
    "package:provider/src/listenable_provider.dart",
    "package:provider/src/change_notifier_provider.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/provider-5.0.0/lib/src/listenable_provider.dart",
    "package:provider/src/consumer.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/nested-1.0.0/lib/nested.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/provider-5.0.0/lib/src/provider.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/provider-5.0.0/lib/src/deferred_inherited_provider.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/provider-5.0.0/lib/src/devtool.dart",
    "package:provider/src/proxy_provider.dart",
    "package:provider/src/reassemble_handler.dart",
    "package:provider/src/selector.dart",
    "package:provider/src/value_listenable_provider.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/string_validator-1.0.0/lib/src/validator.dart"
  ];
  $46zapp_entry.runAppGuarded = function runAppGuarded() {
    async.runZonedGuarded(core.Null, dart.fn(() => {
      if (T$.ListOfStringTodynamic().is(C[0] || CT.C0)) {
        T$.ListOfStringTodynamic().as(C[0] || CT.C0)(T$.JSArrayOfString().of([]));
      } else {
        (C[0] || CT.C0)();
      }
      if (js.context.hasProperty("__notifyFlutterRendered")) {
        async.Future.delayed(new core.Duration.new({milliseconds: 250})).then(core.Null, dart.fn(_ => {
          js.context.callMethod("__notifyFlutterRendered", [false]);
        }, T$.dynamicToNull()));
      }
    }, T$.VoidToNull()), dart.fn((e, stackTrace) => {
      if (js.context.hasProperty("zappHandlerUserError")) {
        js.context.callMethod("zappHandlerUserError", [e[$toString](), stackTrace.toString()]);
      }
    }, T$.ObjectAndStackTraceTovoid()), {zoneSpecification: new async._ZoneSpecification.new({print: dart.fn((self, parent, zone, line) => {
          if (js.context.hasProperty("zappHandlerUserPrint")) {
            js.context.callMethod("zappHandlerUserPrint", [line]);
          }
        }, T$.ZoneAndZoneDelegateAndZone__Tovoid())})});
  };
  $46zapp_entry.main = function main$() {
    return async.async(dart.void, function* main() {
      yield ui.webOnlyWarmupEngine({runApp: dart.fn(() => {
          $46zapp_entry.runAppGuarded();
        }, T$.VoidToNull()), registerPlugins: dart.fn(() => {
          web_plugin_registrant.registerPlugins();
        }, T$.VoidToNull())});
    });
  };
  main.MyApp = class MyApp extends framework.StatelessWidget {
    build(context) {
      return new app.MaterialApp.new({title: "Aplicativo da Isabelle", theme: theme_data.ThemeData.new({primarySwatch: colors.Colors.green}), home: new login.Login.new(), routes: new (T$.IdentityMapOfString$BuildContextToWidget()).from(["/products", dart.fn(context => new products.Products.new(), T$.BuildContextToProducts()), "/cart", dart.fn(context => new cart.Cart.new(), T$.BuildContextToCart()), "/purchase_confirmation", dart.fn(context => new purchase_confirmation.PurchaseConfirmation.new(), T$.BuildContextToPurchaseConfirmation()), "/home", dart.fn(context => new login.Login.new(), T$.BuildContextToLogin()), "/register", dart.fn(context => new register.Register.new(), T$.BuildContextToRegister())])});
    }
    static ['_#new#tearOff']() {
      return new main.MyApp.new();
    }
  };
  (main.MyApp.new = function() {
    main.MyApp.__proto__.new.call(this);
    ;
  }).prototype = main.MyApp.prototype;
  dart.addTypeTests(main.MyApp);
  dart.addTypeCaches(main.MyApp);
  dart.setMethodSignature(main.MyApp, () => ({
    __proto__: dart.getMethods(main.MyApp.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.MyApp, I[0]);
  main.main = function main$0() {
    binding.runApp(new (T$.ChangeNotifierProviderOfCartRepository()).new({create: dart.fn(context => new cart_repository.CartRepository.new(), T$.BuildContextToCartRepository()), child: new main.MyApp.new()}));
  };
  web_plugin_registrant.registerPlugins = function registerPlugins() {
  };
  var _lista = dart.privateName(cart_repository, "_lista");
  cart_repository.CartRepository = class CartRepository extends change_notifier.ChangeNotifier {
    get lista() {
      return new (T$.UnmodifiableListViewOfProduct()).new(this[_lista]);
    }
    saveAll(products) {
      products[$forEach](dart.fn(product => {
        if (!this[_lista][$contains](product)) this[_lista][$add](product);
      }, T$.ProductTovoid()));
      this.notifyListeners();
    }
    remove(product) {
      this[_lista][$remove](product);
      this.notifyListeners();
    }
    static ['_#new#tearOff']() {
      return new cart_repository.CartRepository.new();
    }
  };
  (cart_repository.CartRepository.new = function() {
    this[_lista] = T$.JSArrayOfProduct().of([]);
    cart_repository.CartRepository.__proto__.new.call(this);
    ;
  }).prototype = cart_repository.CartRepository.prototype;
  dart.addTypeTests(cart_repository.CartRepository);
  dart.addTypeCaches(cart_repository.CartRepository);
  dart.setMethodSignature(cart_repository.CartRepository, () => ({
    __proto__: dart.getMethods(cart_repository.CartRepository.__proto__),
    saveAll: dart.fnType(dart.dynamic, [core.List$(product.Product)]),
    remove: dart.fnType(dart.dynamic, [product.Product])
  }));
  dart.setGetterSignature(cart_repository.CartRepository, () => ({
    __proto__: dart.getGetters(cart_repository.CartRepository.__proto__),
    lista: collection.UnmodifiableListView$(product.Product)
  }));
  dart.setLibraryUri(cart_repository.CartRepository, I[1]);
  dart.setFieldSignature(cart_repository.CartRepository, () => ({
    __proto__: dart.getFields(cart_repository.CartRepository.__proto__),
    [_lista]: dart.fieldType(core.List$(product.Product))
  }));
  cart.Cart = class Cart extends framework.StatefulWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new cart.Cart.new({key: key});
    }
    createState() {
      return new cart._CartState.new();
    }
  };
  (cart.Cart.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    cart.Cart.__proto__.new.call(this, {key: key});
    ;
  }).prototype = cart.Cart.prototype;
  dart.addTypeTests(cart.Cart);
  dart.addTypeCaches(cart.Cart);
  dart.setMethodSignature(cart.Cart, () => ({
    __proto__: dart.getMethods(cart.Cart.__proto__),
    createState: dart.fnType(cart._CartState, [])
  }));
  dart.setLibraryUri(cart.Cart, I[2]);
  cart._CartState = class _CartState extends framework.State$(cart.Cart) {
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: new text.Text.new("Carrinho"), actions: T$.JSArrayOfWidget().of([new icon_button.IconButton.new({icon: new icon.Icon.new(icons.Icons.attach_money, {color: colors.Colors.white}), onPressed: dart.fn(() => {
                navigator.Navigator.of(context).pushNamed(T$.ObjectN(), "/purchase_confirmation");
              }, T$.VoidTovoid())})])}), body: new container.Container.new({color: colors.Colors.indigo.withOpacity(0.05), height: media_query.MediaQuery.of(context).size.height, padding: new edge_insets.EdgeInsets.all(12), child: new (T$.ConsumerOfCartRepository()).new({builder: dart.fn((context, itens, child) => itens.lista[$isEmpty] ? new list_tile.ListTile.new({leading: new icon.Icon.new(icons.Icons.star), title: new text.Text.new("Ainda não há itens no carrinho")}) : new scroll_view.ListView.builder({itemCount: itens.lista.length, itemBuilder: dart.fn((_, index) => new product_card.ProductCard.new({product: itens.lista._get(index)}), T$.BuildContextAndintToProductCard())}), T$.BuildContextAndCartRepositoryAndWidgetNToStatelessWidget())})})});
    }
    static ['_#new#tearOff']() {
      return new cart._CartState.new();
    }
  };
  (cart._CartState.new = function() {
    cart._CartState.__proto__.new.call(this);
    ;
  }).prototype = cart._CartState.prototype;
  dart.addTypeTests(cart._CartState);
  dart.addTypeCaches(cart._CartState);
  dart.setMethodSignature(cart._CartState, () => ({
    __proto__: dart.getMethods(cart._CartState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(cart._CartState, I[2]);
  login.Login = class Login extends framework.StatefulWidget {
    createState() {
      return new login._LoginState.new();
    }
    static ['_#new#tearOff']() {
      return new login.Login.new();
    }
  };
  (login.Login.new = function() {
    login.Login.__proto__.new.call(this);
    ;
  }).prototype = login.Login.prototype;
  dart.addTypeTests(login.Login);
  dart.addTypeCaches(login.Login);
  dart.setMethodSignature(login.Login, () => ({
    __proto__: dart.getMethods(login.Login.__proto__),
    createState: dart.fnType(framework.State$(framework.StatefulWidget), [])
  }));
  dart.setLibraryUri(login.Login, I[3]);
  var Widget_key = dart.privateName(framework, "Widget.key");
  var Text_selectionColor = dart.privateName(text, "Text.selectionColor");
  var Text_textHeightBehavior = dart.privateName(text, "Text.textHeightBehavior");
  var Text_textWidthBasis = dart.privateName(text, "Text.textWidthBasis");
  var Text_semanticsLabel = dart.privateName(text, "Text.semanticsLabel");
  var Text_maxLines = dart.privateName(text, "Text.maxLines");
  var Text_textScaleFactor = dart.privateName(text, "Text.textScaleFactor");
  var Text_overflow = dart.privateName(text, "Text.overflow");
  var Text_softWrap = dart.privateName(text, "Text.softWrap");
  var Text_locale = dart.privateName(text, "Text.locale");
  var Text_textDirection = dart.privateName(text, "Text.textDirection");
  var Text_textAlign = dart.privateName(text, "Text.textAlign");
  var Text_strutStyle = dart.privateName(text, "Text.strutStyle");
  var Text_style = dart.privateName(text, "Text.style");
  var Text_textSpan = dart.privateName(text, "Text.textSpan");
  var Text_data = dart.privateName(text, "Text.data");
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  var SingleChildRenderObjectWidget_child = dart.privateName(framework, "SingleChildRenderObjectWidget.child");
  var SizedBox_height = dart.privateName(basic, "SizedBox.height");
  var SizedBox_width = dart.privateName(basic, "SizedBox.width");
  var TextStyle_overflow = dart.privateName(text_style, "TextStyle.overflow");
  var TextStyle_fontVariations = dart.privateName(text_style, "TextStyle.fontVariations");
  var TextStyle_fontFeatures = dart.privateName(text_style, "TextStyle.fontFeatures");
  var TextStyle_shadows = dart.privateName(text_style, "TextStyle.shadows");
  var TextStyle_debugLabel = dart.privateName(text_style, "TextStyle.debugLabel");
  var TextStyle_decorationThickness = dart.privateName(text_style, "TextStyle.decorationThickness");
  var TextStyle_decorationStyle = dart.privateName(text_style, "TextStyle.decorationStyle");
  var TextStyle_decorationColor = dart.privateName(text_style, "TextStyle.decorationColor");
  var TextStyle_decoration = dart.privateName(text_style, "TextStyle.decoration");
  var TextStyle_background = dart.privateName(text_style, "TextStyle.background");
  var TextStyle_foreground = dart.privateName(text_style, "TextStyle.foreground");
  var TextStyle_locale = dart.privateName(text_style, "TextStyle.locale");
  var TextStyle_leadingDistribution = dart.privateName(text_style, "TextStyle.leadingDistribution");
  var TextStyle_height = dart.privateName(text_style, "TextStyle.height");
  var TextStyle_textBaseline = dart.privateName(text_style, "TextStyle.textBaseline");
  var TextStyle_wordSpacing = dart.privateName(text_style, "TextStyle.wordSpacing");
  var TextStyle_letterSpacing = dart.privateName(text_style, "TextStyle.letterSpacing");
  var TextStyle_fontStyle = dart.privateName(text_style, "TextStyle.fontStyle");
  var FontWeight_value = dart.privateName(ui, "FontWeight.value");
  var FontWeight_index = dart.privateName(ui, "FontWeight.index");
  var TextStyle_fontWeight = dart.privateName(text_style, "TextStyle.fontWeight");
  var TextStyle_fontSize = dart.privateName(text_style, "TextStyle.fontSize");
  var TextStyle__package = dart.privateName(text_style, "TextStyle._package");
  var TextStyle__fontFamilyFallback = dart.privateName(text_style, "TextStyle._fontFamilyFallback");
  var TextStyle_fontFamily = dart.privateName(text_style, "TextStyle.fontFamily");
  var TextStyle_backgroundColor = dart.privateName(text_style, "TextStyle.backgroundColor");
  var TextStyle_color = dart.privateName(text_style, "TextStyle.color");
  var TextStyle_inherit = dart.privateName(text_style, "TextStyle.inherit");
  login._LoginState = class _LoginState extends framework.State$(login.Login) {
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: C[1] || CT.C1}), body: new single_child_scroll_view.SingleChildScrollView.new({child: new form.Form.new({key: this.formKey, child: new basic.Padding.new({padding: C[2] || CT.C2, child: new basic.Column.new({children: T$.JSArrayOfWidget().of([new image.Image.asset("assets/images/market_logo.png", {height: 200, width: 200}), C[3] || CT.C3, new custom_text_field.CustomTextField.new({label: "Nome de usuário", prefix_icon: icons.Icons.person_outline, suffix_icon: null, validator: dart.fn(text => text == null || text[$isEmpty] ? "Esse campo deve ser preenchido" : null, T$.StringNToStringN()), onSaved: null}), C[4] || CT.C4, new custom_text_field.CustomTextField.new({label: "Senha", prefix_icon: icons.Icons.vpn_key, suffix_icon: icons.Icons.visibility_off, validator: dart.fn(text => {
                      if (text == null || text[$isEmpty]) {
                        return "Esse campo deve ser preenchido";
                      }
                      if (!validator.isEmail(text)) {
                        return "Formato inválido para e-mail";
                      }
                    }, T$.StringNToStringN()), onSaved: null}), C[3] || CT.C3, new basic.SizedBox.new({width: 1 / 0, height: 50, child: new elevated_button.ElevatedButton.new({onPressed: dart.fn(() => {
                        if (dart.nullCheck(this.formKey.currentState).validate()) {
                          navigator.Navigator.of(context).pushNamed(T$.ObjectN(), "/products");
                        }
                      }, T$.VoidTovoid()), child: C[5] || CT.C5})}), C[4] || CT.C4, new basic.SizedBox.new({width: 1 / 0, height: 50, child: new outlined_button.OutlinedButton.new({onPressed: dart.fn(() => {
                        navigator.Navigator.of(context).pushNamed(T$.ObjectN(), "/register");
                      }, T$.VoidTovoid()), child: new text.Text.new("Não tem uma conta? Cadastre-se", {style: new text_style.TextStyle.new({fontSize: 15, fontWeight: ui.FontWeight.w500})}), style: outlined_button.OutlinedButton.styleFrom({shape: new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.circular(5)}), side: new borders.BorderSide.new({color: colors.Colors.deepOrange, width: 2})})})})])})})})})});
    }
    static ['_#new#tearOff']() {
      return new login._LoginState.new();
    }
  };
  (login._LoginState.new = function() {
    this.formKey = T$.GlobalKeyOfFormState().new();
    login._LoginState.__proto__.new.call(this);
    ;
  }).prototype = login._LoginState.prototype;
  dart.addTypeTests(login._LoginState);
  dart.addTypeCaches(login._LoginState);
  dart.setMethodSignature(login._LoginState, () => ({
    __proto__: dart.getMethods(login._LoginState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(login._LoginState, I[3]);
  dart.setFieldSignature(login._LoginState, () => ({
    __proto__: dart.getFields(login._LoginState.__proto__),
    formKey: dart.finalFieldType(framework.GlobalKey$(form.FormState))
  }));
  products.Products = class Products extends framework.StatefulWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new products.Products.new({key: key});
    }
    createState() {
      return new products._ProductsState.new();
    }
  };
  (products.Products.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    products.Products.__proto__.new.call(this, {key: key});
    ;
  }).prototype = products.Products.prototype;
  dart.addTypeTests(products.Products);
  dart.addTypeCaches(products.Products);
  dart.setMethodSignature(products.Products, () => ({
    __proto__: dart.getMethods(products.Products.__proto__),
    createState: dart.fnType(products._ProductsState, [])
  }));
  dart.setLibraryUri(products.Products, I[4]);
  var ___ProductsState_itens = dart.privateName(products, "_#_ProductsState#itens");
  products._ProductsState = class _ProductsState extends framework.State$(products.Products) {
    get itens() {
      let t0;
      t0 = this[___ProductsState_itens];
      return t0 == null ? dart.throw(new _internal.LateError.fieldNI("itens")) : t0;
    }
    set itens(itens$35param) {
      this[___ProductsState_itens] = itens$35param;
    }
    showDetails(product) {
      navigator.Navigator.push(dart.dynamic, this.context, new page.MaterialPageRoute.new({builder: dart.fn(_ => new product_details.ProductDetails.new({product: product}), T$.BuildContextToProductDetails())}));
    }
    cleanChoosed() {
      this.setState(dart.fn(() => {
        this.choosed = T$.JSArrayOfProduct().of([]);
      }, T$.VoidTovoid()));
    }
    build(context) {
      this.itens = provider$['WatchContext|watch'](cart_repository.CartRepository, context);
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: C[8] || CT.C8, actions: T$.JSArrayOfWidget().of([new icon_button.IconButton.new({icon: new icon.Icon.new(icons.Icons.shopping_cart, {color: colors.Colors.white}), onPressed: dart.fn(() => {
                navigator.Navigator.of(context).pushNamed(T$.ObjectN(), "/cart");
              }, T$.VoidTovoid())})])}), body: new scroll_view.ListView.separated({itemBuilder: dart.fn((context, product) => new list_tile.ListTile.new({shape: new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.all(new ui.Radius.circular(5))}), leading: this.choosed[$contains](this.table[$_get](product)) ? new circle_avatar.CircleAvatar.new({child: new icon.Icon.new(icons.Icons.check)}) : new basic.SizedBox.new({child: new image.Image.asset(this.table[$_get](product).icon), width: 32}), title: new basic.Row.new({children: (() => {
                let t0 = T$.JSArrayOfWidget().of([new text.Text.new(this.table[$_get](product).nome, {style: new text_style.TextStyle.new({fontSize: 18, fontWeight: ui.FontWeight.w500})})]);
                if (this.itens.lista[$contains](this.table[$_get](product))) t0.push(new icon.Icon.new(icons.Icons.shopping_cart, {color: colors.Colors.deepOrange, size: 8}));
                return t0;
              })()}), trailing: new text.Text.new(this.real.format(this.table[$_get](product).preco), {style: new text_style.TextStyle.new({fontSize: 16})}), selected: this.choosed[$contains](this.table[$_get](product)), selectedTileColor: colors.Colors.indigo._get(50), onLongPress: dart.fn(() => {
              this.setState(dart.fn(() => {
                this.choosed[$contains](this.table[$_get](product)) ? this.choosed[$remove](this.table[$_get](product)) : this.choosed[$add](this.table[$_get](product));
              }, T$.VoidTovoid()));
            }, T$.VoidTovoid()), onTap: dart.fn(() => this.showDetails(this.table[$_get](product)), T$.VoidTovoid())}), T$.BuildContextAndintToListTile()), padding: new edge_insets.EdgeInsets.all(15), separatorBuilder: dart.fn((_, ___) => new divider.Divider.new(), T$.BuildContextAndintToDivider()), itemCount: this.table[$length]}), floatingActionButtonLocation: floating_action_button_location.FloatingActionButtonLocation.centerFloat, floatingActionButton: this.choosed[$isNotEmpty] ? new floating_action_button.FloatingActionButton.extended({onPressed: dart.fn(() => {
            this.itens.saveAll(this.choosed);
            this.cleanChoosed();
          }, T$.VoidTovoid()), icon: new icon.Icon.new(icons.Icons.shopping_cart), label: new text.Text.new("Adicionar ao carrinho", {style: new text_style.TextStyle.new({fontSize: 15, fontWeight: ui.FontWeight.w500})})}) : null});
    }
    static ['_#new#tearOff']() {
      return new products._ProductsState.new();
    }
  };
  (products._ProductsState.new = function() {
    this.table = products_repository.ProductsRepository.table;
    this.real = number_format.NumberFormat.currency({locale: "pt-BR", name: "R$"});
    this.choosed = T$.JSArrayOfProduct().of([]);
    this[___ProductsState_itens] = null;
    products._ProductsState.__proto__.new.call(this);
    ;
  }).prototype = products._ProductsState.prototype;
  dart.addTypeTests(products._ProductsState);
  dart.addTypeCaches(products._ProductsState);
  dart.setMethodSignature(products._ProductsState, () => ({
    __proto__: dart.getMethods(products._ProductsState.__proto__),
    showDetails: dart.fnType(dart.dynamic, [product.Product]),
    cleanChoosed: dart.fnType(dart.dynamic, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(products._ProductsState, () => ({
    __proto__: dart.getGetters(products._ProductsState.__proto__),
    itens: cart_repository.CartRepository
  }));
  dart.setSetterSignature(products._ProductsState, () => ({
    __proto__: dart.getSetters(products._ProductsState.__proto__),
    itens: cart_repository.CartRepository
  }));
  dart.setLibraryUri(products._ProductsState, I[4]);
  dart.setFieldSignature(products._ProductsState, () => ({
    __proto__: dart.getFields(products._ProductsState.__proto__),
    table: dart.finalFieldType(core.List$(product.Product)),
    real: dart.fieldType(number_format.NumberFormat),
    choosed: dart.fieldType(core.List$(product.Product)),
    [___ProductsState_itens]: dart.fieldType(dart.nullable(cart_repository.CartRepository))
  }));
  purchase_confirmation.PurchaseConfirmation = class PurchaseConfirmation extends framework.StatefulWidget {
    createState() {
      return new purchase_confirmation._PurchaseConfirmationState.new();
    }
    static ['_#new#tearOff']() {
      return new purchase_confirmation.PurchaseConfirmation.new();
    }
  };
  (purchase_confirmation.PurchaseConfirmation.new = function() {
    purchase_confirmation.PurchaseConfirmation.__proto__.new.call(this);
    ;
  }).prototype = purchase_confirmation.PurchaseConfirmation.prototype;
  dart.addTypeTests(purchase_confirmation.PurchaseConfirmation);
  dart.addTypeCaches(purchase_confirmation.PurchaseConfirmation);
  dart.setMethodSignature(purchase_confirmation.PurchaseConfirmation, () => ({
    __proto__: dart.getMethods(purchase_confirmation.PurchaseConfirmation.__proto__),
    createState: dart.fnType(framework.State$(framework.StatefulWidget), [])
  }));
  dart.setLibraryUri(purchase_confirmation.PurchaseConfirmation, I[5]);
  purchase_confirmation._PurchaseConfirmationState = class _PurchaseConfirmationState extends framework.State$(purchase_confirmation.PurchaseConfirmation) {
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: C[9] || CT.C9}), body: new single_child_scroll_view.SingleChildScrollView.new({child: new basic.Padding.new({padding: C[2] || CT.C2, child: new basic.Column.new({children: T$.JSArrayOfWidget().of([new image.Image.asset("assets/images/market_logo.png", {height: 200, width: 200}), C[3] || CT.C3, new text.Text.new("Seu pedido foi confirmado.", {style: new text_style.TextStyle.new({fontSize: 18, fontWeight: ui.FontWeight.w500})}), C[4] || CT.C4, new text.Text.new("Obrigada por comprar conosco!", {style: new text_style.TextStyle.new({fontSize: 18, fontWeight: ui.FontWeight.w500})}), C[3] || CT.C3, new basic.SizedBox.new({width: 1 / 0, height: 50, child: new elevated_button.ElevatedButton.new({onPressed: dart.fn(() => {
                      navigator.Navigator.of(context).pushNamed(T$.ObjectN(), "/products");
                    }, T$.VoidTovoid()), child: C[10] || CT.C10})})])})})})});
    }
    static ['_#new#tearOff']() {
      return new purchase_confirmation._PurchaseConfirmationState.new();
    }
  };
  (purchase_confirmation._PurchaseConfirmationState.new = function() {
    purchase_confirmation._PurchaseConfirmationState.__proto__.new.call(this);
    ;
  }).prototype = purchase_confirmation._PurchaseConfirmationState.prototype;
  dart.addTypeTests(purchase_confirmation._PurchaseConfirmationState);
  dart.addTypeCaches(purchase_confirmation._PurchaseConfirmationState);
  dart.setMethodSignature(purchase_confirmation._PurchaseConfirmationState, () => ({
    __proto__: dart.getMethods(purchase_confirmation._PurchaseConfirmationState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(purchase_confirmation._PurchaseConfirmationState, I[5]);
  register.Register = class Register extends framework.StatefulWidget {
    createState() {
      return new register._RegisterState.new();
    }
    static ['_#new#tearOff']() {
      return new register.Register.new();
    }
  };
  (register.Register.new = function() {
    register.Register.__proto__.new.call(this);
    ;
  }).prototype = register.Register.prototype;
  dart.addTypeTests(register.Register);
  dart.addTypeCaches(register.Register);
  dart.setMethodSignature(register.Register, () => ({
    __proto__: dart.getMethods(register.Register.__proto__),
    createState: dart.fnType(framework.State$(framework.StatefulWidget), [])
  }));
  dart.setLibraryUri(register.Register, I[6]);
  register._RegisterState = class _RegisterState extends framework.State$(register.Register) {
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: C[1] || CT.C1}), body: new single_child_scroll_view.SingleChildScrollView.new({child: new form.Form.new({key: this.formKey, child: new basic.Padding.new({padding: C[2] || CT.C2, child: new basic.Column.new({children: T$.JSArrayOfWidget().of([new custom_text_field.CustomTextField.new({label: "Nome", prefix_icon: icons.Icons.person, suffix_icon: null, validator: dart.fn(text => text == null || text[$isEmpty] ? "Esse campo deve ser preenchido" : null, T$.StringNToStringN()), onSaved: dart.fn(text => this.user = this.user.copyWith({nome: text}), T$.StringNTovoid())}), C[4] || CT.C4, new custom_text_field.CustomTextField.new({label: "Nome de usuário", prefix_icon: icons.Icons.person_outlined, suffix_icon: null, validator: dart.fn(text => text == null || text[$isEmpty] ? "Esse campo deve ser preenchido" : null, T$.StringNToStringN()), onSaved: dart.fn(text => this.user = this.user.copyWith({nome_usuario: text}), T$.StringNTovoid())}), C[4] || CT.C4, new custom_text_field.CustomTextField.new({label: "Senha", prefix_icon: icons.Icons.vpn_key, suffix_icon: null, validator: dart.fn(text => text == null || text[$isEmpty] ? "Esse campo deve ser preenchido" : null, T$.StringNToStringN()), onSaved: dart.fn(text => this.user = this.user.copyWith({nome_usuario: text}), T$.StringNTovoid())}), C[4] || CT.C4, new custom_text_field.CustomTextField.new({label: "E-mail", prefix_icon: icons.Icons.mail, suffix_icon: null, validator: dart.fn(text => {
                      if (text == null || text[$isEmpty]) {
                        return "Esse campo deve ser preenchido";
                      }
                      if (!validator.isEmail(text)) {
                        return "Formato inválido para e-mail";
                      }
                    }, T$.StringNToStringN()), onSaved: dart.fn(text => this.user = this.user.copyWith({email: text}), T$.StringNTovoid())}), C[4] || CT.C4, new custom_text_field.CustomTextField.new({label: "Endereço", prefix_icon: icons.Icons.place, suffix_icon: null, validator: dart.fn(text => text == null || text[$isEmpty] ? "Esse campo deve ser preenchido" : null, T$.StringNToStringN()), onSaved: dart.fn(text => this.user = this.user.copyWith({endereco: text}), T$.StringNTovoid())}), C[4] || CT.C4, new custom_text_field.CustomTextField.new({label: "Número", prefix_icon: icons.Icons.numbers, suffix_icon: null, validator: dart.fn(text => text == null || text[$isEmpty] ? "Esse campo deve ser preenchido" : null, T$.StringNToStringN()), onSaved: dart.fn(text => this.user = this.user.copyWith({numero: text}), T$.StringNTovoid())}), C[4] || CT.C4, new custom_text_field.CustomTextField.new({label: "Complemento", prefix_icon: icons.Icons.location_city, suffix_icon: null, validator: dart.fn(text => text == null || text[$isEmpty] ? "Esse campo deve ser preenchido" : null, T$.StringNToStringN()), onSaved: dart.fn(text => this.user = this.user.copyWith({complemento: text}), T$.StringNTovoid())}), C[4] || CT.C4, new custom_text_field.CustomTextField.new({label: "UF", prefix_icon: icons.Icons.map, suffix_icon: null, validator: dart.fn(text => text == null || text[$isEmpty] ? "Esse campo deve ser preenchido" : null, T$.StringNToStringN()), onSaved: dart.fn(text => this.user = this.user.copyWith({uf: text}), T$.StringNTovoid())}), C[4] || CT.C4, new custom_text_field.CustomTextField.new({label: "CEP", prefix_icon: icons.Icons.numbers, suffix_icon: null, validator: dart.fn(text => text == null || text[$isEmpty] ? "Esse campo deve ser preenchido" : null, T$.StringNToStringN()), onSaved: dart.fn(text => this.user = this.user.copyWith({cep: text}), T$.StringNTovoid())}), C[3] || CT.C3, new basic.SizedBox.new({width: 1 / 0, height: 50, child: new elevated_button.ElevatedButton.new({onPressed: dart.fn(() => {
                        if (dart.nullCheck(this.formKey.currentState).validate()) {
                          dart.nullCheck(this.formKey.currentState).save();
                          navigator.Navigator.of(context).push(dart.dynamic, new page.MaterialPageRoute.new({builder: dart.fn(context => new profile.Profile.new({nome: this.user.nome, email: this.user.email, endereco: this.user.endereco, numero: this.user.numero, complemento: this.user.complemento, uf: this.user.uf, cep: this.user.cep}), T$.BuildContextToProfile())}));
                        }
                      }, T$.VoidTovoid()), child: C[11] || CT.C11})}), C[4] || CT.C4, new basic.SizedBox.new({width: 1 / 0, height: 50, child: new outlined_button.OutlinedButton.new({onPressed: dart.fn(() => {
                        navigator.Navigator.of(context).pushNamed(T$.ObjectN(), "/home");
                      }, T$.VoidTovoid()), child: new text.Text.new("Já tem uma conta? Faça login", {style: new text_style.TextStyle.new({fontSize: 15, fontWeight: ui.FontWeight.w500})}), style: outlined_button.OutlinedButton.styleFrom({shape: new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.circular(5)}), side: new borders.BorderSide.new({color: colors.Colors.deepOrange, width: 2})})})})])})})})})});
    }
    static ['_#new#tearOff']() {
      return new register._RegisterState.new();
    }
  };
  (register._RegisterState.new = function() {
    this.user = new register.UserModel.new();
    this.formKey = T$.GlobalKeyOfFormState().new();
    register._RegisterState.__proto__.new.call(this);
    ;
  }).prototype = register._RegisterState.prototype;
  dart.addTypeTests(register._RegisterState);
  dart.addTypeCaches(register._RegisterState);
  dart.setMethodSignature(register._RegisterState, () => ({
    __proto__: dart.getMethods(register._RegisterState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(register._RegisterState, I[6]);
  dart.setFieldSignature(register._RegisterState, () => ({
    __proto__: dart.getFields(register._RegisterState.__proto__),
    user: dart.fieldType(register.UserModel),
    formKey: dart.finalFieldType(framework.GlobalKey$(form.FormState))
  }));
  var nome$ = dart.privateName(register, "UserModel.nome");
  var email$ = dart.privateName(register, "UserModel.email");
  var endereco$ = dart.privateName(register, "UserModel.endereco");
  var numero$ = dart.privateName(register, "UserModel.numero");
  var complemento$ = dart.privateName(register, "UserModel.complemento");
  var uf$ = dart.privateName(register, "UserModel.uf");
  var cep$ = dart.privateName(register, "UserModel.cep");
  register.UserModel = class UserModel extends core.Object {
    get nome() {
      return this[nome$];
    }
    set nome(value) {
      super.nome = value;
    }
    get email() {
      return this[email$];
    }
    set email(value) {
      super.email = value;
    }
    get endereco() {
      return this[endereco$];
    }
    set endereco(value) {
      super.endereco = value;
    }
    get numero() {
      return this[numero$];
    }
    set numero(value) {
      super.numero = value;
    }
    get complemento() {
      return this[complemento$];
    }
    set complemento(value) {
      super.complemento = value;
    }
    get uf() {
      return this[uf$];
    }
    set uf(value) {
      super.uf = value;
    }
    get cep() {
      return this[cep$];
    }
    set cep(value) {
      super.cep = value;
    }
    static ['_#new#tearOff'](opts) {
      let nome = opts && 'nome' in opts ? opts.nome : "";
      let email = opts && 'email' in opts ? opts.email : "";
      let endereco = opts && 'endereco' in opts ? opts.endereco : "";
      let numero = opts && 'numero' in opts ? opts.numero : "";
      let complemento = opts && 'complemento' in opts ? opts.complemento : "";
      let uf = opts && 'uf' in opts ? opts.uf : "";
      let cep = opts && 'cep' in opts ? opts.cep : "";
      return new register.UserModel.new({nome: nome, email: email, endereco: endereco, numero: numero, complemento: complemento, uf: uf, cep: cep});
    }
    copyWith(opts) {
      let t1, t1$, t1$0, t1$1, t1$2, t1$3, t1$4;
      let nome = opts && 'nome' in opts ? opts.nome : null;
      let nome_usuario = opts && 'nome_usuario' in opts ? opts.nome_usuario : null;
      let email = opts && 'email' in opts ? opts.email : null;
      let endereco = opts && 'endereco' in opts ? opts.endereco : null;
      let numero = opts && 'numero' in opts ? opts.numero : null;
      let complemento = opts && 'complemento' in opts ? opts.complemento : null;
      let uf = opts && 'uf' in opts ? opts.uf : null;
      let cep = opts && 'cep' in opts ? opts.cep : null;
      return new register.UserModel.new({nome: (t1 = nome, t1 == null ? this.nome : t1), email: (t1$ = email, t1$ == null ? this.email : t1$), endereco: (t1$0 = endereco, t1$0 == null ? this.endereco : t1$0), numero: (t1$1 = numero, t1$1 == null ? this.numero : t1$1), complemento: (t1$2 = complemento, t1$2 == null ? this.complemento : t1$2), uf: (t1$3 = uf, t1$3 == null ? this.uf : t1$3), cep: (t1$4 = cep, t1$4 == null ? this.cep : t1$4)});
    }
  };
  (register.UserModel.new = function(opts) {
    let nome = opts && 'nome' in opts ? opts.nome : "";
    let email = opts && 'email' in opts ? opts.email : "";
    let endereco = opts && 'endereco' in opts ? opts.endereco : "";
    let numero = opts && 'numero' in opts ? opts.numero : "";
    let complemento = opts && 'complemento' in opts ? opts.complemento : "";
    let uf = opts && 'uf' in opts ? opts.uf : "";
    let cep = opts && 'cep' in opts ? opts.cep : "";
    this[nome$] = nome;
    this[email$] = email;
    this[endereco$] = endereco;
    this[numero$] = numero;
    this[complemento$] = complemento;
    this[uf$] = uf;
    this[cep$] = cep;
    ;
  }).prototype = register.UserModel.prototype;
  dart.addTypeTests(register.UserModel);
  dart.addTypeCaches(register.UserModel);
  dart.setMethodSignature(register.UserModel, () => ({
    __proto__: dart.getMethods(register.UserModel.__proto__),
    copyWith: dart.fnType(register.UserModel, [], {cep: dart.nullable(core.String), complemento: dart.nullable(core.String), email: dart.nullable(core.String), endereco: dart.nullable(core.String), nome: dart.nullable(core.String), nome_usuario: dart.nullable(core.String), numero: dart.nullable(core.String), uf: dart.nullable(core.String)}, {})
  }));
  dart.setLibraryUri(register.UserModel, I[6]);
  dart.setFieldSignature(register.UserModel, () => ({
    __proto__: dart.getFields(register.UserModel.__proto__),
    nome: dart.finalFieldType(core.String),
    email: dart.finalFieldType(core.String),
    endereco: dart.finalFieldType(core.String),
    numero: dart.finalFieldType(core.String),
    complemento: dart.finalFieldType(core.String),
    uf: dart.finalFieldType(core.String),
    cep: dart.finalFieldType(core.String)
  }));
  var nome$0 = dart.privateName(product, "Product.nome");
  var preco$ = dart.privateName(product, "Product.preco");
  var icon$ = dart.privateName(product, "Product.icon");
  product.Product = class Product extends core.Object {
    get nome() {
      return this[nome$0];
    }
    set nome(value) {
      super.nome = value;
    }
    get preco() {
      return this[preco$];
    }
    set preco(value) {
      super.preco = value;
    }
    get icon() {
      return this[icon$];
    }
    set icon(value) {
      super.icon = value;
    }
    static ['_#new#tearOff'](opts) {
      let nome = opts && 'nome' in opts ? opts.nome : null;
      let preco = opts && 'preco' in opts ? opts.preco : null;
      let icon = opts && 'icon' in opts ? opts.icon : null;
      return new product.Product.new({nome: nome, preco: preco, icon: icon});
    }
  };
  (product.Product.new = function(opts) {
    let nome = opts && 'nome' in opts ? opts.nome : null;
    let preco = opts && 'preco' in opts ? opts.preco : null;
    let icon = opts && 'icon' in opts ? opts.icon : null;
    this[nome$0] = nome;
    this[preco$] = preco;
    this[icon$] = icon;
    ;
  }).prototype = product.Product.prototype;
  dart.addTypeTests(product.Product);
  dart.addTypeCaches(product.Product);
  dart.setLibraryUri(product.Product, I[7]);
  dart.setFieldSignature(product.Product, () => ({
    __proto__: dart.getFields(product.Product.__proto__),
    nome: dart.finalFieldType(core.String),
    preco: dart.finalFieldType(core.double),
    icon: dart.finalFieldType(core.String)
  }));
  var product$ = dart.privateName(product_card, "ProductCard.product");
  product_card.ProductCard = class ProductCard extends framework.StatefulWidget {
    get product() {
      return this[product$];
    }
    set product(value) {
      this[product$] = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let product = opts && 'product' in opts ? opts.product : null;
      return new product_card.ProductCard.new({key: key, product: product});
    }
    createState() {
      return new product_card._ProductCardState.new();
    }
  };
  (product_card.ProductCard.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let product = opts && 'product' in opts ? opts.product : null;
    this[product$] = product;
    product_card.ProductCard.__proto__.new.call(this, {key: key});
    ;
  }).prototype = product_card.ProductCard.prototype;
  dart.addTypeTests(product_card.ProductCard);
  dart.addTypeCaches(product_card.ProductCard);
  dart.setMethodSignature(product_card.ProductCard, () => ({
    __proto__: dart.getMethods(product_card.ProductCard.__proto__),
    createState: dart.fnType(product_card._ProductCardState, [])
  }));
  dart.setLibraryUri(product_card.ProductCard, I[8]);
  dart.setFieldSignature(product_card.ProductCard, () => ({
    __proto__: dart.getFields(product_card.ProductCard.__proto__),
    product: dart.fieldType(product.Product)
  }));
  product_card._ProductCardState = class _ProductCardState extends framework.State$(product_card.ProductCard) {
    abrirDetalhes() {
      navigator.Navigator.push(dart.dynamic, this.context, new page.MaterialPageRoute.new({builder: dart.fn(_ => new product_details.ProductDetails.new({product: this.widget.product}), T$.BuildContextToProductDetails())}));
    }
    build(context) {
      return new card.Card.new({margin: new edge_insets.EdgeInsets.only({top: 12}), elevation: 2, child: new ink_well.InkWell.new({onTap: dart.fn(() => this.abrirDetalhes(), T$.VoidTovoid()), child: new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({top: 20, bottom: 20, left: 20}), child: new basic.Row.new({children: T$.JSArrayOfWidget().of([new image.Image.asset(this.widget.product.icon, {height: 32}), new basic.Expanded.new({child: new container.Container.new({margin: new edge_insets.EdgeInsets.only({left: 12}), child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T$.JSArrayOfWidget().of([new text.Text.new(this.widget.product.nome, {style: new text_style.TextStyle.new({fontSize: 18, fontWeight: ui.FontWeight.w500})})])})})}), new container.Container.new({padding: new edge_insets.EdgeInsets.symmetric({vertical: 10, horizontal: 20}), decoration: new box_decoration.BoxDecoration.new({color: dart.nullCheck(product_card._ProductCardState.precoColor[$_get]("down")).withOpacity(0.05), border: box_border.Border.all({color: dart.nullCheck(product_card._ProductCardState.precoColor[$_get]("down")).withOpacity(0.4)}), borderRadius: new border_radius.BorderRadius.circular(100)}), child: new text.Text.new(this.real.format(this.widget.product.preco), {style: new text_style.TextStyle.new({fontSize: 16, color: product_card._ProductCardState.precoColor[$_get]("down")})})}), new popup_menu.PopupMenuButton.new({icon: new icon.Icon.new(icons.Icons.more_vert), itemBuilder: dart.fn(context => T$.JSArrayOfPopupMenuItem().of([new popup_menu.PopupMenuItem.new({child: new list_tile.ListTile.new({title: new text.Text.new("Remover do carrinho"), onTap: dart.fn(() => {
                          navigator.Navigator.pop(T$.ObjectN(), context);
                          provider$.Provider.of(cart_repository.CartRepository, context, {listen: false}).remove(this.widget.product);
                        }, T$.VoidTovoid())})})]), T$.BuildContextToListOfPopupMenuItem())})])})})})});
    }
    static ['_#new#tearOff']() {
      return new product_card._ProductCardState.new();
    }
  };
  (product_card._ProductCardState.new = function() {
    this.real = number_format.NumberFormat.currency({locale: "pt_BR", name: "R$"});
    product_card._ProductCardState.__proto__.new.call(this);
    ;
  }).prototype = product_card._ProductCardState.prototype;
  dart.addTypeTests(product_card._ProductCardState);
  dart.addTypeCaches(product_card._ProductCardState);
  dart.setMethodSignature(product_card._ProductCardState, () => ({
    __proto__: dart.getMethods(product_card._ProductCardState.__proto__),
    abrirDetalhes: dart.fnType(dart.dynamic, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(product_card._ProductCardState, I[8]);
  dart.setFieldSignature(product_card._ProductCardState, () => ({
    __proto__: dart.getFields(product_card._ProductCardState.__proto__),
    real: dart.fieldType(number_format.NumberFormat)
  }));
  dart.setStaticFieldSignature(product_card._ProductCardState, () => ['precoColor']);
  dart.defineLazy(product_card._ProductCardState, {
    /*product_card._ProductCardState.precoColor*/get precoColor() {
      return new (T$.IdentityMapOfString$Color()).from(["up", colors.Colors.green, "down", colors.Colors.deepOrange]);
    },
    set precoColor(value) {}
  }, false);
  var label$ = dart.privateName(custom_text_field, "CustomTextField.label");
  var prefix_icon$ = dart.privateName(custom_text_field, "CustomTextField.prefix_icon");
  var suffix_icon$ = dart.privateName(custom_text_field, "CustomTextField.suffix_icon");
  var validator$ = dart.privateName(custom_text_field, "CustomTextField.validator");
  var onSaved$ = dart.privateName(custom_text_field, "CustomTextField.onSaved");
  custom_text_field.CustomTextField = class CustomTextField extends framework.StatelessWidget {
    get label() {
      return this[label$];
    }
    set label(value) {
      super.label = value;
    }
    get prefix_icon() {
      return this[prefix_icon$];
    }
    set prefix_icon(value) {
      super.prefix_icon = value;
    }
    get suffix_icon() {
      return this[suffix_icon$];
    }
    set suffix_icon(value) {
      super.suffix_icon = value;
    }
    get validator() {
      return this[validator$];
    }
    set validator(value) {
      super.validator = value;
    }
    get onSaved() {
      return this[onSaved$];
    }
    set onSaved(value) {
      super.onSaved = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let label = opts && 'label' in opts ? opts.label : null;
      let prefix_icon = opts && 'prefix_icon' in opts ? opts.prefix_icon : null;
      let suffix_icon = opts && 'suffix_icon' in opts ? opts.suffix_icon : null;
      let validator = opts && 'validator' in opts ? opts.validator : null;
      let onSaved = opts && 'onSaved' in opts ? opts.onSaved : null;
      return new custom_text_field.CustomTextField.new({key: key, label: label, prefix_icon: prefix_icon, suffix_icon: suffix_icon, validator: validator, onSaved: onSaved});
    }
    build(context) {
      return new text_form_field.TextFormField.new({validator: this.validator, onSaved: this.onSaved, decoration: new input_decorator.InputDecoration.new({labelText: this.label, hintText: "Digite o " + this.label, border: new input_border.OutlineInputBorder.new({borderRadius: new border_radius.BorderRadius.circular(5)}), prefixIcon: this.prefix_icon == null ? null : new icon.Icon.new(this.prefix_icon), suffixIcon: this.suffix_icon == null ? null : new icon.Icon.new(this.suffix_icon)})});
    }
  };
  (custom_text_field.CustomTextField.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let label = opts && 'label' in opts ? opts.label : null;
    let prefix_icon = opts && 'prefix_icon' in opts ? opts.prefix_icon : null;
    let suffix_icon = opts && 'suffix_icon' in opts ? opts.suffix_icon : null;
    let validator = opts && 'validator' in opts ? opts.validator : null;
    let onSaved = opts && 'onSaved' in opts ? opts.onSaved : null;
    this[label$] = label;
    this[prefix_icon$] = prefix_icon;
    this[suffix_icon$] = suffix_icon;
    this[validator$] = validator;
    this[onSaved$] = onSaved;
    custom_text_field.CustomTextField.__proto__.new.call(this, {key: key});
    ;
  }).prototype = custom_text_field.CustomTextField.prototype;
  dart.addTypeTests(custom_text_field.CustomTextField);
  dart.addTypeCaches(custom_text_field.CustomTextField);
  dart.setMethodSignature(custom_text_field.CustomTextField, () => ({
    __proto__: dart.getMethods(custom_text_field.CustomTextField.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(custom_text_field.CustomTextField, I[9]);
  dart.setFieldSignature(custom_text_field.CustomTextField, () => ({
    __proto__: dart.getFields(custom_text_field.CustomTextField.__proto__),
    label: dart.finalFieldType(core.String),
    prefix_icon: dart.finalFieldType(dart.nullable(icon_data.IconData)),
    suffix_icon: dart.finalFieldType(dart.nullable(icon_data.IconData)),
    validator: dart.finalFieldType(dart.nullable(dart.fnType(dart.nullable(core.String), [dart.nullable(core.String)]))),
    onSaved: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [dart.nullable(core.String)])))
  }));
  var nome$1 = dart.privateName(profile, "Profile.nome");
  var email$0 = dart.privateName(profile, "Profile.email");
  var endereco$0 = dart.privateName(profile, "Profile.endereco");
  var numero$0 = dart.privateName(profile, "Profile.numero");
  var complemento$0 = dart.privateName(profile, "Profile.complemento");
  var uf$0 = dart.privateName(profile, "Profile.uf");
  var cep$0 = dart.privateName(profile, "Profile.cep");
  profile.Profile = class Profile extends framework.StatelessWidget {
    get nome() {
      return this[nome$1];
    }
    set nome(value) {
      this[nome$1] = value;
    }
    get email() {
      return this[email$0];
    }
    set email(value) {
      this[email$0] = value;
    }
    get endereco() {
      return this[endereco$0];
    }
    set endereco(value) {
      this[endereco$0] = value;
    }
    get numero() {
      return this[numero$0];
    }
    set numero(value) {
      this[numero$0] = value;
    }
    get complemento() {
      return this[complemento$0];
    }
    set complemento(value) {
      this[complemento$0] = value;
    }
    get uf() {
      return this[uf$0];
    }
    set uf(value) {
      this[uf$0] = value;
    }
    get cep() {
      return this[cep$0];
    }
    set cep(value) {
      this[cep$0] = value;
    }
    static ['_#new#tearOff'](opts) {
      let nome = opts && 'nome' in opts ? opts.nome : null;
      let email = opts && 'email' in opts ? opts.email : null;
      let endereco = opts && 'endereco' in opts ? opts.endereco : null;
      let numero = opts && 'numero' in opts ? opts.numero : null;
      let complemento = opts && 'complemento' in opts ? opts.complemento : null;
      let uf = opts && 'uf' in opts ? opts.uf : null;
      let cep = opts && 'cep' in opts ? opts.cep : null;
      return new profile.Profile.new({nome: nome, email: email, endereco: endereco, numero: numero, complemento: complemento, uf: uf, cep: cep});
    }
    build(context) {
      return new scaffold.Scaffold.new({body: new basic.Center.new({child: new basic.Column.new({mainAxisAlignment: flex.MainAxisAlignment.center, crossAxisAlignment: flex.CrossAxisAlignment.start, children: T$.JSArrayOfWidget().of([new text.Text.new("Olá " + this.nome + "!", {style: new text_style.TextStyle.new({fontSize: 20, fontWeight: ui.FontWeight.bold, color: colors.Colors.pink})}), C[3] || CT.C3, new text.Text.new("E-mail: " + this.email), C[4] || CT.C4, new text.Text.new("Endereço: " + this.endereco), C[4] || CT.C4, new text.Text.new("Número: " + this.numero), C[4] || CT.C4, new text.Text.new("Complemento: " + this.complemento), C[4] || CT.C4, new text.Text.new("UF: " + this.uf), C[4] || CT.C4, new text.Text.new("CEP: " + this.cep), C[4] || CT.C4])})})});
    }
  };
  (profile.Profile.new = function(opts) {
    let nome = opts && 'nome' in opts ? opts.nome : null;
    let email = opts && 'email' in opts ? opts.email : null;
    let endereco = opts && 'endereco' in opts ? opts.endereco : null;
    let numero = opts && 'numero' in opts ? opts.numero : null;
    let complemento = opts && 'complemento' in opts ? opts.complemento : null;
    let uf = opts && 'uf' in opts ? opts.uf : null;
    let cep = opts && 'cep' in opts ? opts.cep : null;
    this[nome$1] = nome;
    this[email$0] = email;
    this[endereco$0] = endereco;
    this[numero$0] = numero;
    this[complemento$0] = complemento;
    this[uf$0] = uf;
    this[cep$0] = cep;
    profile.Profile.__proto__.new.call(this);
    ;
  }).prototype = profile.Profile.prototype;
  dart.addTypeTests(profile.Profile);
  dart.addTypeCaches(profile.Profile);
  dart.setMethodSignature(profile.Profile, () => ({
    __proto__: dart.getMethods(profile.Profile.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(profile.Profile, I[10]);
  dart.setFieldSignature(profile.Profile, () => ({
    __proto__: dart.getFields(profile.Profile.__proto__),
    nome: dart.fieldType(core.String),
    email: dart.fieldType(core.String),
    endereco: dart.fieldType(core.String),
    numero: dart.fieldType(core.String),
    complemento: dart.fieldType(core.String),
    uf: dart.fieldType(core.String),
    cep: dart.fieldType(core.String)
  }));
  products_repository.ProductsRepository = class ProductsRepository extends core.Object {
    static ['_#new#tearOff']() {
      return new products_repository.ProductsRepository.new();
    }
  };
  (products_repository.ProductsRepository.new = function() {
    ;
  }).prototype = products_repository.ProductsRepository.prototype;
  dart.addTypeTests(products_repository.ProductsRepository);
  dart.addTypeCaches(products_repository.ProductsRepository);
  dart.setLibraryUri(products_repository.ProductsRepository, I[11]);
  dart.setStaticFieldSignature(products_repository.ProductsRepository, () => ['table']);
  dart.defineLazy(products_repository.ProductsRepository, {
    /*products_repository.ProductsRepository.table*/get table() {
      return T$.JSArrayOfProduct().of([new product.Product.new({icon: "assets/images/products/espinafre.png", nome: "Espinafre", preco: 2.45}), new product.Product.new({icon: "assets/images/products/morango.png", nome: "Morango", preco: 4.79}), new product.Product.new({icon: "assets/images/products/cenoura.png", nome: "Cenoura", preco: 5.65}), new product.Product.new({icon: "assets/images/products/mirtilo.png", nome: "Mirtilo", preco: 6.15}), new product.Product.new({icon: "assets/images/products/pimenta.png", nome: "Pimentão", preco: 10.95}), new product.Product.new({icon: "assets/images/products/melancia.png", nome: "Melancia", preco: 7.89}), new product.Product.new({icon: "assets/images/products/batata.png", nome: "Batata Inglesa", preco: 3.5}), new product.Product.new({icon: "assets/images/products/alho.png", nome: "Alho", preco: 1.95}), new product.Product.new({icon: "assets/images/products/abobora.png", nome: "Abóbora Moranga", preco: 12.15}), new product.Product.new({icon: "assets/images/products/kiwi.png", nome: "Kiwi", preco: 8.65}), new product.Product.new({icon: "assets/images/products/abacate.png", nome: "Abacate", preco: 9.15})]);
    },
    set table(value) {}
  }, false);
  var product$0 = dart.privateName(product_details, "ProductDetails.product");
  product_details.ProductDetails = class ProductDetails extends framework.StatefulWidget {
    get product() {
      return this[product$0];
    }
    set product(value) {
      this[product$0] = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let product = opts && 'product' in opts ? opts.product : null;
      return new product_details.ProductDetails.new({key: key, product: product});
    }
    createState() {
      return new product_details._ProductDetailsState.new();
    }
  };
  (product_details.ProductDetails.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let product = opts && 'product' in opts ? opts.product : null;
    this[product$0] = product;
    product_details.ProductDetails.__proto__.new.call(this, {key: key});
    ;
  }).prototype = product_details.ProductDetails.prototype;
  dart.addTypeTests(product_details.ProductDetails);
  dart.addTypeCaches(product_details.ProductDetails);
  dart.setMethodSignature(product_details.ProductDetails, () => ({
    __proto__: dart.getMethods(product_details.ProductDetails.__proto__),
    createState: dart.fnType(product_details._ProductDetailsState, [])
  }));
  dart.setLibraryUri(product_details.ProductDetails, I[12]);
  dart.setFieldSignature(product_details.ProductDetails, () => ({
    __proto__: dart.getFields(product_details.ProductDetails.__proto__),
    product: dart.fieldType(product.Product)
  }));
  var _form = dart.privateName(product_details, "_form");
  var _valor = dart.privateName(product_details, "_valor");
  product_details._ProductDetailsState = class _ProductDetailsState extends framework.State$(product_details.ProductDetails) {
    comprar() {
      if (dart.nullCheck(this[_form].currentState).validate()) {
        navigator.Navigator.of(this.context).pushNamed(T$.ObjectN(), "/purchase_confirmation");
      }
    }
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: new text.Text.new(this.widget.product.nome)}), body: new basic.Padding.new({padding: new edge_insets.EdgeInsets.all(24), child: new basic.Column.new({children: T$.JSArrayOfWidget().of([new basic.Padding.new({padding: new edge_insets.EdgeInsets.only({bottom: 24}), child: new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.center, crossAxisAlignment: flex.CrossAxisAlignment.center, children: T$.JSArrayOfWidget().of([new basic.SizedBox.new({child: new image.Image.asset(this.widget.product.icon), width: 50}), new container.Container.new({width: 10}), new text.Text.new(this.real.format(this.widget.product.preco), {style: new text_style.TextStyle.new({fontSize: 26, fontWeight: ui.FontWeight.w600, letterSpacing: -1, color: colors.Colors.grey._get(800)})})])})}), this.quantidade > 0 ? new basic.SizedBox.new({width: media_query.MediaQuery.of(context).size.width, child: new container.Container.new({child: new text.Text.new(this.real.format(this.quantidade), {style: new text_style.TextStyle.new({fontSize: 20, color: colors.Colors.deepOrange})}), margin: new edge_insets.EdgeInsets.only({bottom: 24}), alignment: alignment.Alignment.center})}) : new container.Container.new({margin: new edge_insets.EdgeInsets.only({bottom: 24})}), new form.Form.new({key: this[_form], child: new text_form_field.TextFormField.new({controller: this[_valor], style: new text_style.TextStyle.new({fontSize: 16}), decoration: new input_decorator.InputDecoration.new({border: new input_border.OutlineInputBorder.new(), labelText: "Quantidade em gramas:", prefixIcon: new icon.Icon.new(icons.Icons.monitor_weight_outlined), suffix: new text.Text.new("gramas", {style: new text_style.TextStyle.new({fontSize: 14})})}), keyboardType: text_input.TextInputType.number, inputFormatters: T$.JSArrayOfTextInputFormatter().of([text_formatter.FilteringTextInputFormatter.digitsOnly]), validator: dart.fn(value => {
                    if (dart.nullCheck(value)[$isEmpty]) {
                      return "Informe a quantidade do produto";
                    } else if (core.double.parse(value) < 100) {
                      return "Compra mínima de 100 gramas ";
                    }
                    return null;
                  }, T$.StringNToStringN()), onChanged: dart.fn(value => {
                    this.setState(dart.fn(() => {
                      this.quantidade = value[$isEmpty] ? 0 : core.double.parse(value) * this.widget.product.preco / 1000;
                    }, T$.VoidTovoid()));
                  }, T$.StringTovoid())})}), new container.Container.new({alignment: alignment.Alignment.bottomCenter, margin: new edge_insets.EdgeInsets.only({top: 24}), child: new elevated_button.ElevatedButton.new({onPressed: dart.bind(this, 'comprar'), child: new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.center, children: T$.JSArrayOfWidget().of([new icon.Icon.new(icons.Icons.check), new basic.Padding.new({padding: new edge_insets.EdgeInsets.all(16), child: new text.Text.new("Comprar", {style: new text_style.TextStyle.new({fontSize: 20})})})])})})})])})})});
    }
    static ['_#new#tearOff']() {
      return new product_details._ProductDetailsState.new();
    }
  };
  (product_details._ProductDetailsState.new = function() {
    this.real = number_format.NumberFormat.currency({locale: "pt_BR", name: "R$"});
    this[_form] = T$.GlobalKeyOfFormState().new();
    this[_valor] = new editable_text.TextEditingController.new();
    this.quantidade = 0;
    product_details._ProductDetailsState.__proto__.new.call(this);
    ;
  }).prototype = product_details._ProductDetailsState.prototype;
  dart.addTypeTests(product_details._ProductDetailsState);
  dart.addTypeCaches(product_details._ProductDetailsState);
  dart.setMethodSignature(product_details._ProductDetailsState, () => ({
    __proto__: dart.getMethods(product_details._ProductDetailsState.__proto__),
    comprar: dart.fnType(dart.dynamic, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(product_details._ProductDetailsState, I[12]);
  dart.setFieldSignature(product_details._ProductDetailsState, () => ({
    __proto__: dart.getFields(product_details._ProductDetailsState.__proto__),
    real: dart.fieldType(number_format.NumberFormat),
    [_form]: dart.finalFieldType(framework.GlobalKey$(form.FormState)),
    [_valor]: dart.finalFieldType(editable_text.TextEditingController),
    quantidade: dart.fieldType(core.double)
  }));
  var builder$ = dart.privateName(provider$, "InheritedProvider.builder");
  var _lazy = dart.privateName(provider$, "_lazy");
  var _delegate = dart.privateName(provider$, "_delegate");
  var _child = dart.privateName(nested, "SingleChildStatelessWidget._child");
  var _child$ = dart.privateName(nested, "_child");
  nested.SingleChildStatelessWidget = class SingleChildStatelessWidget extends framework.StatelessWidget {
    get [_child$]() {
      return this[_child];
    }
    set [_child$](value) {
      super[_child$] = value;
    }
    build(context) {
      return this.buildWithChild(context, this[_child$]);
    }
    createElement() {
      return new nested.SingleChildStatelessElement.new(this);
    }
  };
  (nested.SingleChildStatelessWidget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    this[_child] = child;
    nested.SingleChildStatelessWidget.__proto__.new.call(this, {key: key});
    ;
  }).prototype = nested.SingleChildStatelessWidget.prototype;
  dart.addTypeTests(nested.SingleChildStatelessWidget);
  dart.addTypeCaches(nested.SingleChildStatelessWidget);
  nested.SingleChildStatelessWidget[dart.implements] = () => [nested.SingleChildWidget];
  dart.setMethodSignature(nested.SingleChildStatelessWidget, () => ({
    __proto__: dart.getMethods(nested.SingleChildStatelessWidget.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    createElement: dart.fnType(nested.SingleChildStatelessElement, [])
  }));
  dart.setLibraryUri(nested.SingleChildStatelessWidget, I[14]);
  dart.setFieldSignature(nested.SingleChildStatelessWidget, () => ({
    __proto__: dart.getFields(nested.SingleChildStatelessWidget.__proto__),
    [_child$]: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  const _is_InheritedProvider_default = Symbol('_is_InheritedProvider_default');
  provider$.InheritedProvider$ = dart.generic(T => {
    var __t$_CreateInheritedProviderOfT = () => (__t$_CreateInheritedProviderOfT = dart.constFn(provider$._CreateInheritedProvider$(T)))();
    var __t$_ValueInheritedProviderOfT = () => (__t$_ValueInheritedProviderOfT = dart.constFn(provider$._ValueInheritedProvider$(T)))();
    var __t$_InheritedProviderElementOfT = () => (__t$_InheritedProviderElementOfT = dart.constFn(provider$._InheritedProviderElement$(T)))();
    var __t$_InheritedProviderScopeOfT = () => (__t$_InheritedProviderScopeOfT = dart.constFn(provider$._InheritedProviderScope$(T)))();
    class InheritedProvider extends nested.SingleChildStatelessWidget {
      get builder() {
        return this[builder$];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let debugCheckInvalidValueType = opts && 'debugCheckInvalidValueType' in opts ? opts.debugCheckInvalidValueType : null;
        let startListening = opts && 'startListening' in opts ? opts.startListening : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$.InheritedProvider$(T)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, debugCheckInvalidValueType: debugCheckInvalidValueType, startListening: startListening, dispose: dispose, builder: builder, lazy: lazy, child: child});
      }
      static ['_#value#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let startListening = opts && 'startListening' in opts ? opts.startListening : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$.InheritedProvider$(T)).value({key: key, value: value, updateShouldNotify: updateShouldNotify, startListening: startListening, lazy: lazy, builder: builder, child: child});
      }
      static ['_#_constructor#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let delegate = opts && 'delegate' in opts ? opts.delegate : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$.InheritedProvider$(T))._constructor({key: key, delegate: delegate, lazy: lazy, builder: builder, child: child});
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        this[_delegate].debugFillProperties(properties);
      }
      createElement() {
        return new (__t$_InheritedProviderElementOfT()).new(this);
      }
      buildWithChild(context, child) {
        if (!(this.builder != null || child != null)) dart.assertFailed(dart.str(this[$runtimeType]) + " used outside of MultiProvider must specify a child", I[13], 156, 7, "builder != null || child != null");
        return new (__t$_InheritedProviderScopeOfT()).new({owner: this, debugType: dart.str(this[$runtimeType]), child: this.builder != null ? new basic.Builder.new({builder: dart.fn(context => dart.nullCheck(this.builder)(context, child), T$.BuildContextToWidget())}) : dart.nullCheck(child)});
      }
    }
    (InheritedProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let debugCheckInvalidValueType = opts && 'debugCheckInvalidValueType' in opts ? opts.debugCheckInvalidValueType : null;
      let startListening = opts && 'startListening' in opts ? opts.startListening : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[builder$] = builder;
      this[_lazy] = lazy;
      this[_delegate] = new (__t$_CreateInheritedProviderOfT()).new({create: create, update: update, updateShouldNotify: updateShouldNotify, debugCheckInvalidValueType: debugCheckInvalidValueType, startListening: startListening, dispose: dispose});
      InheritedProvider.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = InheritedProvider.prototype;
    (InheritedProvider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let startListening = opts && 'startListening' in opts ? opts.startListening : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[builder$] = builder;
      this[_lazy] = lazy;
      this[_delegate] = new (__t$_ValueInheritedProviderOfT()).new({value: value, updateShouldNotify: updateShouldNotify, startListening: startListening});
      InheritedProvider.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = InheritedProvider.prototype;
    (InheritedProvider._constructor = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let delegate = opts && 'delegate' in opts ? opts.delegate : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[builder$] = builder;
      this[_lazy] = lazy;
      this[_delegate] = delegate;
      InheritedProvider.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = InheritedProvider.prototype;
    dart.addTypeTests(InheritedProvider);
    InheritedProvider.prototype[_is_InheritedProvider_default] = true;
    dart.addTypeCaches(InheritedProvider);
    dart.setMethodSignature(InheritedProvider, () => ({
      __proto__: dart.getMethods(InheritedProvider.__proto__),
      createElement: dart.fnType(provider$._InheritedProviderElement$(T), []),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(InheritedProvider, I[15]);
    dart.setFieldSignature(InheritedProvider, () => ({
      __proto__: dart.getFields(InheritedProvider.__proto__),
      [_delegate]: dart.finalFieldType(provider$._Delegate$(T)),
      [_lazy]: dart.finalFieldType(dart.nullable(core.bool)),
      builder: dart.finalFieldType(dart.nullable(dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])))
    }));
    return InheritedProvider;
  });
  provider$.InheritedProvider = provider$.InheritedProvider$();
  dart.addTypeTests(provider$.InheritedProvider, _is_InheritedProvider_default);
  const _is_DeferredInheritedProvider_default = Symbol('_is_DeferredInheritedProvider_default');
  provider$.DeferredInheritedProvider$ = dart.generic((T, R) => {
    var __t$_CreateDeferredInheritedProviderOfT$R = () => (__t$_CreateDeferredInheritedProviderOfT$R = dart.constFn(provider$._CreateDeferredInheritedProvider$(T, R)))();
    var __t$_ValueDeferredInheritedProviderOfT$R = () => (__t$_ValueDeferredInheritedProviderOfT$R = dart.constFn(provider$._ValueDeferredInheritedProvider$(T, R)))();
    class DeferredInheritedProvider extends provider$.InheritedProvider$(R) {
      static ['_#new#tearOff'](T, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let startListening = opts && 'startListening' in opts ? opts.startListening : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$.DeferredInheritedProvider$(T, R)).new({key: key, create: create, dispose: dispose, startListening: startListening, updateShouldNotify: updateShouldNotify, lazy: lazy, builder: builder, child: child});
      }
      static ['_#value#tearOff'](T, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let startListening = opts && 'startListening' in opts ? opts.startListening : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$.DeferredInheritedProvider$(T, R)).value({key: key, value: value, startListening: startListening, updateShouldNotify: updateShouldNotify, lazy: lazy, builder: builder, child: child});
      }
    }
    (DeferredInheritedProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let startListening = opts && 'startListening' in opts ? opts.startListening : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      DeferredInheritedProvider.__proto__._constructor.call(this, {key: key, child: child, lazy: lazy, builder: builder, delegate: new (__t$_CreateDeferredInheritedProviderOfT$R()).new({create: create, dispose: dispose, updateShouldNotify: updateShouldNotify, startListening: startListening})});
      ;
    }).prototype = DeferredInheritedProvider.prototype;
    (DeferredInheritedProvider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let startListening = opts && 'startListening' in opts ? opts.startListening : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      DeferredInheritedProvider.__proto__._constructor.call(this, {key: key, lazy: lazy, builder: builder, delegate: new (__t$_ValueDeferredInheritedProviderOfT$R()).new(value, updateShouldNotify, startListening), child: child});
      ;
    }).prototype = DeferredInheritedProvider.prototype;
    dart.addTypeTests(DeferredInheritedProvider);
    DeferredInheritedProvider.prototype[_is_DeferredInheritedProvider_default] = true;
    dart.addTypeCaches(DeferredInheritedProvider);
    dart.setLibraryUri(DeferredInheritedProvider, I[15]);
    return DeferredInheritedProvider;
  });
  provider$.DeferredInheritedProvider = provider$.DeferredInheritedProvider$();
  dart.addTypeTests(provider$.DeferredInheritedProvider, _is_DeferredInheritedProvider_default);
  const _is_StreamProvider_default = Symbol('_is_StreamProvider_default');
  async_provider.StreamProvider$ = dart.generic(T => {
    class StreamProvider extends provider$.DeferredInheritedProvider$(dart.nullable(async.Stream$(T)), T) {
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let initialData = opts && 'initialData' in opts ? opts.initialData : null;
        let catchError = opts && 'catchError' in opts ? opts.catchError : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (async_provider.StreamProvider$(T)).new({key: key, create: create, initialData: initialData, catchError: catchError, updateShouldNotify: updateShouldNotify, lazy: lazy, builder: builder, child: child});
      }
      static ['_#value#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let initialData = opts && 'initialData' in opts ? opts.initialData : null;
        let catchError = opts && 'catchError' in opts ? opts.catchError : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (async_provider.StreamProvider$(T)).value({key: key, value: value, initialData: initialData, catchError: catchError, updateShouldNotify: updateShouldNotify, lazy: lazy, builder: builder, child: child});
      }
    }
    (StreamProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let initialData = opts && 'initialData' in opts ? opts.initialData : null;
      let catchError = opts && 'catchError' in opts ? opts.catchError : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      StreamProvider.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, updateShouldNotify: updateShouldNotify, startListening: async_provider._streamStartListening(T, {catchError: catchError, initialData: initialData}), child: child});
      ;
    }).prototype = StreamProvider.prototype;
    (StreamProvider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let initialData = opts && 'initialData' in opts ? opts.initialData : null;
      let catchError = opts && 'catchError' in opts ? opts.catchError : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      StreamProvider.__proto__.value.call(this, {key: key, lazy: lazy, builder: builder, value: value, updateShouldNotify: updateShouldNotify, startListening: async_provider._streamStartListening(T, {catchError: catchError, initialData: initialData}), child: child});
      ;
    }).prototype = StreamProvider.prototype;
    dart.addTypeTests(StreamProvider);
    StreamProvider.prototype[_is_StreamProvider_default] = true;
    dart.addTypeCaches(StreamProvider);
    dart.setLibraryUri(StreamProvider, I[16]);
    return StreamProvider;
  });
  async_provider.StreamProvider = async_provider.StreamProvider$();
  dart.addTypeTests(async_provider.StreamProvider, _is_StreamProvider_default);
  const _is_FutureProvider_default = Symbol('_is_FutureProvider_default');
  async_provider.FutureProvider$ = dart.generic(T => {
    class FutureProvider extends provider$.DeferredInheritedProvider$(dart.nullable(async.Future$(T)), T) {
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let initialData = opts && 'initialData' in opts ? opts.initialData : null;
        let catchError = opts && 'catchError' in opts ? opts.catchError : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (async_provider.FutureProvider$(T)).new({key: key, create: create, initialData: initialData, catchError: catchError, updateShouldNotify: updateShouldNotify, lazy: lazy, builder: builder, child: child});
      }
      static ['_#value#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let initialData = opts && 'initialData' in opts ? opts.initialData : null;
        let catchError = opts && 'catchError' in opts ? opts.catchError : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (async_provider.FutureProvider$(T)).value({key: key, value: value, initialData: initialData, catchError: catchError, updateShouldNotify: updateShouldNotify, builder: builder, child: child});
      }
    }
    (FutureProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let initialData = opts && 'initialData' in opts ? opts.initialData : null;
      let catchError = opts && 'catchError' in opts ? opts.catchError : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      FutureProvider.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, updateShouldNotify: updateShouldNotify, startListening: async_provider._futureStartListening(T, {catchError: catchError, initialData: initialData}), child: child});
      ;
    }).prototype = FutureProvider.prototype;
    (FutureProvider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let initialData = opts && 'initialData' in opts ? opts.initialData : null;
      let catchError = opts && 'catchError' in opts ? opts.catchError : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      FutureProvider.__proto__.value.call(this, {key: key, builder: builder, lazy: false, value: value, updateShouldNotify: updateShouldNotify, startListening: async_provider._futureStartListening(T, {catchError: catchError, initialData: initialData}), child: child});
      ;
    }).prototype = FutureProvider.prototype;
    dart.addTypeTests(FutureProvider);
    FutureProvider.prototype[_is_FutureProvider_default] = true;
    dart.addTypeCaches(FutureProvider);
    dart.setLibraryUri(FutureProvider, I[16]);
    return FutureProvider;
  });
  async_provider.FutureProvider = async_provider.FutureProvider$();
  dart.addTypeTests(async_provider.FutureProvider, _is_FutureProvider_default);
  async_provider._streamStartListening = function _streamStartListening(T, opts) {
    let initialData = opts && 'initialData' in opts ? opts.initialData : null;
    let catchError = opts && 'catchError' in opts ? opts.catchError : null;
    return dart.fn((e, setState, controller, __) => {
      if (!e.hasValue) {
        setState(initialData);
      }
      if (controller == null) {
        return dart.fn(() => {
        }, T$.VoidTovoid());
      }
      let sub = controller.listen(setState, {onError: dart.fn(error => {
          if (catchError != null) {
            setState(catchError(e, error));
          } else {
            assertions.FlutterError.reportError(new assertions.FlutterErrorDetails.new({library: "provider", exception: assertions.FlutterError.new("An exception was throw by " + dart.str(dart.runtimeType(controller)) + " listened by\nStreamProvider<" + dart.str(dart.wrapType(T)) + ">, but no `catchError` was provided.\n\nException:\n" + dart.str(error) + "\n")}));
          }
        }, T$.ObjectNToNull())});
      return dart.bind(sub, 'cancel');
    }, dart.fnType(T$.VoidTovoid(), [provider$.InheritedContext$(T), dart.fnType(dart.void, [T]), dart.nullable(async.Stream$(T)), dart.nullable(T)]));
  };
  async_provider._futureStartListening = function _futureStartListening(T, opts) {
    let initialData = opts && 'initialData' in opts ? opts.initialData : null;
    let catchError = opts && 'catchError' in opts ? opts.catchError : null;
    return dart.fn((e, setState, controller, __) => {
      let t1;
      if (!e.hasValue) {
        setState(initialData);
      }
      let canceled = false;
      t1 = controller;
      t1 == null ? null : t1.then(core.Null, dart.fn(value => {
        if (canceled) {
          return;
        }
        setState(value);
      }, dart.fnType(core.Null, [T])), {onError: dart.fn(error => {
          if (canceled) {
            return;
          }
          if (catchError != null) {
            setState(catchError(e, error));
          } else {
            assertions.FlutterError.reportError(new assertions.FlutterErrorDetails.new({library: "provider", exception: assertions.FlutterError.new("An exception was throw by " + dart.str(dart.runtimeType(controller)) + " listened by\nFutureProvider<" + dart.str(dart.wrapType(T)) + ">, but no `catchError` was provided.\n\nException:\n" + dart.str(error) + "\n")}));
          }
        }, T$.ObjectNToNull())});
      return dart.fn(() => canceled = true, T$.VoidTovoid());
    }, dart.fnType(T$.VoidTovoid(), [provider$.InheritedContext$(T), dart.fnType(dart.void, [T]), dart.nullable(async.Future$(T)), dart.nullable(T)]));
  };
  const _is_ListenableProvider_default = Symbol('_is_ListenableProvider_default');
  listenable_provider.ListenableProvider$ = dart.generic(T => {
    class ListenableProvider extends provider$.InheritedProvider$(T) {
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProvider$(T)).new({key: key, create: create, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
      static ['_#value#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProvider$(T)).value({key: key, value: value, updateShouldNotify: updateShouldNotify, builder: builder, child: child});
      }
      static _startListening(e, value) {
        let t1;
        t1 = value;
        t1 == null ? null : t1.addListener(dart.bind(e, 'markNeedsNotifyDependents'));
        return dart.fn(() => {
          let t1;
          t1 = value;
          return t1 == null ? null : t1.removeListener(dart.bind(e, 'markNeedsNotifyDependents'));
        }, T$.VoidTovoid());
      }
    }
    (ListenableProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProvider.__proto__.new.call(this, {key: key, startListening: C[13] || CT.C13, create: create, dispose: dispose, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ListenableProvider.prototype;
    (ListenableProvider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProvider.__proto__.value.call(this, {key: key, builder: builder, value: value, updateShouldNotify: updateShouldNotify, startListening: C[13] || CT.C13, child: child});
      ;
    }).prototype = ListenableProvider.prototype;
    dart.addTypeTests(ListenableProvider);
    ListenableProvider.prototype[_is_ListenableProvider_default] = true;
    dart.addTypeCaches(ListenableProvider);
    dart.setStaticMethodSignature(ListenableProvider, () => ['_startListening']);
    dart.setLibraryUri(ListenableProvider, I[17]);
    return ListenableProvider;
  });
  listenable_provider.ListenableProvider = listenable_provider.ListenableProvider$();
  dart.addTypeTests(listenable_provider.ListenableProvider, _is_ListenableProvider_default);
  const _is_ChangeNotifierProvider_default = Symbol('_is_ChangeNotifierProvider_default');
  change_notifier_provider.ChangeNotifierProvider$ = dart.generic(T => {
    class ChangeNotifierProvider extends listenable_provider.ListenableProvider$(T) {
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProvider$(T)).new({key: key, create: create, lazy: lazy, builder: builder, child: child});
      }
      static ['_#value#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProvider$(T)).value({key: key, value: value, builder: builder, child: child});
      }
      static _dispose(context, notifier) {
        let t1;
        t1 = notifier;
        t1 == null ? null : t1.dispose();
      }
    }
    (ChangeNotifierProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProvider.__proto__.new.call(this, {key: key, create: create, dispose: C[12] || CT.C12, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProvider.prototype;
    (ChangeNotifierProvider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProvider.__proto__.value.call(this, {key: key, builder: builder, value: value, child: child});
      ;
    }).prototype = ChangeNotifierProvider.prototype;
    dart.addTypeTests(ChangeNotifierProvider);
    ChangeNotifierProvider.prototype[_is_ChangeNotifierProvider_default] = true;
    dart.addTypeCaches(ChangeNotifierProvider);
    dart.setStaticMethodSignature(ChangeNotifierProvider, () => ['_dispose']);
    dart.setLibraryUri(ChangeNotifierProvider, I[18]);
    return ChangeNotifierProvider;
  });
  change_notifier_provider.ChangeNotifierProvider = change_notifier_provider.ChangeNotifierProvider$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProvider, _is_ChangeNotifierProvider_default);
  const _is_ListenableProxyProvider0_default = Symbol('_is_ListenableProxyProvider0_default');
  listenable_provider.ListenableProxyProvider0$ = dart.generic(R => {
    var __t$RTovoid = () => (__t$RTovoid = dart.constFn(dart.fnType(dart.void, [R])))();
    class ListenableProxyProvider0 extends provider$.InheritedProvider$(R) {
      static ['_#new#tearOff'](R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProxyProvider0$(R)).new({key: key, create: create, update: update, dispose: dispose, updateShouldNotify: updateShouldNotify, lazy: lazy, builder: builder, child: child});
      }
    }
    (ListenableProxyProvider0.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProxyProvider0.__proto__.new.call(this, {key: key, create: create, update: update, lazy: lazy, builder: builder, dispose: dispose, updateShouldNotify: updateShouldNotify, startListening: C[13] || CT.C13, debugCheckInvalidValueType: dart.fn(value => {
          if (change_notifier.ChangeNotifier.is(value)) {
            if (!(value.hasListeners !== true)) dart.assertFailed(null, I[19], 94, 28, "value.hasListeners != true");
          }
        }, __t$RTovoid()), child: child});
      ;
    }).prototype = ListenableProxyProvider0.prototype;
    dart.addTypeTests(ListenableProxyProvider0);
    ListenableProxyProvider0.prototype[_is_ListenableProxyProvider0_default] = true;
    dart.addTypeCaches(ListenableProxyProvider0);
    dart.setLibraryUri(ListenableProxyProvider0, I[17]);
    return ListenableProxyProvider0;
  });
  listenable_provider.ListenableProxyProvider0 = listenable_provider.ListenableProxyProvider0$();
  dart.addTypeTests(listenable_provider.ListenableProxyProvider0, _is_ListenableProxyProvider0_default);
  const _is_ListenableProxyProvider_default = Symbol('_is_ListenableProxyProvider_default');
  listenable_provider.ListenableProxyProvider$ = dart.generic((T, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ListenableProxyProvider extends listenable_provider.ListenableProxyProvider0$(R) {
      static ['_#new#tearOff'](T, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProxyProvider$(T, R)).new({key: key, create: create, update: update, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ListenableProxyProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProxyProvider.__proto__.new.call(this, {key: key, create: create, lazy: lazy, builder: builder, update: dart.fn((context, previous) => update(context, provider$.Provider.of(T, context), previous), __t$BuildContextAndRNToR()), dispose: dispose, child: child});
      ;
    }).prototype = ListenableProxyProvider.prototype;
    dart.addTypeTests(ListenableProxyProvider);
    ListenableProxyProvider.prototype[_is_ListenableProxyProvider_default] = true;
    dart.addTypeCaches(ListenableProxyProvider);
    dart.setLibraryUri(ListenableProxyProvider, I[17]);
    return ListenableProxyProvider;
  });
  listenable_provider.ListenableProxyProvider = listenable_provider.ListenableProxyProvider$();
  dart.addTypeTests(listenable_provider.ListenableProxyProvider, _is_ListenableProxyProvider_default);
  const _is_ChangeNotifierProxyProvider_default = Symbol('_is_ChangeNotifierProxyProvider_default');
  change_notifier_provider.ChangeNotifierProxyProvider$ = dart.generic((T, R) => {
    class ChangeNotifierProxyProvider extends listenable_provider.ListenableProxyProvider$(T, R) {
      static ['_#new#tearOff'](T, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProxyProvider$(T, R)).new({key: key, create: create, update: update, lazy: lazy, builder: builder, child: child});
      }
    }
    (ChangeNotifierProxyProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProxyProvider.__proto__.new.call(this, {key: key, create: create, update: update, dispose: C[12] || CT.C12, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProxyProvider.prototype;
    dart.addTypeTests(ChangeNotifierProxyProvider);
    ChangeNotifierProxyProvider.prototype[_is_ChangeNotifierProxyProvider_default] = true;
    dart.addTypeCaches(ChangeNotifierProxyProvider);
    dart.setLibraryUri(ChangeNotifierProxyProvider, I[18]);
    return ChangeNotifierProxyProvider;
  });
  change_notifier_provider.ChangeNotifierProxyProvider = change_notifier_provider.ChangeNotifierProxyProvider$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProxyProvider, _is_ChangeNotifierProxyProvider_default);
  const _is_ChangeNotifierProxyProvider0_default = Symbol('_is_ChangeNotifierProxyProvider0_default');
  change_notifier_provider.ChangeNotifierProxyProvider0$ = dart.generic(R => {
    class ChangeNotifierProxyProvider0 extends listenable_provider.ListenableProxyProvider0$(R) {
      static ['_#new#tearOff'](R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProxyProvider0$(R)).new({key: key, create: create, update: update, lazy: lazy, builder: builder, child: child});
      }
    }
    (ChangeNotifierProxyProvider0.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProxyProvider0.__proto__.new.call(this, {key: key, create: create, update: update, dispose: C[12] || CT.C12, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProxyProvider0.prototype;
    dart.addTypeTests(ChangeNotifierProxyProvider0);
    ChangeNotifierProxyProvider0.prototype[_is_ChangeNotifierProxyProvider0_default] = true;
    dart.addTypeCaches(ChangeNotifierProxyProvider0);
    dart.setLibraryUri(ChangeNotifierProxyProvider0, I[18]);
    return ChangeNotifierProxyProvider0;
  });
  change_notifier_provider.ChangeNotifierProxyProvider0 = change_notifier_provider.ChangeNotifierProxyProvider0$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProxyProvider0, _is_ChangeNotifierProxyProvider0_default);
  const _is_ListenableProxyProvider2_default = Symbol('_is_ListenableProxyProvider2_default');
  listenable_provider.ListenableProxyProvider2$ = dart.generic((T, T2, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ListenableProxyProvider2 extends listenable_provider.ListenableProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProxyProvider2$(T, T2, R)).new({key: key, create: create, update: update, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ListenableProxyProvider2.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProxyProvider2.__proto__.new.call(this, {key: key, create: create, lazy: lazy, builder: builder, update: dart.fn((context, previous) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), previous), __t$BuildContextAndRNToR()), dispose: dispose, child: child});
      ;
    }).prototype = ListenableProxyProvider2.prototype;
    dart.addTypeTests(ListenableProxyProvider2);
    ListenableProxyProvider2.prototype[_is_ListenableProxyProvider2_default] = true;
    dart.addTypeCaches(ListenableProxyProvider2);
    dart.setLibraryUri(ListenableProxyProvider2, I[17]);
    return ListenableProxyProvider2;
  });
  listenable_provider.ListenableProxyProvider2 = listenable_provider.ListenableProxyProvider2$();
  dart.addTypeTests(listenable_provider.ListenableProxyProvider2, _is_ListenableProxyProvider2_default);
  const _is_ChangeNotifierProxyProvider2_default = Symbol('_is_ChangeNotifierProxyProvider2_default');
  change_notifier_provider.ChangeNotifierProxyProvider2$ = dart.generic((T, T2, R) => {
    class ChangeNotifierProxyProvider2 extends listenable_provider.ListenableProxyProvider2$(T, T2, R) {
      static ['_#new#tearOff'](T, T2, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProxyProvider2$(T, T2, R)).new({key: key, create: create, update: update, lazy: lazy, builder: builder, child: child});
      }
    }
    (ChangeNotifierProxyProvider2.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProxyProvider2.__proto__.new.call(this, {key: key, create: create, update: update, dispose: C[12] || CT.C12, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProxyProvider2.prototype;
    dart.addTypeTests(ChangeNotifierProxyProvider2);
    ChangeNotifierProxyProvider2.prototype[_is_ChangeNotifierProxyProvider2_default] = true;
    dart.addTypeCaches(ChangeNotifierProxyProvider2);
    dart.setLibraryUri(ChangeNotifierProxyProvider2, I[18]);
    return ChangeNotifierProxyProvider2;
  });
  change_notifier_provider.ChangeNotifierProxyProvider2 = change_notifier_provider.ChangeNotifierProxyProvider2$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProxyProvider2, _is_ChangeNotifierProxyProvider2_default);
  const _is_ListenableProxyProvider3_default = Symbol('_is_ListenableProxyProvider3_default');
  listenable_provider.ListenableProxyProvider3$ = dart.generic((T, T2, T3, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ListenableProxyProvider3 extends listenable_provider.ListenableProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProxyProvider3$(T, T2, T3, R)).new({key: key, create: create, update: update, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ListenableProxyProvider3.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProxyProvider3.__proto__.new.call(this, {key: key, create: create, lazy: lazy, builder: builder, update: dart.fn((context, previous) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), previous), __t$BuildContextAndRNToR()), dispose: dispose, child: child});
      ;
    }).prototype = ListenableProxyProvider3.prototype;
    dart.addTypeTests(ListenableProxyProvider3);
    ListenableProxyProvider3.prototype[_is_ListenableProxyProvider3_default] = true;
    dart.addTypeCaches(ListenableProxyProvider3);
    dart.setLibraryUri(ListenableProxyProvider3, I[17]);
    return ListenableProxyProvider3;
  });
  listenable_provider.ListenableProxyProvider3 = listenable_provider.ListenableProxyProvider3$();
  dart.addTypeTests(listenable_provider.ListenableProxyProvider3, _is_ListenableProxyProvider3_default);
  const _is_ChangeNotifierProxyProvider3_default = Symbol('_is_ChangeNotifierProxyProvider3_default');
  change_notifier_provider.ChangeNotifierProxyProvider3$ = dart.generic((T, T2, T3, R) => {
    class ChangeNotifierProxyProvider3 extends listenable_provider.ListenableProxyProvider3$(T, T2, T3, R) {
      static ['_#new#tearOff'](T, T2, T3, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProxyProvider3$(T, T2, T3, R)).new({key: key, create: create, update: update, lazy: lazy, builder: builder, child: child});
      }
    }
    (ChangeNotifierProxyProvider3.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProxyProvider3.__proto__.new.call(this, {key: key, create: create, update: update, dispose: C[12] || CT.C12, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProxyProvider3.prototype;
    dart.addTypeTests(ChangeNotifierProxyProvider3);
    ChangeNotifierProxyProvider3.prototype[_is_ChangeNotifierProxyProvider3_default] = true;
    dart.addTypeCaches(ChangeNotifierProxyProvider3);
    dart.setLibraryUri(ChangeNotifierProxyProvider3, I[18]);
    return ChangeNotifierProxyProvider3;
  });
  change_notifier_provider.ChangeNotifierProxyProvider3 = change_notifier_provider.ChangeNotifierProxyProvider3$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProxyProvider3, _is_ChangeNotifierProxyProvider3_default);
  const _is_ListenableProxyProvider4_default = Symbol('_is_ListenableProxyProvider4_default');
  listenable_provider.ListenableProxyProvider4$ = dart.generic((T, T2, T3, T4, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ListenableProxyProvider4 extends listenable_provider.ListenableProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, T4, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProxyProvider4$(T, T2, T3, T4, R)).new({key: key, create: create, update: update, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ListenableProxyProvider4.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProxyProvider4.__proto__.new.call(this, {key: key, create: create, lazy: lazy, builder: builder, update: dart.fn((context, previous) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), provider$.Provider.of(T4, context), previous), __t$BuildContextAndRNToR()), dispose: dispose, child: child});
      ;
    }).prototype = ListenableProxyProvider4.prototype;
    dart.addTypeTests(ListenableProxyProvider4);
    ListenableProxyProvider4.prototype[_is_ListenableProxyProvider4_default] = true;
    dart.addTypeCaches(ListenableProxyProvider4);
    dart.setLibraryUri(ListenableProxyProvider4, I[17]);
    return ListenableProxyProvider4;
  });
  listenable_provider.ListenableProxyProvider4 = listenable_provider.ListenableProxyProvider4$();
  dart.addTypeTests(listenable_provider.ListenableProxyProvider4, _is_ListenableProxyProvider4_default);
  const _is_ChangeNotifierProxyProvider4_default = Symbol('_is_ChangeNotifierProxyProvider4_default');
  change_notifier_provider.ChangeNotifierProxyProvider4$ = dart.generic((T, T2, T3, T4, R) => {
    class ChangeNotifierProxyProvider4 extends listenable_provider.ListenableProxyProvider4$(T, T2, T3, T4, R) {
      static ['_#new#tearOff'](T, T2, T3, T4, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProxyProvider4$(T, T2, T3, T4, R)).new({key: key, create: create, update: update, lazy: lazy, builder: builder, child: child});
      }
    }
    (ChangeNotifierProxyProvider4.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProxyProvider4.__proto__.new.call(this, {key: key, create: create, update: update, dispose: C[12] || CT.C12, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProxyProvider4.prototype;
    dart.addTypeTests(ChangeNotifierProxyProvider4);
    ChangeNotifierProxyProvider4.prototype[_is_ChangeNotifierProxyProvider4_default] = true;
    dart.addTypeCaches(ChangeNotifierProxyProvider4);
    dart.setLibraryUri(ChangeNotifierProxyProvider4, I[18]);
    return ChangeNotifierProxyProvider4;
  });
  change_notifier_provider.ChangeNotifierProxyProvider4 = change_notifier_provider.ChangeNotifierProxyProvider4$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProxyProvider4, _is_ChangeNotifierProxyProvider4_default);
  const _is_ListenableProxyProvider5_default = Symbol('_is_ListenableProxyProvider5_default');
  listenable_provider.ListenableProxyProvider5$ = dart.generic((T, T2, T3, T4, T5, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ListenableProxyProvider5 extends listenable_provider.ListenableProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, T4, T5, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProxyProvider5$(T, T2, T3, T4, T5, R)).new({key: key, create: create, update: update, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ListenableProxyProvider5.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProxyProvider5.__proto__.new.call(this, {key: key, create: create, lazy: lazy, builder: builder, update: dart.fn((context, previous) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), provider$.Provider.of(T4, context), provider$.Provider.of(T5, context), previous), __t$BuildContextAndRNToR()), dispose: dispose, child: child});
      ;
    }).prototype = ListenableProxyProvider5.prototype;
    dart.addTypeTests(ListenableProxyProvider5);
    ListenableProxyProvider5.prototype[_is_ListenableProxyProvider5_default] = true;
    dart.addTypeCaches(ListenableProxyProvider5);
    dart.setLibraryUri(ListenableProxyProvider5, I[17]);
    return ListenableProxyProvider5;
  });
  listenable_provider.ListenableProxyProvider5 = listenable_provider.ListenableProxyProvider5$();
  dart.addTypeTests(listenable_provider.ListenableProxyProvider5, _is_ListenableProxyProvider5_default);
  const _is_ChangeNotifierProxyProvider5_default = Symbol('_is_ChangeNotifierProxyProvider5_default');
  change_notifier_provider.ChangeNotifierProxyProvider5$ = dart.generic((T, T2, T3, T4, T5, R) => {
    class ChangeNotifierProxyProvider5 extends listenable_provider.ListenableProxyProvider5$(T, T2, T3, T4, T5, R) {
      static ['_#new#tearOff'](T, T2, T3, T4, T5, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProxyProvider5$(T, T2, T3, T4, T5, R)).new({key: key, create: create, update: update, lazy: lazy, builder: builder, child: child});
      }
    }
    (ChangeNotifierProxyProvider5.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProxyProvider5.__proto__.new.call(this, {key: key, create: create, update: update, dispose: C[12] || CT.C12, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProxyProvider5.prototype;
    dart.addTypeTests(ChangeNotifierProxyProvider5);
    ChangeNotifierProxyProvider5.prototype[_is_ChangeNotifierProxyProvider5_default] = true;
    dart.addTypeCaches(ChangeNotifierProxyProvider5);
    dart.setLibraryUri(ChangeNotifierProxyProvider5, I[18]);
    return ChangeNotifierProxyProvider5;
  });
  change_notifier_provider.ChangeNotifierProxyProvider5 = change_notifier_provider.ChangeNotifierProxyProvider5$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProxyProvider5, _is_ChangeNotifierProxyProvider5_default);
  const _is_ListenableProxyProvider6_default = Symbol('_is_ListenableProxyProvider6_default');
  listenable_provider.ListenableProxyProvider6$ = dart.generic((T, T2, T3, T4, T5, T6, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ListenableProxyProvider6 extends listenable_provider.ListenableProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, T4, T5, T6, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProxyProvider6$(T, T2, T3, T4, T5, T6, R)).new({key: key, create: create, update: update, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ListenableProxyProvider6.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProxyProvider6.__proto__.new.call(this, {key: key, create: create, lazy: lazy, builder: builder, update: dart.fn((context, previous) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), provider$.Provider.of(T4, context), provider$.Provider.of(T5, context), provider$.Provider.of(T6, context), previous), __t$BuildContextAndRNToR()), dispose: dispose, child: child});
      ;
    }).prototype = ListenableProxyProvider6.prototype;
    dart.addTypeTests(ListenableProxyProvider6);
    ListenableProxyProvider6.prototype[_is_ListenableProxyProvider6_default] = true;
    dart.addTypeCaches(ListenableProxyProvider6);
    dart.setLibraryUri(ListenableProxyProvider6, I[17]);
    return ListenableProxyProvider6;
  });
  listenable_provider.ListenableProxyProvider6 = listenable_provider.ListenableProxyProvider6$();
  dart.addTypeTests(listenable_provider.ListenableProxyProvider6, _is_ListenableProxyProvider6_default);
  const _is_ChangeNotifierProxyProvider6_default = Symbol('_is_ChangeNotifierProxyProvider6_default');
  change_notifier_provider.ChangeNotifierProxyProvider6$ = dart.generic((T, T2, T3, T4, T5, T6, R) => {
    class ChangeNotifierProxyProvider6 extends listenable_provider.ListenableProxyProvider6$(T, T2, T3, T4, T5, T6, R) {
      static ['_#new#tearOff'](T, T2, T3, T4, T5, T6, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProxyProvider6$(T, T2, T3, T4, T5, T6, R)).new({key: key, create: create, update: update, lazy: lazy, builder: builder, child: child});
      }
    }
    (ChangeNotifierProxyProvider6.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProxyProvider6.__proto__.new.call(this, {key: key, create: create, update: update, dispose: C[12] || CT.C12, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProxyProvider6.prototype;
    dart.addTypeTests(ChangeNotifierProxyProvider6);
    ChangeNotifierProxyProvider6.prototype[_is_ChangeNotifierProxyProvider6_default] = true;
    dart.addTypeCaches(ChangeNotifierProxyProvider6);
    dart.setLibraryUri(ChangeNotifierProxyProvider6, I[18]);
    return ChangeNotifierProxyProvider6;
  });
  change_notifier_provider.ChangeNotifierProxyProvider6 = change_notifier_provider.ChangeNotifierProxyProvider6$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProxyProvider6, _is_ChangeNotifierProxyProvider6_default);
  var builder$0 = dart.privateName(consumer, "Consumer.builder");
  const _is_Consumer_default = Symbol('_is_Consumer_default');
  consumer.Consumer$ = dart.generic(T => {
    class Consumer extends nested.SingleChildStatelessWidget {
      get builder() {
        return this[builder$0];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (consumer.Consumer$(T)).new({key: key, builder: builder, child: child});
      }
      buildWithChild(context, child) {
        let t3, t2, t1;
        t1 = context;
        t2 = provider$.Provider.of(T, context);
        t3 = child;
        return this.builder(t1, t2, t3);
      }
    }
    (Consumer.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[builder$0] = builder;
      Consumer.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = Consumer.prototype;
    dart.addTypeTests(Consumer);
    Consumer.prototype[_is_Consumer_default] = true;
    dart.addTypeCaches(Consumer);
    dart.setMethodSignature(Consumer, () => ({
      __proto__: dart.getMethods(Consumer.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(Consumer, I[20]);
    dart.setFieldSignature(Consumer, () => ({
      __proto__: dart.getFields(Consumer.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, T, dart.nullable(framework.Widget)]))
    }));
    return Consumer;
  });
  consumer.Consumer = consumer.Consumer$();
  dart.addTypeTests(consumer.Consumer, _is_Consumer_default);
  var builder$1 = dart.privateName(consumer, "Consumer2.builder");
  const _is_Consumer2_default = Symbol('_is_Consumer2_default');
  consumer.Consumer2$ = dart.generic((A, B) => {
    class Consumer2 extends nested.SingleChildStatelessWidget {
      get builder() {
        return this[builder$1];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#new#tearOff'](A, B, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (consumer.Consumer2$(A, B)).new({key: key, builder: builder, child: child});
      }
      buildWithChild(context, child) {
        let t4, t3, t2, t1;
        t1 = context;
        t2 = provider$.Provider.of(A, context);
        t3 = provider$.Provider.of(B, context);
        t4 = child;
        return this.builder(t1, t2, t3, t4);
      }
    }
    (Consumer2.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[builder$1] = builder;
      Consumer2.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = Consumer2.prototype;
    dart.addTypeTests(Consumer2);
    Consumer2.prototype[_is_Consumer2_default] = true;
    dart.addTypeCaches(Consumer2);
    dart.setMethodSignature(Consumer2, () => ({
      __proto__: dart.getMethods(Consumer2.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(Consumer2, I[20]);
    dart.setFieldSignature(Consumer2, () => ({
      __proto__: dart.getFields(Consumer2.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, A, B, dart.nullable(framework.Widget)]))
    }));
    return Consumer2;
  });
  consumer.Consumer2 = consumer.Consumer2$();
  dart.addTypeTests(consumer.Consumer2, _is_Consumer2_default);
  var builder$2 = dart.privateName(consumer, "Consumer3.builder");
  const _is_Consumer3_default = Symbol('_is_Consumer3_default');
  consumer.Consumer3$ = dart.generic((A, B, C) => {
    class Consumer3 extends nested.SingleChildStatelessWidget {
      get builder() {
        return this[builder$2];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#new#tearOff'](A, B, C, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (consumer.Consumer3$(A, B, C)).new({key: key, builder: builder, child: child});
      }
      buildWithChild(context, child) {
        let t5, t4, t3, t2, t1;
        t1 = context;
        t2 = provider$.Provider.of(A, context);
        t3 = provider$.Provider.of(B, context);
        t4 = provider$.Provider.of(C, context);
        t5 = child;
        return this.builder(t1, t2, t3, t4, t5);
      }
    }
    (Consumer3.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[builder$2] = builder;
      Consumer3.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = Consumer3.prototype;
    dart.addTypeTests(Consumer3);
    Consumer3.prototype[_is_Consumer3_default] = true;
    dart.addTypeCaches(Consumer3);
    dart.setMethodSignature(Consumer3, () => ({
      __proto__: dart.getMethods(Consumer3.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(Consumer3, I[20]);
    dart.setFieldSignature(Consumer3, () => ({
      __proto__: dart.getFields(Consumer3.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, A, B, C, dart.nullable(framework.Widget)]))
    }));
    return Consumer3;
  });
  consumer.Consumer3 = consumer.Consumer3$();
  dart.addTypeTests(consumer.Consumer3, _is_Consumer3_default);
  var builder$3 = dart.privateName(consumer, "Consumer4.builder");
  const _is_Consumer4_default = Symbol('_is_Consumer4_default');
  consumer.Consumer4$ = dart.generic((A, B, C, D) => {
    class Consumer4 extends nested.SingleChildStatelessWidget {
      get builder() {
        return this[builder$3];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#new#tearOff'](A, B, C, D, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (consumer.Consumer4$(A, B, C, D)).new({key: key, builder: builder, child: child});
      }
      buildWithChild(context, child) {
        let t6, t5, t4, t3, t2, t1;
        t1 = context;
        t2 = provider$.Provider.of(A, context);
        t3 = provider$.Provider.of(B, context);
        t4 = provider$.Provider.of(C, context);
        t5 = provider$.Provider.of(D, context);
        t6 = child;
        return this.builder(t1, t2, t3, t4, t5, t6);
      }
    }
    (Consumer4.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[builder$3] = builder;
      Consumer4.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = Consumer4.prototype;
    dart.addTypeTests(Consumer4);
    Consumer4.prototype[_is_Consumer4_default] = true;
    dart.addTypeCaches(Consumer4);
    dart.setMethodSignature(Consumer4, () => ({
      __proto__: dart.getMethods(Consumer4.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(Consumer4, I[20]);
    dart.setFieldSignature(Consumer4, () => ({
      __proto__: dart.getFields(Consumer4.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, A, B, C, D, dart.nullable(framework.Widget)]))
    }));
    return Consumer4;
  });
  consumer.Consumer4 = consumer.Consumer4$();
  dart.addTypeTests(consumer.Consumer4, _is_Consumer4_default);
  var builder$4 = dart.privateName(consumer, "Consumer5.builder");
  const _is_Consumer5_default = Symbol('_is_Consumer5_default');
  consumer.Consumer5$ = dart.generic((A, B, C, D, E) => {
    class Consumer5 extends nested.SingleChildStatelessWidget {
      get builder() {
        return this[builder$4];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#new#tearOff'](A, B, C, D, E, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (consumer.Consumer5$(A, B, C, D, E)).new({key: key, builder: builder, child: child});
      }
      buildWithChild(context, child) {
        let t7, t6, t5, t4, t3, t2, t1;
        t1 = context;
        t2 = provider$.Provider.of(A, context);
        t3 = provider$.Provider.of(B, context);
        t4 = provider$.Provider.of(C, context);
        t5 = provider$.Provider.of(D, context);
        t6 = provider$.Provider.of(E, context);
        t7 = child;
        return this.builder(t1, t2, t3, t4, t5, t6, t7);
      }
    }
    (Consumer5.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[builder$4] = builder;
      Consumer5.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = Consumer5.prototype;
    dart.addTypeTests(Consumer5);
    Consumer5.prototype[_is_Consumer5_default] = true;
    dart.addTypeCaches(Consumer5);
    dart.setMethodSignature(Consumer5, () => ({
      __proto__: dart.getMethods(Consumer5.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(Consumer5, I[20]);
    dart.setFieldSignature(Consumer5, () => ({
      __proto__: dart.getFields(Consumer5.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, A, B, C, D, E, dart.nullable(framework.Widget)]))
    }));
    return Consumer5;
  });
  consumer.Consumer5 = consumer.Consumer5$();
  dart.addTypeTests(consumer.Consumer5, _is_Consumer5_default);
  var builder$5 = dart.privateName(consumer, "Consumer6.builder");
  const _is_Consumer6_default = Symbol('_is_Consumer6_default');
  consumer.Consumer6$ = dart.generic((A, B, C, D, E, F) => {
    class Consumer6 extends nested.SingleChildStatelessWidget {
      get builder() {
        return this[builder$5];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#new#tearOff'](A, B, C, D, E, F, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (consumer.Consumer6$(A, B, C, D, E, F)).new({key: key, builder: builder, child: child});
      }
      buildWithChild(context, child) {
        let t8, t7, t6, t5, t4, t3, t2, t1;
        t1 = context;
        t2 = provider$.Provider.of(A, context);
        t3 = provider$.Provider.of(B, context);
        t4 = provider$.Provider.of(C, context);
        t5 = provider$.Provider.of(D, context);
        t6 = provider$.Provider.of(E, context);
        t7 = provider$.Provider.of(F, context);
        t8 = child;
        return this.builder(t1, t2, t3, t4, t5, t6, t7, t8);
      }
    }
    (Consumer6.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[builder$5] = builder;
      Consumer6.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = Consumer6.prototype;
    dart.addTypeTests(Consumer6);
    Consumer6.prototype[_is_Consumer6_default] = true;
    dart.addTypeCaches(Consumer6);
    dart.setMethodSignature(Consumer6, () => ({
      __proto__: dart.getMethods(Consumer6.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(Consumer6, I[20]);
    dart.setFieldSignature(Consumer6, () => ({
      __proto__: dart.getFields(Consumer6.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, A, B, C, D, E, F, dart.nullable(framework.Widget)]))
    }));
    return Consumer6;
  });
  consumer.Consumer6 = consumer.Consumer6$();
  dart.addTypeTests(consumer.Consumer6, _is_Consumer6_default);
  var _children = dart.privateName(nested, "_children");
  nested.Nested = class Nested extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let children = opts && 'children' in opts ? opts.children : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new nested.Nested.new({key: key, children: children, child: child});
    }
    build(context) {
      dart.throw(new core.StateError.new("implemented internally"));
    }
    createElement() {
      return new nested._NestedElement.new(this);
    }
  };
  (nested.Nested.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let children = opts && 'children' in opts ? opts.children : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (!children[$isNotEmpty]) dart.assertFailed(null, I[21], 71, 16, "children.isNotEmpty");
    this[_children] = children;
    this[_child$] = child;
    nested.Nested.__proto__.new.call(this, {key: key});
    ;
  }).prototype = nested.Nested.prototype;
  dart.addTypeTests(nested.Nested);
  dart.addTypeCaches(nested.Nested);
  nested.Nested[dart.implements] = () => [nested.SingleChildWidget];
  dart.setMethodSignature(nested.Nested, () => ({
    __proto__: dart.getMethods(nested.Nested.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    createElement: dart.fnType(nested._NestedElement, [])
  }));
  dart.setLibraryUri(nested.Nested, I[14]);
  dart.setFieldSignature(nested.Nested, () => ({
    __proto__: dart.getFields(nested.Nested.__proto__),
    [_children]: dart.finalFieldType(core.List$(nested.SingleChildWidget)),
    [_child$]: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  provider$.MultiProvider = class MultiProvider extends nested.Nested {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let providers = opts && 'providers' in opts ? opts.providers : null;
      let child = opts && 'child' in opts ? opts.child : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      return new provider$.MultiProvider.new({key: key, providers: providers, child: child, builder: builder});
    }
  };
  (provider$.MultiProvider.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let providers = opts && 'providers' in opts ? opts.providers : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    provider$.MultiProvider.__proto__.new.call(this, {key: key, children: providers, child: builder != null ? new basic.Builder.new({builder: dart.fn(context => builder(context, child), T$.BuildContextToWidget())}) : child});
    ;
  }).prototype = provider$.MultiProvider.prototype;
  dart.addTypeTests(provider$.MultiProvider);
  dart.addTypeCaches(provider$.MultiProvider);
  dart.setLibraryUri(provider$.MultiProvider, I[15]);
  const _is_Provider_default = Symbol('_is_Provider_default');
  provider$.Provider$ = dart.generic(T => {
    var __t$TTovoid = () => (__t$TTovoid = dart.constFn(dart.fnType(dart.void, [T])))();
    class Provider extends provider$.InheritedProvider$(T) {
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$.Provider$(T)).new({key: key, create: create, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
      static ['_#value#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$.Provider$(T)).value({key: key, value: value, updateShouldNotify: updateShouldNotify, builder: builder, child: child});
      }
      static of(T, context, opts) {
        let listen = opts && 'listen' in opts ? opts.listen : true;
        if (!(dart.nullCheck(context.owner).debugBuilding || listen === false || provider$.debugIsInInheritedProviderUpdate)) dart.assertFailed("Tried to listen to a value exposed with provider, from outside of the widget tree.\n\nThis is likely caused by an event handler (like a button's onPressed) that called\nProvider.of without passing `listen: false`.\n\nTo fix, write:\nProvider.of<" + dart.str(dart.wrapType(T)) + ">(context, listen: false);\n\nIt is unsupported because may pointlessly rebuild the widget associated to the\nevent handler, when the widget tree doesn't care about the value.\n\nThe context used was: " + dart.str(context) + "\n", I[22], 265, 7, "context.owner!.debugBuilding ||\n          listen == false ||\n          debugIsInInheritedProviderUpdate");
        let inheritedElement = provider$.Provider._inheritedElementOf(T, context);
        if (listen) {
          context.dependOnInheritedElement(inheritedElement);
        }
        return inheritedElement.value;
      }
      static _inheritedElementOf(T, context) {
        if (!(context !== null)) dart.assertFailed("Tried to call context.read/watch/select or similar on a `context` that is null.\n\nThis can happen if you used the context of a StatefulWidget and that\nStatefulWidget was disposed.\n", I[22], 296, 12, "context != null");
        if (!(provider$._debugIsSelecting === false)) dart.assertFailed("Cannot call context.read/watch/select inside the callback of a context.select", I[22], 303, 7, "_debugIsSelecting == false");
        if (!!dart.wrapType(T)._equals(dart.wrapType(dart.dynamic))) dart.assertFailed("Tried to call Provider.of<dynamic>. This is likely a mistake and is therefore\nunsupported.\n\nIf you want to expose a variable that can be anything, consider changing\n`dynamic` to `Object` instead.\n", I[22], 307, 7, "T != dynamic");
        let inheritedElement = null;
        if (provider$._InheritedProviderScope$(T).is(context.widget)) {
          context.visitAncestorElements(dart.fn(parent => {
            inheritedElement = dart.nullable(provider$._InheritedProviderScopeElement$(T)).as(parent.getElementForInheritedWidgetOfExactType(provider$._InheritedProviderScope$(T)));
            return false;
          }, T$.ElementTobool()));
        } else {
          inheritedElement = dart.nullable(provider$._InheritedProviderScopeElement$(T)).as(context.getElementForInheritedWidgetOfExactType(provider$._InheritedProviderScope$(T)));
        }
        if (inheritedElement == null) {
          dart.throw(new provider$.ProviderNotFoundException.new(dart.wrapType(T), context.widget[$runtimeType]));
        }
        return dart.nullCheck(inheritedElement);
      }
    }
    (Provider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      Provider.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, dispose: dispose, debugCheckInvalidValueType: dart.fn(value => {
          let t1;
          t1 = provider$.Provider.debugCheckInvalidValueType;
          return t1 == null ? null : t1(T, value);
        }, __t$TTovoid()), child: child});
      ;
    }).prototype = Provider.prototype;
    (Provider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      if (!dart.fn(() => {
        let t1;
        t1 = provider$.Provider.debugCheckInvalidValueType;
        t1 == null ? null : t1(T, value);
        return true;
      }, T$.VoidTobool())()) dart.assertFailed(null, I[22], 234, 16, "() {\n          Provider.debugCheckInvalidValueType?.call<T>(value);\n          return true;\n        }()");
      Provider.__proto__.value.call(this, {key: key, builder: builder, value: value, updateShouldNotify: updateShouldNotify, child: child});
      ;
    }).prototype = Provider.prototype;
    dart.addTypeTests(Provider);
    Provider.prototype[_is_Provider_default] = true;
    dart.addTypeCaches(Provider);
    dart.setStaticMethodSignature(Provider, () => ['of', '_inheritedElementOf']);
    dart.setLibraryUri(Provider, I[15]);
    dart.setStaticFieldSignature(Provider, () => ['debugCheckInvalidValueType']);
    return Provider;
  });
  provider$.Provider = provider$.Provider$();
  dart.defineLazy(provider$.Provider, {
    /*provider$.Provider.debugCheckInvalidValueType*/get debugCheckInvalidValueType() {
      return dart.fn((T, value) => {
        if (!dart.fn(() => {
          if (change_notifier.Listenable.is(value) || async.Stream.is(value)) {
            dart.throw(assertions.FlutterError.new("Tried to use Provider with a subtype of Listenable/Stream (" + dart.str(dart.wrapType(T)) + ").\n\nThis is likely a mistake, as Provider will not automatically update dependents\nwhen " + dart.str(dart.wrapType(T)) + " is updated. Instead, consider changing Provider for more specific\nimplementation that handles the update mechanism, such as:\n\n- ListenableProvider\n- ChangeNotifierProvider\n- ValueListenableProvider\n- StreamProvider\n\nAlternatively, if you are making your own provider, consider using InheritedProvider.\n\nIf you think that this is not an error, you can disable this check by setting\nProvider.debugCheckInvalidValueType to `null` in your main file:\n\n```\nvoid main() {\n  Provider.debugCheckInvalidValueType = null;\n\n  runApp(MyApp());\n}\n```\n"));
          }
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[22], 374, 12, "() {\n      if (value is Listenable || value is Stream) {\n        throw FlutterError('''\nTried to use Provider with a subtype of Listenable/Stream ($T).\n\nThis is likely a mistake, as Provider will not automatically update dependents\nwhen $T is updated. Instead, consider changing Provider for more specific\nimplementation that handles the update mechanism, such as:\n\n- ListenableProvider\n- ChangeNotifierProvider\n- ValueListenableProvider\n- StreamProvider\n\nAlternatively, if you are making your own provider, consider using InheritedProvider.\n\nIf you think that this is not an error, you can disable this check by setting\nProvider.debugCheckInvalidValueType to `null` in your main file:\n\n```\nvoid main() {\n  Provider.debugCheckInvalidValueType = null;\n\n  runApp(MyApp());\n}\n```\n''');\n      }\n      return true;\n    }()");
      }, T$.TTovoid$1());
    },
    set debugCheckInvalidValueType(value) {}
  }, false);
  dart.addTypeTests(provider$.Provider, _is_Provider_default);
  var valueType$ = dart.privateName(provider$, "ProviderNotFoundException.valueType");
  var widgetType$ = dart.privateName(provider$, "ProviderNotFoundException.widgetType");
  provider$.ProviderNotFoundException = class ProviderNotFoundException extends core.Object {
    get valueType() {
      return this[valueType$];
    }
    set valueType(value) {
      super.valueType = value;
    }
    get widgetType() {
      return this[widgetType$];
    }
    set widgetType(value) {
      super.widgetType = value;
    }
    static ['_#new#tearOff'](valueType, widgetType) {
      return new provider$.ProviderNotFoundException.new(valueType, widgetType);
    }
    toString() {
      return "Error: Could not find the correct Provider<" + dart.str(this.valueType) + "> above this " + dart.str(this.widgetType) + " Widget\n\nThis happens because you used a `BuildContext` that does not include the provider\nof your choice. There are a few common scenarios:\n\n- You added a new provider in your `main.dart` and performed a hot-reload.\n  To fix, perform a hot-restart.\n\n- The provider you are trying to read is in a different route.\n\n  Providers are \"scoped\". So if you insert of provider inside a route, then\n  other routes will not be able to access that provider.\n\n- You used a `BuildContext` that is an ancestor of the provider you are trying to read.\n\n  Make sure that " + dart.str(this.widgetType) + " is under your MultiProvider/Provider<" + dart.str(this.valueType) + ">.\n  This usually happens when you are creating a provider and trying to read it immediately.\n\n  For example, instead of:\n\n  ```\n  Widget build(BuildContext context) {\n    return Provider<Example>(\n      create: (_) => Example(),\n      // Will throw a ProviderNotFoundError, because `context` is associated\n      // to the widget that is the parent of `Provider<Example>`\n      child: Text(context.watch<Example>()),\n    ),\n  }\n  ```\n\n  consider using `builder` like so:\n\n  ```\n  Widget build(BuildContext context) {\n    return Provider<Example>(\n      create: (_) => Example(),\n      // we use `builder` to obtain a new `BuildContext` that has access to the provider\n      builder: (context) {\n        // No longer throws\n        return Text(context.watch<Example>()),\n      }\n    ),\n  }\n  ```\n\nIf none of these solutions work, consider asking for help on StackOverflow:\nhttps://stackoverflow.com/questions/tagged/flutter\n";
    }
  };
  (provider$.ProviderNotFoundException.new = function(valueType, widgetType) {
    this[valueType$] = valueType;
    this[widgetType$] = widgetType;
    ;
  }).prototype = provider$.ProviderNotFoundException.prototype;
  dart.addTypeTests(provider$.ProviderNotFoundException);
  dart.addTypeCaches(provider$.ProviderNotFoundException);
  provider$.ProviderNotFoundException[dart.implements] = () => [core.Exception];
  dart.setLibraryUri(provider$.ProviderNotFoundException, I[15]);
  dart.setFieldSignature(provider$.ProviderNotFoundException, () => ({
    __proto__: dart.getFields(provider$.ProviderNotFoundException.__proto__),
    valueType: dart.finalFieldType(core.Type),
    widgetType: dart.finalFieldType(core.Type)
  }));
  dart.defineExtensionMethods(provider$.ProviderNotFoundException, ['toString']);
  var _parent = dart.privateName(nested, "_parent");
  var _parent$ = dart.privateName(nested, "SingleChildWidgetElementMixin._parent");
  nested.SingleChildWidgetElementMixin = class SingleChildWidgetElementMixin extends framework.Element {};
  nested.SingleChildWidgetElementMixin[dart.mixinOn] = Element => class SingleChildWidgetElementMixin extends Element {
    get [_parent]() {
      return this[_parent$];
    }
    set [_parent](value) {
      this[_parent$] = value;
    }
    mount(parent, newSlot) {
      if (T$._NestedHookElementN().is(parent)) {
        this[_parent] = parent;
      }
      super.mount(parent, newSlot);
    }
    activate() {
      super.activate();
      this.visitAncestorElements(dart.fn(parent => {
        if (nested._NestedHookElement.is(parent)) {
          this[_parent] = parent;
        }
        return false;
      }, T$.ElementTobool()));
    }
  };
  (nested.SingleChildWidgetElementMixin[dart.mixinNew] = function() {
    this[_parent$] = null;
  }).prototype = nested.SingleChildWidgetElementMixin.prototype;
  dart.addTypeTests(nested.SingleChildWidgetElementMixin);
  dart.addTypeCaches(nested.SingleChildWidgetElementMixin);
  nested.SingleChildWidgetElementMixin[dart.implements] = () => [framework.Element];
  dart.setMethodSignature(nested.SingleChildWidgetElementMixin, () => ({
    __proto__: dart.getMethods(nested.SingleChildWidgetElementMixin.__proto__),
    mount: dart.fnType(dart.void, [dart.nullable(framework.Element), dart.dynamic])
  }));
  dart.setLibraryUri(nested.SingleChildWidgetElementMixin, I[14]);
  dart.setFieldSignature(nested.SingleChildWidgetElementMixin, () => ({
    __proto__: dart.getFields(nested.SingleChildWidgetElementMixin.__proto__),
    [_parent]: dart.fieldType(dart.nullable(nested._NestedHookElement))
  }));
  const StatelessElement_SingleChildWidgetElementMixin$36 = class StatelessElement_SingleChildWidgetElementMixin extends framework.StatelessElement {};
  (StatelessElement_SingleChildWidgetElementMixin$36.new = function(widget) {
    nested.SingleChildWidgetElementMixin[dart.mixinNew].call(this);
    StatelessElement_SingleChildWidgetElementMixin$36.__proto__.new.call(this, widget);
  }).prototype = StatelessElement_SingleChildWidgetElementMixin$36.prototype;
  dart.applyMixin(StatelessElement_SingleChildWidgetElementMixin$36, nested.SingleChildWidgetElementMixin);
  nested.SingleChildStatelessElement = class SingleChildStatelessElement extends StatelessElement_SingleChildWidgetElementMixin$36 {
    static ['_#new#tearOff'](widget) {
      return new nested.SingleChildStatelessElement.new(widget);
    }
    build() {
      if (this[_parent] != null) {
        return this.widget.buildWithChild(this, dart.nullCheck(this[_parent]).injectedChild);
      }
      return super.build();
    }
    get widget() {
      return nested.SingleChildStatelessWidget.as(super.widget);
    }
  };
  (nested.SingleChildStatelessElement.new = function(widget) {
    nested.SingleChildStatelessElement.__proto__.new.call(this, widget);
    ;
  }).prototype = nested.SingleChildStatelessElement.prototype;
  dart.addTypeTests(nested.SingleChildStatelessElement);
  dart.addTypeCaches(nested.SingleChildStatelessElement);
  dart.setGetterSignature(nested.SingleChildStatelessElement, () => ({
    __proto__: dart.getGetters(nested.SingleChildStatelessElement.__proto__),
    widget: nested.SingleChildStatelessWidget
  }));
  dart.setLibraryUri(nested.SingleChildStatelessElement, I[14]);
  const _is__InheritedProviderElement_default = Symbol('_is__InheritedProviderElement_default');
  provider$._InheritedProviderElement$ = dart.generic(T => {
    class _InheritedProviderElement extends nested.SingleChildStatelessElement {
      static ['_#new#tearOff'](T, widget) {
        return new (provider$._InheritedProviderElement$(T)).new(widget);
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        this.visitChildren(dart.fn(e => e.debugFillProperties(properties), T$.ElementTovoid()));
      }
    }
    (_InheritedProviderElement.new = function(widget) {
      _InheritedProviderElement.__proto__.new.call(this, widget);
      ;
    }).prototype = _InheritedProviderElement.prototype;
    dart.addTypeTests(_InheritedProviderElement);
    _InheritedProviderElement.prototype[_is__InheritedProviderElement_default] = true;
    dart.addTypeCaches(_InheritedProviderElement);
    dart.setLibraryUri(_InheritedProviderElement, I[15]);
    return _InheritedProviderElement;
  });
  provider$._InheritedProviderElement = provider$._InheritedProviderElement$();
  dart.addTypeTests(provider$._InheritedProviderElement, _is__InheritedProviderElement_default);
  const _is_InheritedContext_default = Symbol('_is_InheritedContext_default');
  provider$.InheritedContext$ = dart.generic(T => {
    class InheritedContext extends framework.BuildContext {}
    (InheritedContext.new = function() {
      ;
    }).prototype = InheritedContext.prototype;
    dart.addTypeTests(InheritedContext);
    InheritedContext.prototype[_is_InheritedContext_default] = true;
    dart.addTypeCaches(InheritedContext);
    dart.setLibraryUri(InheritedContext, I[15]);
    return InheritedContext;
  });
  provider$.InheritedContext = provider$.InheritedContext$();
  dart.addTypeTests(provider$.InheritedContext, _is_InheritedContext_default);
  var owner$ = dart.privateName(provider$, "_InheritedProviderScope.owner");
  var debugType$ = dart.privateName(provider$, "_InheritedProviderScope.debugType");
  const _is__InheritedProviderScope_default = Symbol('_is__InheritedProviderScope_default');
  provider$._InheritedProviderScope$ = dart.generic(T => {
    var __t$_InheritedProviderScopeElementOfT = () => (__t$_InheritedProviderScopeElementOfT = dart.constFn(provider$._InheritedProviderScopeElement$(T)))();
    class _InheritedProviderScope extends framework.InheritedWidget {
      get owner() {
        return this[owner$];
      }
      set owner(value) {
        super.owner = value;
      }
      get debugType() {
        return this[debugType$];
      }
      set debugType(value) {
        super.debugType = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let owner = opts && 'owner' in opts ? opts.owner : null;
        let debugType = opts && 'debugType' in opts ? opts.debugType : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$._InheritedProviderScope$(T)).new({owner: owner, debugType: debugType, child: child});
      }
      updateShouldNotify(oldWidget) {
        framework.InheritedWidget.as(oldWidget);
        return false;
      }
      createElement() {
        return new (__t$_InheritedProviderScopeElementOfT()).new(this);
      }
    }
    (_InheritedProviderScope.new = function(opts) {
      let owner = opts && 'owner' in opts ? opts.owner : null;
      let debugType = opts && 'debugType' in opts ? opts.debugType : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[owner$] = owner;
      this[debugType$] = debugType;
      _InheritedProviderScope.__proto__.new.call(this, {child: child});
      ;
    }).prototype = _InheritedProviderScope.prototype;
    dart.addTypeTests(_InheritedProviderScope);
    _InheritedProviderScope.prototype[_is__InheritedProviderScope_default] = true;
    dart.addTypeCaches(_InheritedProviderScope);
    dart.setMethodSignature(_InheritedProviderScope, () => ({
      __proto__: dart.getMethods(_InheritedProviderScope.__proto__),
      updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)]),
      createElement: dart.fnType(provider$._InheritedProviderScopeElement$(T), [])
    }));
    dart.setLibraryUri(_InheritedProviderScope, I[15]);
    dart.setFieldSignature(_InheritedProviderScope, () => ({
      __proto__: dart.getFields(_InheritedProviderScope.__proto__),
      owner: dart.finalFieldType(provider$.InheritedProvider$(T)),
      debugType: dart.finalFieldType(core.String)
    }));
    return _InheritedProviderScope;
  });
  provider$._InheritedProviderScope = provider$._InheritedProviderScope$();
  dart.addTypeTests(provider$._InheritedProviderScope, _is__InheritedProviderScope_default);
  const _is__Dependency_default = Symbol('_is__Dependency_default');
  provider$._Dependency$ = dart.generic(T => {
    var __t$TTobool = () => (__t$TTobool = dart.constFn(dart.fnType(core.bool, [T])))();
    var __t$JSArrayOfTTobool = () => (__t$JSArrayOfTTobool = dart.constFn(_interceptors.JSArray$(__t$TTobool())))();
    class _Dependency extends core.Object {
      static ['_#new#tearOff'](T) {
        return new (provider$._Dependency$(T)).new();
      }
    }
    (_Dependency.new = function() {
      this.shouldClearSelectors = false;
      this.shouldClearMutationScheduled = false;
      this.selectors = __t$JSArrayOfTTobool().of([]);
      ;
    }).prototype = _Dependency.prototype;
    dart.addTypeTests(_Dependency);
    _Dependency.prototype[_is__Dependency_default] = true;
    dart.addTypeCaches(_Dependency);
    dart.setLibraryUri(_Dependency, I[15]);
    dart.setFieldSignature(_Dependency, () => ({
      __proto__: dart.getFields(_Dependency.__proto__),
      shouldClearSelectors: dart.fieldType(core.bool),
      shouldClearMutationScheduled: dart.fieldType(core.bool),
      selectors: dart.finalFieldType(core.List$(dart.fnType(core.bool, [T])))
    }));
    return _Dependency;
  });
  provider$._Dependency = provider$._Dependency$();
  dart.addTypeTests(provider$._Dependency, _is__Dependency_default);
  var _shouldNotifyDependents = dart.privateName(provider$, "_shouldNotifyDependents");
  var _debugInheritLocked = dart.privateName(provider$, "_debugInheritLocked");
  var _isNotifyDependentsEnabled = dart.privateName(provider$, "_isNotifyDependentsEnabled");
  var _firstBuild = dart.privateName(provider$, "_firstBuild");
  var _updatedShouldNotify = dart.privateName(provider$, "_updatedShouldNotify");
  var _isBuildFromExternalSources = dart.privateName(provider$, "_isBuildFromExternalSources");
  var ___InheritedProviderScopeElement__delegateState = dart.privateName(provider$, "_#_InheritedProviderScopeElement#_delegateState");
  var ___InheritedProviderScopeElement__debugId = dart.privateName(provider$, "_#_InheritedProviderScopeElement#_debugId");
  var _delegateState = dart.privateName(provider$, "_delegateState");
  var _debugId = dart.privateName(provider$, "_debugId");
  var _debugSetInheritedLock = dart.privateName(provider$, "_debugSetInheritedLock");
  const _is__InheritedProviderScopeElement_default = Symbol('_is__InheritedProviderScopeElement_default');
  provider$._InheritedProviderScopeElement$ = dart.generic(T => {
    var __t$_InheritedProviderScopeOfT = () => (__t$_InheritedProviderScopeOfT = dart.constFn(provider$._InheritedProviderScope$(T)))();
    var __t$_DependencyOfT = () => (__t$_DependencyOfT = dart.constFn(provider$._Dependency$(T)))();
    var __t$TTobool = () => (__t$TTobool = dart.constFn(dart.fnType(core.bool, [T])))();
    var __t$ListOfTTobool = () => (__t$ListOfTTobool = dart.constFn(core.List$(__t$TTobool())))();
    class _InheritedProviderScopeElement extends framework.InheritedElement {
      static ['_#new#tearOff'](T, widget) {
        return new (provider$._InheritedProviderScopeElement$(T)).new(widget);
      }
      get [_delegateState]() {
        let t1;
        t1 = this[___InheritedProviderScopeElement__delegateState];
        return t1 == null ? dart.throw(new _internal.LateError.fieldNI("_delegateState")) : t1;
      }
      set [_delegateState](_delegateState$35param) {
        this[___InheritedProviderScopeElement__delegateState] = _delegateState$35param;
      }
      get [_debugId]() {
        let t1;
        t1 = this[___InheritedProviderScopeElement__debugId];
        return t1 == null ? dart.throw(new _internal.LateError.fieldNI("_debugId")) : t1;
      }
      set [_debugId](_debugId$35param) {
        this[___InheritedProviderScopeElement__debugId] = _debugId$35param;
      }
      mount(parent, newSlot) {
        let t1;
        {
          this[_debugId] = dart.str((t1 = provider$._InheritedProviderScopeElement._nextProviderId, provider$._InheritedProviderScopeElement._nextProviderId = t1 + 1, t1));
          provider$.ProviderBinding.debugInstance.providerDetails = (() => {
            let t1 = T$.LinkedHashMapOfString$ProviderNode().of(provider$.ProviderBinding.debugInstance.providerDetails);
            t1[$_set](this[_debugId], new provider$.ProviderNode.new({id: this[_debugId], childrenNodeIds: C[14] || CT.C14, type: this.widget.debugType, element: this}));
            return t1;
          })();
        }
        super.mount(parent, newSlot);
      }
      get widget() {
        return __t$_InheritedProviderScopeOfT().as(super.widget);
      }
      reassemble() {
        super.reassemble();
        let value = this[_delegateState].hasValue ? this[_delegateState].value : null;
        if (reassemble_handler.ReassembleHandler.is(value)) {
          value.reassemble();
        }
      }
      updateDependencies(dependent, aspect) {
        let t2;
        let dependencies = this.getDependencies(dependent);
        if (dependencies != null && !__t$_DependencyOfT().is(dependencies)) {
          return;
        }
        if (__t$TTobool().is(aspect)) {
          let selectorDependency = __t$_DependencyOfT().as((t2 = dependencies, t2 == null ? new (__t$_DependencyOfT()).new() : t2));
          if (selectorDependency.shouldClearSelectors) {
            selectorDependency.shouldClearSelectors = false;
            __t$ListOfTTobool().as(selectorDependency.selectors)[$clear]();
          }
          if (selectorDependency.shouldClearMutationScheduled === false) {
            selectorDependency.shouldClearMutationScheduled = true;
            binding$.SchedulerBinding.instance.addPostFrameCallback(dart.fn(_ => {
              let t2;
              t2 = selectorDependency;
              (() => {
                t2.shouldClearMutationScheduled = false;
                t2.shouldClearSelectors = true;
                return t2;
              })();
            }, T$.DurationTovoid()));
          }
          __t$ListOfTTobool().as(selectorDependency.selectors)[$add](aspect);
          this.setDependencies(dependent, selectorDependency);
        } else {
          this.setDependencies(dependent, C[15] || CT.C15);
        }
      }
      notifyDependent(oldWidget, dependent) {
        framework.InheritedWidget.as(oldWidget);
        let dependencies = this.getDependencies(dependent);
        {
          provider$.ProviderBinding.debugInstance.providerDidChange(this[_debugId]);
        }
        let shouldNotify = false;
        if (dependencies != null) {
          if (__t$_DependencyOfT().is(dependencies)) {
            if (dependent.dirty) {
              return;
            }
            for (let updateShouldNotify of __t$ListOfTTobool().as(dependencies.selectors)) {
              try {
                if (!dart.fn(() => {
                  provider$._debugIsSelecting = true;
                  return true;
                }, T$.VoidTobool())()) dart.assertFailed(null, I[13], 425, 20, "() {\n              _debugIsSelecting = true;\n              return true;\n            }()");
                shouldNotify = updateShouldNotify(this.value);
              } finally {
                if (!dart.fn(() => {
                  provider$._debugIsSelecting = false;
                  return true;
                }, T$.VoidTobool())()) dart.assertFailed(null, I[13], 431, 20, "() {\n              _debugIsSelecting = false;\n              return true;\n            }()");
              }
              if (shouldNotify) {
                break;
              }
            }
          } else {
            shouldNotify = true;
          }
        }
        if (shouldNotify) {
          dependent.didChangeDependencies();
        }
      }
      performRebuild() {
        let t2;
        if (this[_firstBuild]) {
          this[_firstBuild] = false;
          this[_delegateState] = (t2 = this.widget.owner[_delegate].createState(), (() => {
            t2.element = this;
            return t2;
          })());
        }
        super.performRebuild();
      }
      update(newWidget) {
        __t$_InheritedProviderScopeOfT().as(newWidget);
        if (!dart.fn(() => {
          if (!this.widget.owner[_delegate][$runtimeType]._equals(newWidget.owner[_delegate][$runtimeType])) {
            dart.throw(new core.StateError.new("Rebuilt " + dart.str(this.widget) + " using a different constructor.\n      \nThis is likely a mistake and is unsupported.\nIf you're in this situation, consider passing a `key` unique to each individual constructor.\n"));
          }
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[13], 461, 12, "() {\n      if (widget.owner._delegate.runtimeType !=\n          newWidget.owner._delegate.runtimeType) {\n        throw StateError('''\nRebuilt $widget using a different constructor.\n      \nThis is likely a mistake and is unsupported.\nIf you're in this situation, consider passing a `key` unique to each individual constructor.\n''');\n      }\n      return true;\n    }()");
        this[_isBuildFromExternalSources] = true;
        this[_updatedShouldNotify] = this[_delegateState].willUpdateDelegate(newWidget.owner[_delegate]);
        super.update(newWidget);
        this[_updatedShouldNotify] = false;
      }
      updated(oldWidget) {
        framework.InheritedWidget.as(oldWidget);
        super.updated(oldWidget);
        if (this[_updatedShouldNotify]) {
          this.notifyClients(oldWidget);
        }
      }
      didChangeDependencies() {
        this[_isBuildFromExternalSources] = true;
        super.didChangeDependencies();
      }
      build() {
        if (this.widget.owner[_lazy] === false) {
          this.value;
        }
        this[_delegateState].build({isBuildFromExternalSources: this[_isBuildFromExternalSources]});
        this[_isBuildFromExternalSources] = false;
        if (this[_shouldNotifyDependents]) {
          this[_shouldNotifyDependents] = false;
          this.notifyClients(this.widget);
        }
        return super.build();
      }
      unmount() {
        let t3;
        this[_delegateState].dispose();
        {
          provider$.ProviderBinding.debugInstance.providerDetails = (t3 = (() => {
            let t2 = T$.LinkedHashMapOfString$ProviderNode().of(provider$.ProviderBinding.debugInstance.providerDetails);
            return t2;
          })(), (() => {
            t3[$remove](this[_debugId]);
            return t3;
          })());
        }
        super.unmount();
      }
      get hasValue() {
        return this[_delegateState].hasValue;
      }
      markNeedsNotifyDependents() {
        if (!this[_isNotifyDependentsEnabled]) {
          return;
        }
        this.markNeedsBuild();
        this[_shouldNotifyDependents] = true;
      }
      [_debugSetInheritedLock](value) {
        if (!dart.fn(() => {
          this[_debugInheritLocked] = value;
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[13], 536, 12, "() {\n      _debugInheritLocked = value;\n      return true;\n    }()");
        return true;
      }
      get value() {
        return this[_delegateState].value;
      }
      dependOnInheritedElement(ancestor, opts) {
        let aspect = opts && 'aspect' in opts ? opts.aspect : null;
        if (!dart.fn(() => {
          if (this[_debugInheritLocked]) {
            dart.throw(new assertions.FlutterError.fromParts(T$.JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Tried to listen to an InheritedWidget " + "in a life-cycle that will never be called again."), new assertions.ErrorDescription.new("This error typically happens when calling Provider.of with `listen` to `true`,\nin a situation where listening to the provider doesn't make sense, such as:\n- initState of a StatefulWidget\n- the \"create\" callback of a provider\n\nThis is undesired because these life-cycles are called only once in the\nlifetime of a widget. As such, while `listen` is `true`, the widget has\nno mean to handle the update scenario.\n\nTo fix, consider:\n- passing `listen: false` to `Provider.of`\n- use a life-cycle that handles updates (like didChangeDependencies)\n- use a provider that handles updates (like ProxyProvider).\n")])));
          }
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[13], 551, 12, "() {\n      if (_debugInheritLocked) {\n        throw FlutterError.fromParts(\n          <DiagnosticsNode>[\n            ErrorSummary(\n              'Tried to listen to an InheritedWidget '\n              'in a life-cycle that will never be called again.',\n            ),\n            ErrorDescription('''\nThis error typically happens when calling Provider.of with `listen` to `true`,\nin a situation where listening to the provider doesn't make sense, such as:\n- initState of a StatefulWidget\n- the \"create\" callback of a provider\n\nThis is undesired because these life-cycles are called only once in the\nlifetime of a widget. As such, while `listen` is `true`, the widget has\nno mean to handle the update scenario.\n\nTo fix, consider:\n- passing `listen: false` to `Provider.of`\n- use a life-cycle that handles updates (like didChangeDependencies)\n- use a provider that handles updates (like ProxyProvider).\n'''),\n          ],\n        );\n      }\n      return true;\n    }()");
        return super.dependOnInheritedElement(ancestor, {aspect: aspect});
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        this[_delegateState].debugFillProperties(properties);
      }
    }
    (_InheritedProviderScopeElement.new = function(widget) {
      this[_shouldNotifyDependents] = false;
      this[_debugInheritLocked] = false;
      this[_isNotifyDependentsEnabled] = true;
      this[_firstBuild] = true;
      this[_updatedShouldNotify] = false;
      this[_isBuildFromExternalSources] = false;
      this[___InheritedProviderScopeElement__delegateState] = null;
      this[___InheritedProviderScopeElement__debugId] = null;
      _InheritedProviderScopeElement.__proto__.new.call(this, widget);
      ;
    }).prototype = _InheritedProviderScopeElement.prototype;
    dart.addTypeTests(_InheritedProviderScopeElement);
    _InheritedProviderScopeElement.prototype[_is__InheritedProviderScopeElement_default] = true;
    dart.addTypeCaches(_InheritedProviderScopeElement);
    _InheritedProviderScopeElement[dart.implements] = () => [provider$.InheritedContext$(T)];
    dart.setMethodSignature(_InheritedProviderScopeElement, () => ({
      __proto__: dart.getMethods(_InheritedProviderScopeElement.__proto__),
      mount: dart.fnType(dart.void, [dart.nullable(framework.Element), dart.dynamic]),
      markNeedsNotifyDependents: dart.fnType(dart.void, []),
      [_debugSetInheritedLock]: dart.fnType(core.bool, [core.bool])
    }));
    dart.setGetterSignature(_InheritedProviderScopeElement, () => ({
      __proto__: dart.getGetters(_InheritedProviderScopeElement.__proto__),
      [_delegateState]: provider$._DelegateState$(T, provider$._Delegate$(T)),
      [_debugId]: core.String,
      widget: provider$._InheritedProviderScope$(T),
      hasValue: core.bool,
      value: T
    }));
    dart.setSetterSignature(_InheritedProviderScopeElement, () => ({
      __proto__: dart.getSetters(_InheritedProviderScopeElement.__proto__),
      [_delegateState]: provider$._DelegateState$(T, provider$._Delegate$(T)),
      [_debugId]: core.String
    }));
    dart.setLibraryUri(_InheritedProviderScopeElement, I[15]);
    dart.setFieldSignature(_InheritedProviderScopeElement, () => ({
      __proto__: dart.getFields(_InheritedProviderScopeElement.__proto__),
      [_shouldNotifyDependents]: dart.fieldType(core.bool),
      [_debugInheritLocked]: dart.fieldType(core.bool),
      [_isNotifyDependentsEnabled]: dart.fieldType(core.bool),
      [_firstBuild]: dart.fieldType(core.bool),
      [_updatedShouldNotify]: dart.fieldType(core.bool),
      [_isBuildFromExternalSources]: dart.fieldType(core.bool),
      [___InheritedProviderScopeElement__delegateState]: dart.fieldType(dart.nullable(provider$._DelegateState$(T, provider$._Delegate$(T)))),
      [___InheritedProviderScopeElement__debugId]: dart.fieldType(dart.nullable(core.String))
    }));
    dart.setStaticFieldSignature(_InheritedProviderScopeElement, () => ['_nextProviderId']);
    return _InheritedProviderScopeElement;
  });
  provider$._InheritedProviderScopeElement = provider$._InheritedProviderScopeElement$();
  dart.defineLazy(provider$._InheritedProviderScopeElement, {
    /*provider$._InheritedProviderScopeElement._nextProviderId*/get _nextProviderId() {
      return 0;
    },
    set _nextProviderId(value) {}
  }, false);
  dart.addTypeTests(provider$._InheritedProviderScopeElement, _is__InheritedProviderScopeElement_default);
  const _is__Delegate_default = Symbol('_is__Delegate_default');
  provider$._Delegate$ = dart.generic(T => {
    class _Delegate extends core.Object {
      debugFillProperties(properties) {
      }
    }
    (_Delegate.new = function() {
      ;
    }).prototype = _Delegate.prototype;
    dart.addTypeTests(_Delegate);
    _Delegate.prototype[_is__Delegate_default] = true;
    dart.addTypeCaches(_Delegate);
    dart.setMethodSignature(_Delegate, () => ({
      __proto__: dart.getMethods(_Delegate.__proto__),
      debugFillProperties: dart.fnType(dart.void, [diagnostics.DiagnosticPropertiesBuilder])
    }));
    dart.setLibraryUri(_Delegate, I[15]);
    return _Delegate;
  });
  provider$._Delegate = provider$._Delegate$();
  dart.addTypeTests(provider$._Delegate, _is__Delegate_default);
  var element = dart.privateName(provider$, "_DelegateState.element");
  const _is__DelegateState_default = Symbol('_is__DelegateState_default');
  provider$._DelegateState$ = dart.generic((T, D) => {
    var __t$_InheritedProviderScopeElementOfT = () => (__t$_InheritedProviderScopeElementOfT = dart.constFn(provider$._InheritedProviderScopeElement$(T)))();
    var __t$_InheritedProviderScopeElementNOfT = () => (__t$_InheritedProviderScopeElementNOfT = dart.constFn(dart.nullable(__t$_InheritedProviderScopeElementOfT())))();
    class _DelegateState extends core.Object {
      get element() {
        return this[element];
      }
      set element(value) {
        this[element] = __t$_InheritedProviderScopeElementNOfT().as(value);
      }
      get delegate() {
        return D.as(dart.nullCheck(this.element).widget.owner[_delegate]);
      }
      debugSetInheritedLock(value) {
        return dart.nullCheck(this.element)[_debugSetInheritedLock](value);
      }
      willUpdateDelegate(newDelegate) {
        D.as(newDelegate);
        return false;
      }
      dispose() {
      }
      debugFillProperties(properties) {
      }
      build(opts) {
        let isBuildFromExternalSources = opts && 'isBuildFromExternalSources' in opts ? opts.isBuildFromExternalSources : null;
      }
    }
    (_DelegateState.new = function() {
      this[element] = null;
      ;
    }).prototype = _DelegateState.prototype;
    dart.addTypeTests(_DelegateState);
    _DelegateState.prototype[_is__DelegateState_default] = true;
    dart.addTypeCaches(_DelegateState);
    dart.setMethodSignature(_DelegateState, () => ({
      __proto__: dart.getMethods(_DelegateState.__proto__),
      debugSetInheritedLock: dart.fnType(core.bool, [core.bool]),
      willUpdateDelegate: dart.fnType(core.bool, [dart.nullable(core.Object)]),
      dispose: dart.fnType(dart.void, []),
      debugFillProperties: dart.fnType(dart.void, [diagnostics.DiagnosticPropertiesBuilder]),
      build: dart.fnType(dart.void, [], {}, {isBuildFromExternalSources: core.bool})
    }));
    dart.setGetterSignature(_DelegateState, () => ({
      __proto__: dart.getGetters(_DelegateState.__proto__),
      delegate: D
    }));
    dart.setLibraryUri(_DelegateState, I[15]);
    dart.setFieldSignature(_DelegateState, () => ({
      __proto__: dart.getFields(_DelegateState.__proto__),
      element: dart.fieldType(dart.nullable(provider$._InheritedProviderScopeElement$(T)))
    }));
    return _DelegateState;
  });
  provider$._DelegateState = provider$._DelegateState$();
  dart.addTypeTests(provider$._DelegateState, _is__DelegateState_default);
  var _updateShouldNotify = dart.privateName(provider$, "_updateShouldNotify");
  const _is__CreateInheritedProvider_default = Symbol('_is__CreateInheritedProvider_default');
  provider$._CreateInheritedProvider$ = dart.generic(T => {
    var __t$_CreateInheritedProviderStateOfT = () => (__t$_CreateInheritedProviderStateOfT = dart.constFn(provider$._CreateInheritedProviderState$(T)))();
    class _CreateInheritedProvider extends provider$._Delegate$(T) {
      static ['_#new#tearOff'](T, opts) {
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let debugCheckInvalidValueType = opts && 'debugCheckInvalidValueType' in opts ? opts.debugCheckInvalidValueType : null;
        let startListening = opts && 'startListening' in opts ? opts.startListening : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        return new (provider$._CreateInheritedProvider$(T)).new({create: create, update: update, updateShouldNotify: updateShouldNotify, debugCheckInvalidValueType: debugCheckInvalidValueType, startListening: startListening, dispose: dispose});
      }
      createState() {
        return new (__t$_CreateInheritedProviderStateOfT()).new();
      }
    }
    (_CreateInheritedProvider.new = function(opts) {
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let debugCheckInvalidValueType = opts && 'debugCheckInvalidValueType' in opts ? opts.debugCheckInvalidValueType : null;
      let startListening = opts && 'startListening' in opts ? opts.startListening : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      this.create = create;
      this.update = update;
      this.debugCheckInvalidValueType = debugCheckInvalidValueType;
      this.startListening = startListening;
      this.dispose = dispose;
      if (!(create != null || update != null)) dart.assertFailed(null, I[13], 628, 16, "create != null || update != null");
      this[_updateShouldNotify] = updateShouldNotify;
      ;
    }).prototype = _CreateInheritedProvider.prototype;
    dart.addTypeTests(_CreateInheritedProvider);
    _CreateInheritedProvider.prototype[_is__CreateInheritedProvider_default] = true;
    dart.addTypeCaches(_CreateInheritedProvider);
    dart.setMethodSignature(_CreateInheritedProvider, () => ({
      __proto__: dart.getMethods(_CreateInheritedProvider.__proto__),
      createState: dart.fnType(provider$._CreateInheritedProviderState$(T), [])
    }));
    dart.setLibraryUri(_CreateInheritedProvider, I[15]);
    dart.setFieldSignature(_CreateInheritedProvider, () => ({
      __proto__: dart.getFields(_CreateInheritedProvider.__proto__),
      create: dart.finalFieldType(dart.nullable(dart.fnType(T, [framework.BuildContext]))),
      update: dart.finalFieldType(dart.nullable(dart.fnType(T, [framework.BuildContext, dart.nullable(T)]))),
      [_updateShouldNotify]: dart.finalFieldType(dart.nullable(dart.fnType(core.bool, [T, T]))),
      debugCheckInvalidValueType: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [T]))),
      startListening: dart.finalFieldType(dart.nullable(dart.fnType(dart.fnType(dart.void, []), [provider$.InheritedContext$(T), T]))),
      dispose: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [framework.BuildContext, T])))
    }));
    return _CreateInheritedProvider;
  });
  provider$._CreateInheritedProvider = provider$._CreateInheritedProvider$();
  dart.addTypeTests(provider$._CreateInheritedProvider, _is__CreateInheritedProvider_default);
  var _removeListener = dart.privateName(provider$, "_removeListener");
  var _didInitValue = dart.privateName(provider$, "_didInitValue");
  var _value = dart.privateName(provider$, "_value");
  var _previousWidget = dart.privateName(provider$, "_previousWidget");
  const _is__CreateInheritedProviderState_default = Symbol('_is__CreateInheritedProviderState_default');
  provider$._CreateInheritedProviderState$ = dart.generic(T => {
    var __t$TTovoid = () => (__t$TTovoid = dart.constFn(dart.fnType(dart.void, [T])))();
    var __t$TToNvoid = () => (__t$TToNvoid = dart.constFn(dart.nullable(__t$TTovoid())))();
    var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
    var __t$BuildContextAndTNToT = () => (__t$BuildContextAndTNToT = dart.constFn(dart.fnType(T, [framework.BuildContext, __t$TN()])))();
    var __t$BuildContextAndTNToNT = () => (__t$BuildContextAndTNToNT = dart.constFn(dart.nullable(__t$BuildContextAndTNToT())))();
    var __t$InheritedContextOfT = () => (__t$InheritedContextOfT = dart.constFn(provider$.InheritedContext$(T)))();
    var __t$InheritedContextOfTAndTToFn = () => (__t$InheritedContextOfTAndTToFn = dart.constFn(dart.fnType(T$.VoidTovoid(), [__t$InheritedContextOfT(), T])))();
    var __t$InheritedContextOfTAndTToNFn = () => (__t$InheritedContextOfTAndTToNFn = dart.constFn(dart.nullable(__t$InheritedContextOfTAndTToFn())))();
    var __t$BuildContextAndTTovoid = () => (__t$BuildContextAndTTovoid = dart.constFn(dart.fnType(dart.void, [framework.BuildContext, T])))();
    var __t$BuildContextAndTToNvoid = () => (__t$BuildContextAndTToNvoid = dart.constFn(dart.nullable(__t$BuildContextAndTTovoid())))();
    var __t$DiagnosticsPropertyOfT = () => (__t$DiagnosticsPropertyOfT = dart.constFn(diagnostics.DiagnosticsProperty$(T)))();
    var __t$TAndTTobool = () => (__t$TAndTTobool = dart.constFn(dart.fnType(core.bool, [T, T])))();
    var __t$TAndTToNbool = () => (__t$TAndTToNbool = dart.constFn(dart.nullable(__t$TAndTTobool())))();
    class _CreateInheritedProviderState extends provider$._DelegateState$(T, provider$._CreateInheritedProvider$(T)) {
      get value() {
        let t3;
        if (this[_didInitValue] && !T.is(this[_value])) {
          dart.throw(new core.StateError.new("Tried to read a provider that threw during the creation of its value.\n" + "The exception occurred during the creation of type " + dart.str(dart.wrapType(T)) + "."));
        }
        let _debugPreviousIsInInheritedProviderCreate = null;
        let _debugPreviousIsInInheritedProviderUpdate = null;
        if (!dart.fn(() => {
          _debugPreviousIsInInheritedProviderCreate = provider$.debugIsInInheritedProviderCreate;
          _debugPreviousIsInInheritedProviderUpdate = provider$.debugIsInInheritedProviderUpdate;
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[13], 669, 12, "() {\n      _debugPreviousIsInInheritedProviderCreate =\n          debugIsInInheritedProviderCreate;\n      _debugPreviousIsInInheritedProviderUpdate =\n          debugIsInInheritedProviderUpdate;\n      return true;\n    }()");
        if (!this[_didInitValue]) {
          this[_didInitValue] = true;
          if (this.delegate.create != null) {
            if (!this.debugSetInheritedLock(true)) dart.assertFailed(null, I[13], 680, 16, "debugSetInheritedLock(true)");
            try {
              if (!dart.fn(() => {
                provider$.debugIsInInheritedProviderCreate = true;
                provider$.debugIsInInheritedProviderUpdate = false;
                return true;
              }, T$.VoidTobool())()) dart.assertFailed(null, I[13], 682, 18, "() {\n            debugIsInInheritedProviderCreate = true;\n            debugIsInInheritedProviderUpdate = false;\n            return true;\n          }()");
              this[_value] = dart.nullCheck(this.delegate.create)(dart.nullCheck(this.element));
            } finally {
              if (!dart.fn(() => {
                provider$.debugIsInInheritedProviderCreate = dart.nullCheck(_debugPreviousIsInInheritedProviderCreate);
                provider$.debugIsInInheritedProviderUpdate = dart.nullCheck(_debugPreviousIsInInheritedProviderUpdate);
                return true;
              }, T$.VoidTobool())()) dart.assertFailed(null, I[13], 689, 18, "() {\n            debugIsInInheritedProviderCreate =\n                _debugPreviousIsInInheritedProviderCreate!;\n            debugIsInInheritedProviderUpdate =\n                _debugPreviousIsInInheritedProviderUpdate!;\n            return true;\n          }()");
            }
            if (!this.debugSetInheritedLock(false)) dart.assertFailed(null, I[13], 697, 16, "debugSetInheritedLock(false)");
            if (!dart.fn(() => {
              let t3;
              t3 = __t$TToNvoid().as(this.delegate.debugCheckInvalidValueType);
              t3 == null ? null : t3(T.as(this[_value]));
              return true;
            }, T$.VoidTobool())()) dart.assertFailed(null, I[13], 699, 16, "() {\n          delegate.debugCheckInvalidValueType?.call(_value as T);\n          return true;\n        }()");
          }
          if (__t$BuildContextAndTNToNT().as(this.delegate.update) != null) {
            try {
              if (!dart.fn(() => {
                provider$.debugIsInInheritedProviderCreate = false;
                provider$.debugIsInInheritedProviderUpdate = true;
                return true;
              }, T$.VoidTobool())()) dart.assertFailed(null, I[13], 706, 18, "() {\n            debugIsInInheritedProviderCreate = false;\n            debugIsInInheritedProviderUpdate = true;\n            return true;\n          }()");
              this[_value] = dart.nullCheck(__t$BuildContextAndTNToNT().as(this.delegate.update))(dart.nullCheck(this.element), this[_value]);
            } finally {
              if (!dart.fn(() => {
                provider$.debugIsInInheritedProviderCreate = dart.nullCheck(_debugPreviousIsInInheritedProviderCreate);
                provider$.debugIsInInheritedProviderUpdate = dart.nullCheck(_debugPreviousIsInInheritedProviderUpdate);
                return true;
              }, T$.VoidTobool())()) dart.assertFailed(null, I[13], 713, 18, "() {\n            debugIsInInheritedProviderCreate =\n                _debugPreviousIsInInheritedProviderCreate!;\n            debugIsInInheritedProviderUpdate =\n                _debugPreviousIsInInheritedProviderUpdate!;\n            return true;\n          }()");
            }
            if (!dart.fn(() => {
              let t3;
              t3 = __t$TToNvoid().as(this.delegate.debugCheckInvalidValueType);
              t3 == null ? null : t3(T.as(this[_value]));
              return true;
            }, T$.VoidTobool())()) dart.assertFailed(null, I[13], 722, 16, "() {\n          delegate.debugCheckInvalidValueType?.call(_value as T);\n          return true;\n        }()");
          }
        }
        dart.nullCheck(this.element)[_isNotifyDependentsEnabled] = false;
        this[_removeListener] == null ? this[_removeListener] = (t3 = __t$InheritedContextOfTAndTToNFn().as(this.delegate.startListening), t3 == null ? null : t3(dart.nullCheck(this.element), T.as(this[_value]))) : null;
        dart.nullCheck(this.element)[_isNotifyDependentsEnabled] = true;
        if (!(__t$InheritedContextOfTAndTToNFn().as(this.delegate.startListening) == null || this[_removeListener] != null)) dart.assertFailed(null, I[13], 732, 12, "delegate.startListening == null || _removeListener != null");
        return T.as(this[_value]);
      }
      dispose() {
        let t3, t3$;
        super.dispose();
        t3 = this[_removeListener];
        t3 == null ? null : t3();
        if (this[_didInitValue]) {
          t3$ = __t$BuildContextAndTToNvoid().as(this.delegate.dispose);
          t3$ == null ? null : t3$(dart.nullCheck(this.element), T.as(this[_value]));
        }
      }
      debugFillProperties(properties) {
        let t3;
        super.debugFillProperties(properties);
        if (this[_didInitValue]) {
          t3 = properties;
          (() => {
            t3.add(new (__t$DiagnosticsPropertyOfT()).new("value", this.value));
            t3.add(new diagnostics.FlagProperty.new("", {value: this[_removeListener] != null, defaultValue: false, ifTrue: "listening to value"}));
            return t3;
          })();
        } else {
          properties.add(new diagnostics.FlagProperty.new("value", {value: true, showName: true, ifTrue: "<not yet loaded>"}));
        }
      }
      build(opts) {
        let t4, t3;
        let isBuildFromExternalSources = opts && 'isBuildFromExternalSources' in opts ? opts.isBuildFromExternalSources : null;
        let shouldNotify = false;
        if (isBuildFromExternalSources && this[_didInitValue] && __t$BuildContextAndTNToNT().as(this.delegate.update) != null) {
          let previousValue = this[_value];
          let _debugPreviousIsInInheritedProviderCreate = null;
          let _debugPreviousIsInInheritedProviderUpdate = null;
          if (!dart.fn(() => {
            _debugPreviousIsInInheritedProviderCreate = provider$.debugIsInInheritedProviderCreate;
            _debugPreviousIsInInheritedProviderUpdate = provider$.debugIsInInheritedProviderUpdate;
            return true;
          }, T$.VoidTobool())()) dart.assertFailed(null, I[13], 783, 14, "() {\n        _debugPreviousIsInInheritedProviderCreate =\n            debugIsInInheritedProviderCreate;\n        _debugPreviousIsInInheritedProviderUpdate =\n            debugIsInInheritedProviderUpdate;\n        return true;\n      }()");
          try {
            if (!dart.fn(() => {
              provider$.debugIsInInheritedProviderCreate = false;
              provider$.debugIsInInheritedProviderUpdate = true;
              return true;
            }, T$.VoidTobool())()) dart.assertFailed(null, I[13], 791, 16, "() {\n          debugIsInInheritedProviderCreate = false;\n          debugIsInInheritedProviderUpdate = true;\n          return true;\n        }()");
            this[_value] = dart.nullCheck(__t$BuildContextAndTNToNT().as(this.delegate.update))(dart.nullCheck(this.element), T.as(this[_value]));
          } finally {
            if (!dart.fn(() => {
              provider$.debugIsInInheritedProviderCreate = dart.nullCheck(_debugPreviousIsInInheritedProviderCreate);
              provider$.debugIsInInheritedProviderUpdate = dart.nullCheck(_debugPreviousIsInInheritedProviderUpdate);
              return true;
            }, T$.VoidTobool())()) dart.assertFailed(null, I[13], 798, 16, "() {\n          debugIsInInheritedProviderCreate =\n              _debugPreviousIsInInheritedProviderCreate!;\n          debugIsInInheritedProviderUpdate =\n              _debugPreviousIsInInheritedProviderUpdate!;\n          return true;\n        }()");
          }
          if (__t$TAndTToNbool().as(this.delegate[_updateShouldNotify]) != null) {
            shouldNotify = dart.nullCheck(__t$TAndTToNbool().as(this.delegate[_updateShouldNotify]))(T.as(previousValue), T.as(this[_value]));
          } else {
            shouldNotify = !dart.equals(this[_value], previousValue);
          }
          if (shouldNotify) {
            if (!dart.fn(() => {
              let t3;
              t3 = __t$TToNvoid().as(this.delegate.debugCheckInvalidValueType);
              t3 == null ? null : t3(T.as(this[_value]));
              return true;
            }, T$.VoidTobool())()) dart.assertFailed(null, I[13], 817, 16, "() {\n          delegate.debugCheckInvalidValueType?.call(_value as T);\n          return true;\n        }()");
            if (this[_removeListener] != null) {
              dart.nullCheck(this[_removeListener])();
              this[_removeListener] = null;
            }
            t3 = this[_previousWidget];
            t3 == null ? null : (t4 = __t$BuildContextAndTToNvoid().as(t3.dispose), t4 == null ? null : t4(dart.nullCheck(this.element), T.as(previousValue)));
          }
        }
        if (shouldNotify) {
          dart.nullCheck(this.element)[_shouldNotifyDependents] = true;
        }
        this[_previousWidget] = this.delegate;
        return super.build({isBuildFromExternalSources: isBuildFromExternalSources});
      }
      get hasValue() {
        return this[_didInitValue];
      }
      static ['_#new#tearOff'](T) {
        return new (provider$._CreateInheritedProviderState$(T)).new();
      }
    }
    (_CreateInheritedProviderState.new = function() {
      this[_removeListener] = null;
      this[_didInitValue] = false;
      this[_value] = null;
      this[_previousWidget] = null;
      _CreateInheritedProviderState.__proto__.new.call(this);
      ;
    }).prototype = _CreateInheritedProviderState.prototype;
    dart.addTypeTests(_CreateInheritedProviderState);
    _CreateInheritedProviderState.prototype[_is__CreateInheritedProviderState_default] = true;
    dart.addTypeCaches(_CreateInheritedProviderState);
    dart.setGetterSignature(_CreateInheritedProviderState, () => ({
      __proto__: dart.getGetters(_CreateInheritedProviderState.__proto__),
      value: T,
      hasValue: core.bool
    }));
    dart.setLibraryUri(_CreateInheritedProviderState, I[15]);
    dart.setFieldSignature(_CreateInheritedProviderState, () => ({
      __proto__: dart.getFields(_CreateInheritedProviderState.__proto__),
      [_removeListener]: dart.fieldType(dart.nullable(dart.fnType(dart.void, []))),
      [_didInitValue]: dart.fieldType(core.bool),
      [_value]: dart.fieldType(dart.nullable(T)),
      [_previousWidget]: dart.fieldType(dart.nullable(provider$._CreateInheritedProvider$(T)))
    }));
    return _CreateInheritedProviderState;
  });
  provider$._CreateInheritedProviderState = provider$._CreateInheritedProviderState$();
  dart.addTypeTests(provider$._CreateInheritedProviderState, _is__CreateInheritedProviderState_default);
  const _is__ValueInheritedProvider_default = Symbol('_is__ValueInheritedProvider_default');
  provider$._ValueInheritedProvider$ = dart.generic(T => {
    var __t$DiagnosticsPropertyOfT = () => (__t$DiagnosticsPropertyOfT = dart.constFn(diagnostics.DiagnosticsProperty$(T)))();
    var __t$_ValueInheritedProviderStateOfT = () => (__t$_ValueInheritedProviderStateOfT = dart.constFn(provider$._ValueInheritedProviderState$(T)))();
    class _ValueInheritedProvider extends provider$._Delegate$(T) {
      static ['_#new#tearOff'](T, opts) {
        let value = opts && 'value' in opts ? opts.value : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let startListening = opts && 'startListening' in opts ? opts.startListening : null;
        return new (provider$._ValueInheritedProvider$(T)).new({value: value, updateShouldNotify: updateShouldNotify, startListening: startListening});
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        properties.add(new (__t$DiagnosticsPropertyOfT()).new("value", this.value));
      }
      createState() {
        return new (__t$_ValueInheritedProviderStateOfT()).new();
      }
    }
    (_ValueInheritedProvider.new = function(opts) {
      let value = opts && 'value' in opts ? opts.value : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let startListening = opts && 'startListening' in opts ? opts.startListening : null;
      this.value = value;
      this.startListening = startListening;
      this[_updateShouldNotify] = updateShouldNotify;
      ;
    }).prototype = _ValueInheritedProvider.prototype;
    dart.addTypeTests(_ValueInheritedProvider);
    _ValueInheritedProvider.prototype[_is__ValueInheritedProvider_default] = true;
    dart.addTypeCaches(_ValueInheritedProvider);
    dart.setMethodSignature(_ValueInheritedProvider, () => ({
      __proto__: dart.getMethods(_ValueInheritedProvider.__proto__),
      createState: dart.fnType(provider$._ValueInheritedProviderState$(T), [])
    }));
    dart.setLibraryUri(_ValueInheritedProvider, I[15]);
    dart.setFieldSignature(_ValueInheritedProvider, () => ({
      __proto__: dart.getFields(_ValueInheritedProvider.__proto__),
      value: dart.finalFieldType(T),
      [_updateShouldNotify]: dart.finalFieldType(dart.nullable(dart.fnType(core.bool, [T, T]))),
      startListening: dart.finalFieldType(dart.nullable(dart.fnType(dart.fnType(dart.void, []), [provider$.InheritedContext$(T), T])))
    }));
    return _ValueInheritedProvider;
  });
  provider$._ValueInheritedProvider = provider$._ValueInheritedProvider$();
  dart.addTypeTests(provider$._ValueInheritedProvider, _is__ValueInheritedProvider_default);
  const _is__ValueInheritedProviderState_default = Symbol('_is__ValueInheritedProviderState_default');
  provider$._ValueInheritedProviderState$ = dart.generic(T => {
    var __t$InheritedContextOfT = () => (__t$InheritedContextOfT = dart.constFn(provider$.InheritedContext$(T)))();
    var __t$InheritedContextOfTAndTToFn = () => (__t$InheritedContextOfTAndTToFn = dart.constFn(dart.fnType(T$.VoidTovoid(), [__t$InheritedContextOfT(), T])))();
    var __t$InheritedContextOfTAndTToNFn = () => (__t$InheritedContextOfTAndTToNFn = dart.constFn(dart.nullable(__t$InheritedContextOfTAndTToFn())))();
    var __t$_ValueInheritedProviderOfT = () => (__t$_ValueInheritedProviderOfT = dart.constFn(provider$._ValueInheritedProvider$(T)))();
    var __t$TAndTTobool = () => (__t$TAndTTobool = dart.constFn(dart.fnType(core.bool, [T, T])))();
    var __t$TAndTToNbool = () => (__t$TAndTToNbool = dart.constFn(dart.nullable(__t$TAndTTobool())))();
    class _ValueInheritedProviderState extends provider$._DelegateState$(T, provider$._ValueInheritedProvider$(T)) {
      get value() {
        let t3;
        dart.nullCheck(this.element)[_isNotifyDependentsEnabled] = false;
        this[_removeListener] == null ? this[_removeListener] = (t3 = __t$InheritedContextOfTAndTToNFn().as(this.delegate.startListening), t3 == null ? null : t3(dart.nullCheck(this.element), this.delegate.value)) : null;
        dart.nullCheck(this.element)[_isNotifyDependentsEnabled] = true;
        if (!(__t$InheritedContextOfTAndTToNFn().as(this.delegate.startListening) == null || this[_removeListener] != null)) dart.assertFailed(null, I[13], 872, 12, "delegate.startListening == null || _removeListener != null");
        return this.delegate.value;
      }
      willUpdateDelegate(newDelegate) {
        __t$_ValueInheritedProviderOfT().as(newDelegate);
        let shouldNotify = null;
        if (__t$TAndTToNbool().as(this.delegate[_updateShouldNotify]) != null) {
          shouldNotify = dart.nullCheck(__t$TAndTToNbool().as(this.delegate[_updateShouldNotify]))(this.delegate.value, newDelegate.value);
        } else {
          shouldNotify = !dart.equals(newDelegate.value, this.delegate.value);
        }
        if (shouldNotify && this[_removeListener] != null) {
          dart.nullCheck(this[_removeListener])();
          this[_removeListener] = null;
        }
        return shouldNotify;
      }
      dispose() {
        let t3;
        super.dispose();
        t3 = this[_removeListener];
        t3 == null ? null : t3();
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        properties.add(new diagnostics.FlagProperty.new("", {value: this[_removeListener] != null, defaultValue: false, ifTrue: "listening to value"}));
      }
      get hasValue() {
        return true;
      }
      static ['_#new#tearOff'](T) {
        return new (provider$._ValueInheritedProviderState$(T)).new();
      }
    }
    (_ValueInheritedProviderState.new = function() {
      this[_removeListener] = null;
      _ValueInheritedProviderState.__proto__.new.call(this);
      ;
    }).prototype = _ValueInheritedProviderState.prototype;
    dart.addTypeTests(_ValueInheritedProviderState);
    _ValueInheritedProviderState.prototype[_is__ValueInheritedProviderState_default] = true;
    dart.addTypeCaches(_ValueInheritedProviderState);
    dart.setGetterSignature(_ValueInheritedProviderState, () => ({
      __proto__: dart.getGetters(_ValueInheritedProviderState.__proto__),
      value: T,
      hasValue: core.bool
    }));
    dart.setLibraryUri(_ValueInheritedProviderState, I[15]);
    dart.setFieldSignature(_ValueInheritedProviderState, () => ({
      __proto__: dart.getFields(_ValueInheritedProviderState.__proto__),
      [_removeListener]: dart.fieldType(dart.nullable(dart.fnType(dart.void, [])))
    }));
    return _ValueInheritedProviderState;
  });
  provider$._ValueInheritedProviderState = provider$._ValueInheritedProviderState$();
  dart.addTypeTests(provider$._ValueInheritedProviderState, _is__ValueInheritedProviderState_default);
  const _is__DeferredDelegate_default = Symbol('_is__DeferredDelegate_default');
  provider$._DeferredDelegate$ = dart.generic((T, R) => {
    class _DeferredDelegate extends provider$._Delegate$(R) {}
    (_DeferredDelegate.new = function(updateShouldNotify, startListening) {
      this.updateShouldNotify = updateShouldNotify;
      this.startListening = startListening;
      ;
    }).prototype = _DeferredDelegate.prototype;
    dart.addTypeTests(_DeferredDelegate);
    _DeferredDelegate.prototype[_is__DeferredDelegate_default] = true;
    dart.addTypeCaches(_DeferredDelegate);
    dart.setLibraryUri(_DeferredDelegate, I[15]);
    dart.setFieldSignature(_DeferredDelegate, () => ({
      __proto__: dart.getFields(_DeferredDelegate.__proto__),
      updateShouldNotify: dart.finalFieldType(dart.nullable(dart.fnType(core.bool, [R, R]))),
      startListening: dart.finalFieldType(dart.fnType(dart.fnType(dart.void, []), [provider$.InheritedContext$(R), dart.fnType(dart.void, [R]), T, dart.nullable(R)]))
    }));
    return _DeferredDelegate;
  });
  provider$._DeferredDelegate = provider$._DeferredDelegate$();
  dart.addTypeTests(provider$._DeferredDelegate, _is__DeferredDelegate_default);
  var _hasValue = dart.privateName(provider$, "_hasValue");
  const _is__DeferredDelegateState_default = Symbol('_is__DeferredDelegateState_default');
  provider$._DeferredDelegateState$ = dart.generic((T, R, W) => {
    var __t$InheritedContextOfRAndFnAndT__ToFn = () => (__t$InheritedContextOfRAndFnAndT__ToFn = dart.constFn(dart.fnType(T$.VoidTovoid(), [__t$InheritedContextOfR(), __t$RTovoid(), T, __t$RN()])))();
    var __t$InheritedContextOfR = () => (__t$InheritedContextOfR = dart.constFn(provider$.InheritedContext$(R)))();
    var __t$RTovoid = () => (__t$RTovoid = dart.constFn(dart.fnType(dart.void, [R])))();
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$RAndRTobool = () => (__t$RAndRTobool = dart.constFn(dart.fnType(core.bool, [R, R])))();
    var __t$RAndRToNbool = () => (__t$RAndRToNbool = dart.constFn(dart.nullable(__t$RAndRTobool())))();
    class _DeferredDelegateState extends provider$._DelegateState$(R, W) {
      get value() {
        let t7, t6, t5, t4, t3;
        dart.nullCheck(this.element)[_isNotifyDependentsEnabled] = false;
        this[_removeListener] == null ? this[_removeListener] = (t3 = this.delegate, t4 = dart.nullCheck(this.element), t5 = dart.bind(this, 'setState'), t6 = this.controller, t7 = this[_value], __t$InheritedContextOfRAndFnAndT__ToFn().as(t3.startListening)(t4, t5, t6, t7)) : null;
        dart.nullCheck(this.element)[_isNotifyDependentsEnabled] = true;
        if (!dart.nullCheck(this.element).hasValue) dart.assertFailed("The callback \"startListening\" was called, but it left DeferredInhertitedProviderElement<" + dart.str(dart.wrapType(T)) + ", " + dart.str(dart.wrapType(R)) + ">\nin an unitialized state.\n\nIt is necessary for \"startListening\" to call \"setState\" at least once the very\nfirst time \"value\" is requested.\n\nTo fix, consider:\n\nDeferredInheritedProvider(\n  ...,\n  startListening: (element, setState, controller, value) {\n    if (!element.hasValue) {\n      setState(myInitialValue); // TODO replace myInitialValue with your own\n    }\n    ...\n  }\n)\n    ", I[23], 109, 12, "element!.hasValue");
        if (!(this[_removeListener] != null)) dart.assertFailed(null, I[23], 128, 12, "_removeListener != null");
        return R.as(this[_value]);
      }
      dispose() {
        let t3;
        super.dispose();
        t3 = this[_removeListener];
        t3 == null ? null : t3();
      }
      get isLoaded() {
        return this[_removeListener] != null;
      }
      get hasValue() {
        return this[_hasValue];
      }
      setState(value) {
        R.as(value);
        if (this[_hasValue]) {
          let shouldNotify = __t$RAndRToNbool().as(this.delegate.updateShouldNotify) != null ? dart.nullCheck(__t$RAndRToNbool().as(this.delegate.updateShouldNotify))(R.as(this[_value]), value) : !dart.equals(this[_value], value);
          if (shouldNotify) {
            dart.nullCheck(this.element).markNeedsNotifyDependents();
          }
        }
        this[_hasValue] = true;
        this[_value] = value;
      }
    }
    (_DeferredDelegateState.new = function() {
      this[_removeListener] = null;
      this[_value] = null;
      this[_hasValue] = false;
      _DeferredDelegateState.__proto__.new.call(this);
      ;
    }).prototype = _DeferredDelegateState.prototype;
    dart.addTypeTests(_DeferredDelegateState);
    _DeferredDelegateState.prototype[_is__DeferredDelegateState_default] = true;
    dart.addTypeCaches(_DeferredDelegateState);
    dart.setMethodSignature(_DeferredDelegateState, () => ({
      __proto__: dart.getMethods(_DeferredDelegateState.__proto__),
      setState: dart.fnType(dart.void, [dart.nullable(core.Object)])
    }));
    dart.setGetterSignature(_DeferredDelegateState, () => ({
      __proto__: dart.getGetters(_DeferredDelegateState.__proto__),
      value: R,
      isLoaded: core.bool,
      hasValue: core.bool
    }));
    dart.setLibraryUri(_DeferredDelegateState, I[15]);
    dart.setFieldSignature(_DeferredDelegateState, () => ({
      __proto__: dart.getFields(_DeferredDelegateState.__proto__),
      [_removeListener]: dart.fieldType(dart.nullable(dart.fnType(dart.void, []))),
      [_value]: dart.fieldType(dart.nullable(R)),
      [_hasValue]: dart.fieldType(core.bool)
    }));
    return _DeferredDelegateState;
  });
  provider$._DeferredDelegateState = provider$._DeferredDelegateState$();
  dart.addTypeTests(provider$._DeferredDelegateState, _is__DeferredDelegateState_default);
  const _is__CreateDeferredInheritedProvider_default = Symbol('_is__CreateDeferredInheritedProvider_default');
  provider$._CreateDeferredInheritedProvider$ = dart.generic((T, R) => {
    var __t$_CreateDeferredInheritedProviderElementOfT$R = () => (__t$_CreateDeferredInheritedProviderElementOfT$R = dart.constFn(provider$._CreateDeferredInheritedProviderElement$(T, R)))();
    class _CreateDeferredInheritedProvider extends provider$._DeferredDelegate$(T, R) {
      static ['_#new#tearOff'](T, R, opts) {
        let create = opts && 'create' in opts ? opts.create : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let startListening = opts && 'startListening' in opts ? opts.startListening : null;
        return new (provider$._CreateDeferredInheritedProvider$(T, R)).new({create: create, dispose: dispose, updateShouldNotify: updateShouldNotify, startListening: startListening});
      }
      createState() {
        return new (__t$_CreateDeferredInheritedProviderElementOfT$R()).new();
      }
    }
    (_CreateDeferredInheritedProvider.new = function(opts) {
      let create = opts && 'create' in opts ? opts.create : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let startListening = opts && 'startListening' in opts ? opts.startListening : null;
      this.create = create;
      this.dispose = dispose;
      _CreateDeferredInheritedProvider.__proto__.new.call(this, updateShouldNotify, startListening);
      ;
    }).prototype = _CreateDeferredInheritedProvider.prototype;
    dart.addTypeTests(_CreateDeferredInheritedProvider);
    _CreateDeferredInheritedProvider.prototype[_is__CreateDeferredInheritedProvider_default] = true;
    dart.addTypeCaches(_CreateDeferredInheritedProvider);
    dart.setMethodSignature(_CreateDeferredInheritedProvider, () => ({
      __proto__: dart.getMethods(_CreateDeferredInheritedProvider.__proto__),
      createState: dart.fnType(provider$._CreateDeferredInheritedProviderElement$(T, R), [])
    }));
    dart.setLibraryUri(_CreateDeferredInheritedProvider, I[15]);
    dart.setFieldSignature(_CreateDeferredInheritedProvider, () => ({
      __proto__: dart.getFields(_CreateDeferredInheritedProvider.__proto__),
      create: dart.finalFieldType(dart.fnType(T, [framework.BuildContext])),
      dispose: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [framework.BuildContext, T])))
    }));
    return _CreateDeferredInheritedProvider;
  });
  provider$._CreateDeferredInheritedProvider = provider$._CreateDeferredInheritedProvider$();
  dart.addTypeTests(provider$._CreateDeferredInheritedProvider, _is__CreateDeferredInheritedProvider_default);
  var _didBuild = dart.privateName(provider$, "_didBuild");
  var _controller = dart.privateName(provider$, "_controller");
  const _is__CreateDeferredInheritedProviderElement_default = Symbol('_is__CreateDeferredInheritedProviderElement_default');
  provider$._CreateDeferredInheritedProviderElement$ = dart.generic((T, R) => {
    var __t$BuildContextAndTTovoid = () => (__t$BuildContextAndTTovoid = dart.constFn(dart.fnType(dart.void, [framework.BuildContext, T])))();
    var __t$BuildContextAndTToNvoid = () => (__t$BuildContextAndTToNvoid = dart.constFn(dart.nullable(__t$BuildContextAndTTovoid())))();
    var __t$DiagnosticsPropertyOfT = () => (__t$DiagnosticsPropertyOfT = dart.constFn(diagnostics.DiagnosticsProperty$(T)))();
    var __t$DiagnosticsPropertyOfR = () => (__t$DiagnosticsPropertyOfR = dart.constFn(diagnostics.DiagnosticsProperty$(R)))();
    class _CreateDeferredInheritedProviderElement extends provider$._DeferredDelegateState$(T, R, provider$._CreateDeferredInheritedProvider$(T, R)) {
      get controller() {
        let t4, t3;
        if (!this[_didBuild]) {
          if (!this.debugSetInheritedLock(true)) dart.assertFailed(null, I[23], 186, 14, "debugSetInheritedLock(true)");
          let _debugPreviousIsInInheritedProviderCreate = null;
          let _debugPreviousIsInInheritedProviderUpdate = null;
          if (!dart.fn(() => {
            _debugPreviousIsInInheritedProviderCreate = provider$.debugIsInInheritedProviderCreate;
            _debugPreviousIsInInheritedProviderUpdate = provider$.debugIsInInheritedProviderUpdate;
            return true;
          }, T$.VoidTobool())()) dart.assertFailed(null, I[23], 190, 14, "() {\n        _debugPreviousIsInInheritedProviderCreate =\n            debugIsInInheritedProviderCreate;\n        _debugPreviousIsInInheritedProviderUpdate =\n            debugIsInInheritedProviderUpdate;\n        return true;\n      }()");
          try {
            if (!dart.fn(() => {
              provider$.debugIsInInheritedProviderCreate = true;
              provider$.debugIsInInheritedProviderUpdate = false;
              return true;
            }, T$.VoidTobool())()) dart.assertFailed(null, I[23], 199, 16, "() {\n          debugIsInInheritedProviderCreate = true;\n          debugIsInInheritedProviderUpdate = false;\n          return true;\n        }()");
            this[_controller] = (t3 = this.delegate, t4 = dart.nullCheck(this.element), t3.create(t4));
          } finally {
            if (!dart.fn(() => {
              provider$.debugIsInInheritedProviderCreate = dart.nullCheck(_debugPreviousIsInInheritedProviderCreate);
              provider$.debugIsInInheritedProviderUpdate = dart.nullCheck(_debugPreviousIsInInheritedProviderUpdate);
              return true;
            }, T$.VoidTobool())()) dart.assertFailed(null, I[23], 206, 16, "() {\n          debugIsInInheritedProviderCreate =\n              _debugPreviousIsInInheritedProviderCreate!;\n          debugIsInInheritedProviderUpdate =\n              _debugPreviousIsInInheritedProviderUpdate!;\n          return true;\n        }()");
          }
          this[_didBuild] = true;
        }
        return T.as(this[_controller]);
      }
      dispose() {
        let t3;
        super.dispose();
        if (this[_didBuild]) {
          t3 = __t$BuildContextAndTToNvoid().as(this.delegate.dispose);
          t3 == null ? null : t3(dart.nullCheck(this.element), T.as(this[_controller]));
        }
      }
      debugFillProperties(properties) {
        let t3, t3$;
        super.debugFillProperties(properties);
        if (this.isLoaded) {
          t3 = properties;
          (() => {
            t3.add(new (__t$DiagnosticsPropertyOfT()).new("controller", this.controller));
            t3.add(new (__t$DiagnosticsPropertyOfR()).new("value", this.value));
            return t3;
          })();
        } else {
          t3$ = properties;
          (() => {
            t3$.add(new diagnostics.FlagProperty.new("controller", {value: true, showName: true, ifTrue: "<not yet loaded>"}));
            t3$.add(new diagnostics.FlagProperty.new("value", {value: true, showName: true, ifTrue: "<not yet loaded>"}));
            return t3$;
          })();
        }
      }
      static ['_#new#tearOff'](T, R) {
        return new (provider$._CreateDeferredInheritedProviderElement$(T, R)).new();
      }
    }
    (_CreateDeferredInheritedProviderElement.new = function() {
      this[_didBuild] = false;
      this[_controller] = null;
      _CreateDeferredInheritedProviderElement.__proto__.new.call(this);
      ;
    }).prototype = _CreateDeferredInheritedProviderElement.prototype;
    dart.addTypeTests(_CreateDeferredInheritedProviderElement);
    _CreateDeferredInheritedProviderElement.prototype[_is__CreateDeferredInheritedProviderElement_default] = true;
    dart.addTypeCaches(_CreateDeferredInheritedProviderElement);
    dart.setGetterSignature(_CreateDeferredInheritedProviderElement, () => ({
      __proto__: dart.getGetters(_CreateDeferredInheritedProviderElement.__proto__),
      controller: T
    }));
    dart.setLibraryUri(_CreateDeferredInheritedProviderElement, I[15]);
    dart.setFieldSignature(_CreateDeferredInheritedProviderElement, () => ({
      __proto__: dart.getFields(_CreateDeferredInheritedProviderElement.__proto__),
      [_didBuild]: dart.fieldType(core.bool),
      [_controller]: dart.fieldType(dart.nullable(T))
    }));
    return _CreateDeferredInheritedProviderElement;
  });
  provider$._CreateDeferredInheritedProviderElement = provider$._CreateDeferredInheritedProviderElement$();
  dart.addTypeTests(provider$._CreateDeferredInheritedProviderElement, _is__CreateDeferredInheritedProviderElement_default);
  const _is__ValueDeferredInheritedProvider_default = Symbol('_is__ValueDeferredInheritedProvider_default');
  provider$._ValueDeferredInheritedProvider$ = dart.generic((T, R) => {
    var __t$_ValueDeferredInheritedProviderStateOfT$R = () => (__t$_ValueDeferredInheritedProviderStateOfT$R = dart.constFn(provider$._ValueDeferredInheritedProviderState$(T, R)))();
    var __t$DiagnosticsPropertyOfT = () => (__t$DiagnosticsPropertyOfT = dart.constFn(diagnostics.DiagnosticsProperty$(T)))();
    class _ValueDeferredInheritedProvider extends provider$._DeferredDelegate$(T, R) {
      static ['_#new#tearOff'](T, R, value, updateShouldNotify, startListening) {
        return new (provider$._ValueDeferredInheritedProvider$(T, R)).new(value, updateShouldNotify, startListening);
      }
      createState() {
        return new (__t$_ValueDeferredInheritedProviderStateOfT$R()).new();
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        properties.add(new (__t$DiagnosticsPropertyOfT()).new("controller", this.value));
      }
    }
    (_ValueDeferredInheritedProvider.new = function(value, updateShouldNotify, startListening) {
      this.value = value;
      _ValueDeferredInheritedProvider.__proto__.new.call(this, updateShouldNotify, startListening);
      ;
    }).prototype = _ValueDeferredInheritedProvider.prototype;
    dart.addTypeTests(_ValueDeferredInheritedProvider);
    _ValueDeferredInheritedProvider.prototype[_is__ValueDeferredInheritedProvider_default] = true;
    dart.addTypeCaches(_ValueDeferredInheritedProvider);
    dart.setMethodSignature(_ValueDeferredInheritedProvider, () => ({
      __proto__: dart.getMethods(_ValueDeferredInheritedProvider.__proto__),
      createState: dart.fnType(provider$._ValueDeferredInheritedProviderState$(T, R), [])
    }));
    dart.setLibraryUri(_ValueDeferredInheritedProvider, I[15]);
    dart.setFieldSignature(_ValueDeferredInheritedProvider, () => ({
      __proto__: dart.getFields(_ValueDeferredInheritedProvider.__proto__),
      value: dart.finalFieldType(T)
    }));
    return _ValueDeferredInheritedProvider;
  });
  provider$._ValueDeferredInheritedProvider = provider$._ValueDeferredInheritedProvider$();
  dart.addTypeTests(provider$._ValueDeferredInheritedProvider, _is__ValueDeferredInheritedProvider_default);
  const _is__ValueDeferredInheritedProviderState_default = Symbol('_is__ValueDeferredInheritedProviderState_default');
  provider$._ValueDeferredInheritedProviderState$ = dart.generic((T, R) => {
    var __t$_ValueDeferredInheritedProviderOfT$R = () => (__t$_ValueDeferredInheritedProviderOfT$R = dart.constFn(provider$._ValueDeferredInheritedProvider$(T, R)))();
    var __t$DiagnosticsPropertyOfR = () => (__t$DiagnosticsPropertyOfR = dart.constFn(diagnostics.DiagnosticsProperty$(R)))();
    class _ValueDeferredInheritedProviderState extends provider$._DeferredDelegateState$(T, R, provider$._ValueDeferredInheritedProvider$(T, R)) {
      willUpdateDelegate(oldDelegate) {
        __t$_ValueDeferredInheritedProviderOfT$R().as(oldDelegate);
        if (!dart.equals(this.delegate.value, oldDelegate.value)) {
          if (this[_removeListener] != null) {
            dart.nullCheck(this[_removeListener])();
            this[_removeListener] = null;
          }
          return true;
        }
        return false;
      }
      get controller() {
        return this.delegate.value;
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        if (this[_removeListener] != null) {
          properties.add(new (__t$DiagnosticsPropertyOfR()).new("value", this.value));
        } else {
          properties.add(new diagnostics.FlagProperty.new("value", {value: true, showName: true, ifTrue: "<not yet loaded>"}));
        }
      }
      static ['_#new#tearOff'](T, R) {
        return new (provider$._ValueDeferredInheritedProviderState$(T, R)).new();
      }
    }
    (_ValueDeferredInheritedProviderState.new = function() {
      _ValueDeferredInheritedProviderState.__proto__.new.call(this);
      ;
    }).prototype = _ValueDeferredInheritedProviderState.prototype;
    dart.addTypeTests(_ValueDeferredInheritedProviderState);
    _ValueDeferredInheritedProviderState.prototype[_is__ValueDeferredInheritedProviderState_default] = true;
    dart.addTypeCaches(_ValueDeferredInheritedProviderState);
    dart.setGetterSignature(_ValueDeferredInheritedProviderState, () => ({
      __proto__: dart.getGetters(_ValueDeferredInheritedProviderState.__proto__),
      controller: T
    }));
    dart.setLibraryUri(_ValueDeferredInheritedProviderState, I[15]);
    return _ValueDeferredInheritedProviderState;
  });
  provider$._ValueDeferredInheritedProviderState = provider$._ValueDeferredInheritedProviderState$();
  dart.addTypeTests(provider$._ValueDeferredInheritedProviderState, _is__ValueDeferredInheritedProviderState_default);
  var eventKind$ = dart.privateName(provider$, "PostEventCall.eventKind");
  var event$ = dart.privateName(provider$, "PostEventCall.event");
  provider$.PostEventCall = class PostEventCall extends core.Object {
    get eventKind() {
      return this[eventKind$];
    }
    set eventKind(value) {
      super.eventKind = value;
    }
    get event() {
      return this[event$];
    }
    set event(value) {
      super.event = value;
    }
    static ['_#_#tearOff'](eventKind, event) {
      return new provider$.PostEventCall.__(eventKind, event);
    }
  };
  (provider$.PostEventCall.__ = function(eventKind, event) {
    this[eventKind$] = eventKind;
    this[event$] = event;
    ;
  }).prototype = provider$.PostEventCall.prototype;
  dart.addTypeTests(provider$.PostEventCall);
  dart.addTypeCaches(provider$.PostEventCall);
  dart.setLibraryUri(provider$.PostEventCall, I[15]);
  dart.setFieldSignature(provider$.PostEventCall, () => ({
    __proto__: dart.getFields(provider$.PostEventCall.__proto__),
    eventKind: dart.finalFieldType(core.String),
    event: dart.finalFieldType(core.Map$(dart.nullable(core.Object), dart.nullable(core.Object)))
  }));
  var logs = dart.privateName(provider$, "PostEventSpy.logs");
  var _postEvent = dart.privateName(provider$, "_postEvent");
  provider$.PostEventSpy = class PostEventSpy extends core.Object {
    get logs() {
      return this[logs];
    }
    set logs(value) {
      super.logs = value;
    }
    static ['_#_#tearOff']() {
      return new provider$.PostEventSpy.__();
    }
    dispose() {
      if (!dart.equals(provider$._debugPostEventOverride, dart.bind(this, _postEvent))) dart.assertFailed("disposed a spy different from the current spy", I[24], 43, 7, "_debugPostEventOverride == _postEvent");
      provider$._debugPostEventOverride = null;
    }
    [_postEvent](eventKind, event) {
      this.logs[$add](new provider$.PostEventCall.__(eventKind, event));
    }
  };
  (provider$.PostEventSpy.__ = function() {
    this[logs] = T$.JSArrayOfPostEventCall().of([]);
    ;
  }).prototype = provider$.PostEventSpy.prototype;
  dart.addTypeTests(provider$.PostEventSpy);
  dart.addTypeCaches(provider$.PostEventSpy);
  dart.setMethodSignature(provider$.PostEventSpy, () => ({
    __proto__: dart.getMethods(provider$.PostEventSpy.__proto__),
    dispose: dart.fnType(dart.void, []),
    [_postEvent]: dart.fnType(dart.void, [core.String, core.Map$(dart.nullable(core.Object), dart.nullable(core.Object))])
  }));
  dart.setLibraryUri(provider$.PostEventSpy, I[15]);
  dart.setFieldSignature(provider$.PostEventSpy, () => ({
    __proto__: dart.getFields(provider$.PostEventSpy.__proto__),
    logs: dart.finalFieldType(core.List$(provider$.PostEventCall))
  }));
  var id$ = dart.privateName(provider$, "ProviderNode.id");
  var type$ = dart.privateName(provider$, "ProviderNode.type");
  var childrenNodeIds$ = dart.privateName(provider$, "ProviderNode.childrenNodeIds");
  var _element = dart.privateName(provider$, "ProviderNode._element");
  var _element$ = dart.privateName(provider$, "_element");
  provider$.ProviderNode = class ProviderNode extends core.Object {
    get id() {
      return this[id$];
    }
    set id(value) {
      super.id = value;
    }
    get type() {
      return this[type$];
    }
    set type(value) {
      super.type = value;
    }
    get childrenNodeIds() {
      return this[childrenNodeIds$];
    }
    set childrenNodeIds(value) {
      super.childrenNodeIds = value;
    }
    get [_element$]() {
      return this[_element];
    }
    set [_element$](value) {
      super[_element$] = value;
    }
    static ['_#new#tearOff'](opts) {
      let id = opts && 'id' in opts ? opts.id : null;
      let childrenNodeIds = opts && 'childrenNodeIds' in opts ? opts.childrenNodeIds : null;
      let type = opts && 'type' in opts ? opts.type : null;
      let element = opts && 'element' in opts ? opts.element : null;
      return new provider$.ProviderNode.new({id: id, childrenNodeIds: childrenNodeIds, type: type, element: element});
    }
    get value() {
      return this[_element$][_delegateState].value;
    }
  };
  (provider$.ProviderNode.new = function(opts) {
    let id = opts && 'id' in opts ? opts.id : null;
    let childrenNodeIds = opts && 'childrenNodeIds' in opts ? opts.childrenNodeIds : null;
    let type = opts && 'type' in opts ? opts.type : null;
    let element = opts && 'element' in opts ? opts.element : null;
    this[id$] = id;
    this[childrenNodeIds$] = childrenNodeIds;
    this[type$] = type;
    this[_element] = element;
    ;
  }).prototype = provider$.ProviderNode.prototype;
  dart.addTypeTests(provider$.ProviderNode);
  dart.addTypeCaches(provider$.ProviderNode);
  dart.setGetterSignature(provider$.ProviderNode, () => ({
    __proto__: dart.getGetters(provider$.ProviderNode.__proto__),
    value: dart.nullable(core.Object)
  }));
  dart.setLibraryUri(provider$.ProviderNode, I[15]);
  dart.setFieldSignature(provider$.ProviderNode, () => ({
    __proto__: dart.getFields(provider$.ProviderNode.__proto__),
    id: dart.finalFieldType(core.String),
    type: dart.finalFieldType(core.String),
    childrenNodeIds: dart.finalFieldType(core.List$(core.String)),
    [_element$]: dart.finalFieldType(provider$._InheritedProviderScopeElement)
  }));
  var _providerDetails = dart.privateName(provider$, "_providerDetails");
  provider$.ProviderBinding = class ProviderBinding extends core.Object {
    static ['_#_#tearOff']() {
      return new provider$.ProviderBinding.__();
    }
    get providerDetails() {
      return this[_providerDetails];
    }
    set providerDetails(value) {
      provider$.debugPostEvent("provider:provider_list_changed", new _js_helper.LinkedMap.new());
      this[_providerDetails] = value;
    }
    providerDidChange(providerId) {
      provider$.debugPostEvent("provider:provider_changed", new _js_helper.LinkedMap.from(["id", providerId]));
    }
  };
  (provider$.ProviderBinding.__ = function() {
    this[_providerDetails] = new (T$.IdentityMapOfString$ProviderNode()).new();
    ;
  }).prototype = provider$.ProviderBinding.prototype;
  dart.addTypeTests(provider$.ProviderBinding);
  dart.addTypeCaches(provider$.ProviderBinding);
  dart.setMethodSignature(provider$.ProviderBinding, () => ({
    __proto__: dart.getMethods(provider$.ProviderBinding.__proto__),
    providerDidChange: dart.fnType(dart.void, [core.String])
  }));
  dart.setGetterSignature(provider$.ProviderBinding, () => ({
    __proto__: dart.getGetters(provider$.ProviderBinding.__proto__),
    providerDetails: core.Map$(core.String, provider$.ProviderNode)
  }));
  dart.setSetterSignature(provider$.ProviderBinding, () => ({
    __proto__: dart.getSetters(provider$.ProviderBinding.__proto__),
    providerDetails: core.Map$(core.String, provider$.ProviderNode)
  }));
  dart.setLibraryUri(provider$.ProviderBinding, I[15]);
  dart.setFieldSignature(provider$.ProviderBinding, () => ({
    __proto__: dart.getFields(provider$.ProviderBinding.__proto__),
    [_providerDetails]: dart.fieldType(core.Map$(core.String, provider$.ProviderNode))
  }));
  dart.setStaticFieldSignature(provider$.ProviderBinding, () => ['debugInstance']);
  dart.defineLazy(provider$.ProviderBinding, {
    /*provider$.ProviderBinding.debugInstance*/get debugInstance() {
      return new provider$.ProviderBinding.__();
    }
  }, false);
  var DeepCollectionEquality__unordered = dart.privateName(equality, "DeepCollectionEquality._unordered");
  var DeepCollectionEquality__base = dart.privateName(equality, "DeepCollectionEquality._base");
  provider$.debugPostEvent = function debugPostEvent(eventKind, event = C[16] || CT.C16) {
    if (provider$._debugPostEventOverride != null) {
      dart.nullCheck(provider$._debugPostEventOverride)(eventKind, event);
    } else {
      developer.postEvent(eventKind, event);
    }
  };
  provider$.spyPostEvent = function spyPostEvent() {
    if (!(provider$._debugPostEventOverride == null)) dart.assertFailed("postEvent is already spied", I[24], 22, 10, "_debugPostEventOverride == null");
    let spy = new provider$.PostEventSpy.__();
    provider$._debugPostEventOverride = dart.bind(spy, _postEvent);
    return spy;
  };
  provider$['SelectContext|select'] = function SelectContext$124select(T, R, $this, selector) {
    if (!!sliver.SliverWithKeepAliveWidget.is($this.widget)) dart.assertFailed("    Tried to use context.select inside a SliverList/SliderGridView.\n\n    This is likely a mistake, as instead of rebuilding only the item that cares\n    about the selected value, this would rebuild the entire list/grid.\n\n    To fix, add a `Builder` or extract the content of `itemBuilder` in a separate widget:\n\n    ```dart\n    ListView.builder(\n      itemBuilder: (context, index) {\n        return Builder(builder: (context) {\n          final todo = context.select((TodoList list) => list[index]);\n          return Text(todo.name);\n        });\n      },\n    );\n    ```\n    ", I[13], 227, 12, "widget is! SliverWithKeepAliveWidget");
    if (!(layout_builder.LayoutBuilder.is($this.widget) || $this.debugDoingBuild)) dart.assertFailed("Tried to use `context.select` outside of the `build` method of a widget.\n\nAny usage other than inside the `build` method of a widget are not supported.\n", I[13], 246, 12, "widget is LayoutBuilder || debugDoingBuild");
    let inheritedElement = provider$.Provider._inheritedElementOf(T, $this);
    try {
      let value = inheritedElement.value;
      if (!dart.fn(() => {
        provider$._debugIsSelecting = true;
        return true;
      }, T$.VoidTobool())()) dart.assertFailed(null, I[13], 254, 14, "() {\n        _debugIsSelecting = true;\n        return true;\n      }()");
      let selected = selector(value);
      $this.dependOnInheritedElement(inheritedElement, {aspect: dart.fn(newValue => !(C[17] || CT.C17).equals(selector(newValue), selected), dart.fnType(core.bool, [T]))});
      return selected;
    } finally {
      if (!dart.fn(() => {
        provider$._debugIsSelecting = false;
        return true;
      }, T$.VoidTobool())()) dart.assertFailed(null, I[13], 266, 14, "() {\n        _debugIsSelecting = false;\n        return true;\n      }()");
    }
  };
  provider$['SelectContext|get#select'] = function SelectContext$124get$35select($this) {
    return dart.fn((T, R, selector) => provider$['SelectContext|select'](T, R, $this, selector), T$.FnToR());
  };
  provider$['ReadContext|read'] = function ReadContext$124read(T, $this) {
    return provider$.Provider.of(T, $this, {listen: false});
  };
  provider$['ReadContext|get#read'] = function ReadContext$124get$35read($this) {
    return dart.fn(T => provider$['ReadContext|read'](T, $this), T$.VoidToT());
  };
  provider$['WatchContext|watch'] = function WatchContext$124watch(T, $this) {
    return provider$.Provider.of(T, $this);
  };
  provider$['WatchContext|get#watch'] = function WatchContext$124get$35watch($this) {
    return dart.fn(T => provider$['WatchContext|watch'](T, $this), T$.VoidToT());
  };
  dart.defineLazy(provider$, {
    /*provider$._debugIsSelecting*/get _debugIsSelecting() {
      return false;
    },
    set _debugIsSelecting(value) {},
    /*provider$.debugIsInInheritedProviderUpdate*/get debugIsInInheritedProviderUpdate() {
      return false;
    },
    set debugIsInInheritedProviderUpdate(value) {},
    /*provider$.debugIsInInheritedProviderCreate*/get debugIsInInheritedProviderCreate() {
      return false;
    },
    set debugIsInInheritedProviderCreate(value) {},
    /*provider$._debugPostEventOverride*/get _debugPostEventOverride() {
      return null;
    },
    set _debugPostEventOverride(value) {}
  }, false);
  const _is_ProxyProvider0_default = Symbol('_is_ProxyProvider0_default');
  proxy_provider.ProxyProvider0$ = dart.generic(R => {
    var __t$RTovoid = () => (__t$RTovoid = dart.constFn(dart.fnType(dart.void, [R])))();
    class ProxyProvider0 extends provider$.InheritedProvider$(R) {
      static ['_#new#tearOff'](R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (proxy_provider.ProxyProvider0$(R)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ProxyProvider0.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ProxyProvider0.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, update: update, dispose: dispose, updateShouldNotify: updateShouldNotify, debugCheckInvalidValueType: dart.fn(value => {
          let t9;
          t9 = provider$.Provider.debugCheckInvalidValueType;
          return t9 == null ? null : t9(R, value);
        }, __t$RTovoid()), child: child});
      ;
    }).prototype = ProxyProvider0.prototype;
    dart.addTypeTests(ProxyProvider0);
    ProxyProvider0.prototype[_is_ProxyProvider0_default] = true;
    dart.addTypeCaches(ProxyProvider0);
    dart.setLibraryUri(ProxyProvider0, I[25]);
    return ProxyProvider0;
  });
  proxy_provider.ProxyProvider0 = proxy_provider.ProxyProvider0$();
  dart.addTypeTests(proxy_provider.ProxyProvider0, _is_ProxyProvider0_default);
  const _is_ProxyProvider_default = Symbol('_is_ProxyProvider_default');
  proxy_provider.ProxyProvider$ = dart.generic((T, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ProxyProvider extends proxy_provider.ProxyProvider0$(R) {
      static ['_#new#tearOff'](T, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (proxy_provider.ProxyProvider$(T, R)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ProxyProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ProxyProvider.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, update: dart.fn((context, value) => update(context, provider$.Provider.of(T, context), value), __t$BuildContextAndRNToR()), updateShouldNotify: updateShouldNotify, dispose: dispose, child: child});
      ;
    }).prototype = ProxyProvider.prototype;
    dart.addTypeTests(ProxyProvider);
    ProxyProvider.prototype[_is_ProxyProvider_default] = true;
    dart.addTypeCaches(ProxyProvider);
    dart.setLibraryUri(ProxyProvider, I[25]);
    return ProxyProvider;
  });
  proxy_provider.ProxyProvider = proxy_provider.ProxyProvider$();
  dart.addTypeTests(proxy_provider.ProxyProvider, _is_ProxyProvider_default);
  const _is_ProxyProvider2_default = Symbol('_is_ProxyProvider2_default');
  proxy_provider.ProxyProvider2$ = dart.generic((T, T2, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ProxyProvider2 extends proxy_provider.ProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (proxy_provider.ProxyProvider2$(T, T2, R)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ProxyProvider2.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ProxyProvider2.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, update: dart.fn((context, value) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), value), __t$BuildContextAndRNToR()), updateShouldNotify: updateShouldNotify, dispose: dispose, child: child});
      ;
    }).prototype = ProxyProvider2.prototype;
    dart.addTypeTests(ProxyProvider2);
    ProxyProvider2.prototype[_is_ProxyProvider2_default] = true;
    dart.addTypeCaches(ProxyProvider2);
    dart.setLibraryUri(ProxyProvider2, I[25]);
    return ProxyProvider2;
  });
  proxy_provider.ProxyProvider2 = proxy_provider.ProxyProvider2$();
  dart.addTypeTests(proxy_provider.ProxyProvider2, _is_ProxyProvider2_default);
  const _is_ProxyProvider3_default = Symbol('_is_ProxyProvider3_default');
  proxy_provider.ProxyProvider3$ = dart.generic((T, T2, T3, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ProxyProvider3 extends proxy_provider.ProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (proxy_provider.ProxyProvider3$(T, T2, T3, R)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ProxyProvider3.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ProxyProvider3.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, update: dart.fn((context, value) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), value), __t$BuildContextAndRNToR()), updateShouldNotify: updateShouldNotify, dispose: dispose, child: child});
      ;
    }).prototype = ProxyProvider3.prototype;
    dart.addTypeTests(ProxyProvider3);
    ProxyProvider3.prototype[_is_ProxyProvider3_default] = true;
    dart.addTypeCaches(ProxyProvider3);
    dart.setLibraryUri(ProxyProvider3, I[25]);
    return ProxyProvider3;
  });
  proxy_provider.ProxyProvider3 = proxy_provider.ProxyProvider3$();
  dart.addTypeTests(proxy_provider.ProxyProvider3, _is_ProxyProvider3_default);
  const _is_ProxyProvider4_default = Symbol('_is_ProxyProvider4_default');
  proxy_provider.ProxyProvider4$ = dart.generic((T, T2, T3, T4, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ProxyProvider4 extends proxy_provider.ProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, T4, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (proxy_provider.ProxyProvider4$(T, T2, T3, T4, R)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ProxyProvider4.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ProxyProvider4.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, update: dart.fn((context, value) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), provider$.Provider.of(T4, context), value), __t$BuildContextAndRNToR()), updateShouldNotify: updateShouldNotify, dispose: dispose, child: child});
      ;
    }).prototype = ProxyProvider4.prototype;
    dart.addTypeTests(ProxyProvider4);
    ProxyProvider4.prototype[_is_ProxyProvider4_default] = true;
    dart.addTypeCaches(ProxyProvider4);
    dart.setLibraryUri(ProxyProvider4, I[25]);
    return ProxyProvider4;
  });
  proxy_provider.ProxyProvider4 = proxy_provider.ProxyProvider4$();
  dart.addTypeTests(proxy_provider.ProxyProvider4, _is_ProxyProvider4_default);
  const _is_ProxyProvider5_default = Symbol('_is_ProxyProvider5_default');
  proxy_provider.ProxyProvider5$ = dart.generic((T, T2, T3, T4, T5, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ProxyProvider5 extends proxy_provider.ProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, T4, T5, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (proxy_provider.ProxyProvider5$(T, T2, T3, T4, T5, R)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ProxyProvider5.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ProxyProvider5.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, update: dart.fn((context, value) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), provider$.Provider.of(T4, context), provider$.Provider.of(T5, context), value), __t$BuildContextAndRNToR()), updateShouldNotify: updateShouldNotify, dispose: dispose, child: child});
      ;
    }).prototype = ProxyProvider5.prototype;
    dart.addTypeTests(ProxyProvider5);
    ProxyProvider5.prototype[_is_ProxyProvider5_default] = true;
    dart.addTypeCaches(ProxyProvider5);
    dart.setLibraryUri(ProxyProvider5, I[25]);
    return ProxyProvider5;
  });
  proxy_provider.ProxyProvider5 = proxy_provider.ProxyProvider5$();
  dart.addTypeTests(proxy_provider.ProxyProvider5, _is_ProxyProvider5_default);
  const _is_ProxyProvider6_default = Symbol('_is_ProxyProvider6_default');
  proxy_provider.ProxyProvider6$ = dart.generic((T, T2, T3, T4, T5, T6, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ProxyProvider6 extends proxy_provider.ProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, T4, T5, T6, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (proxy_provider.ProxyProvider6$(T, T2, T3, T4, T5, T6, R)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ProxyProvider6.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ProxyProvider6.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, update: dart.fn((context, value) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), provider$.Provider.of(T4, context), provider$.Provider.of(T5, context), provider$.Provider.of(T6, context), value), __t$BuildContextAndRNToR()), updateShouldNotify: updateShouldNotify, dispose: dispose, child: child});
      ;
    }).prototype = ProxyProvider6.prototype;
    dart.addTypeTests(ProxyProvider6);
    ProxyProvider6.prototype[_is_ProxyProvider6_default] = true;
    dart.addTypeCaches(ProxyProvider6);
    dart.setLibraryUri(ProxyProvider6, I[25]);
    return ProxyProvider6;
  });
  proxy_provider.ProxyProvider6 = proxy_provider.ProxyProvider6$();
  dart.addTypeTests(proxy_provider.ProxyProvider6, _is_ProxyProvider6_default);
  reassemble_handler.ReassembleHandler = class ReassembleHandler extends core.Object {};
  (reassemble_handler.ReassembleHandler.new = function() {
    ;
  }).prototype = reassemble_handler.ReassembleHandler.prototype;
  dart.addTypeTests(reassemble_handler.ReassembleHandler);
  dart.addTypeCaches(reassemble_handler.ReassembleHandler);
  dart.setLibraryUri(reassemble_handler.ReassembleHandler, I[26]);
  var builder$6 = dart.privateName(selector$, "Selector0.builder");
  var selector$0 = dart.privateName(selector$, "Selector0.selector");
  var _shouldRebuild = dart.privateName(selector$, "_shouldRebuild");
  var _child$0 = dart.privateName(nested, "SingleChildStatefulWidget._child");
  nested.SingleChildStatefulWidget = class SingleChildStatefulWidget extends framework.StatefulWidget {
    get [_child$]() {
      return this[_child$0];
    }
    set [_child$](value) {
      super[_child$] = value;
    }
    createElement() {
      return new nested.SingleChildStatefulElement.new(this);
    }
  };
  (nested.SingleChildStatefulWidget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    this[_child$0] = child;
    nested.SingleChildStatefulWidget.__proto__.new.call(this, {key: key});
    ;
  }).prototype = nested.SingleChildStatefulWidget.prototype;
  dart.addTypeTests(nested.SingleChildStatefulWidget);
  dart.addTypeCaches(nested.SingleChildStatefulWidget);
  nested.SingleChildStatefulWidget[dart.implements] = () => [nested.SingleChildWidget];
  dart.setMethodSignature(nested.SingleChildStatefulWidget, () => ({
    __proto__: dart.getMethods(nested.SingleChildStatefulWidget.__proto__),
    createElement: dart.fnType(nested.SingleChildStatefulElement, [])
  }));
  dart.setLibraryUri(nested.SingleChildStatefulWidget, I[14]);
  dart.setFieldSignature(nested.SingleChildStatefulWidget, () => ({
    __proto__: dart.getFields(nested.SingleChildStatefulWidget.__proto__),
    [_child$]: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  const _is_Selector0_default = Symbol('_is_Selector0_default');
  selector$.Selector0$ = dart.generic(T => {
    var __t$_Selector0StateOfT = () => (__t$_Selector0StateOfT = dart.constFn(selector$._Selector0State$(T)))();
    class Selector0 extends nested.SingleChildStatefulWidget {
      get builder() {
        return this[builder$6];
      }
      set builder(value) {
        super.builder = value;
      }
      get selector() {
        return this[selector$0];
      }
      set selector(value) {
        super.selector = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let selector = opts && 'selector' in opts ? opts.selector : null;
        let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (selector$.Selector0$(T)).new({key: key, builder: builder, selector: selector, shouldRebuild: shouldRebuild, child: child});
      }
      createState() {
        return new (__t$_Selector0StateOfT()).new();
      }
    }
    (Selector0.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let selector = opts && 'selector' in opts ? opts.selector : null;
      let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[builder$6] = builder;
      this[selector$0] = selector;
      this[_shouldRebuild] = shouldRebuild;
      Selector0.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = Selector0.prototype;
    dart.addTypeTests(Selector0);
    Selector0.prototype[_is_Selector0_default] = true;
    dart.addTypeCaches(Selector0);
    dart.setMethodSignature(Selector0, () => ({
      __proto__: dart.getMethods(Selector0.__proto__),
      createState: dart.fnType(selector$._Selector0State$(T), [])
    }));
    dart.setLibraryUri(Selector0, I[27]);
    dart.setFieldSignature(Selector0, () => ({
      __proto__: dart.getFields(Selector0.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, T, dart.nullable(framework.Widget)])),
      selector: dart.finalFieldType(dart.fnType(T, [framework.BuildContext])),
      [_shouldRebuild]: dart.finalFieldType(dart.nullable(dart.fnType(core.bool, [T, T])))
    }));
    return Selector0;
  });
  selector$.Selector0 = selector$.Selector0$();
  dart.addTypeTests(selector$.Selector0, _is_Selector0_default);
  var value$ = dart.privateName(selector$, "_Selector0State.value");
  const _is_SingleChildState_default = Symbol('_is_SingleChildState_default');
  nested.SingleChildState$ = dart.generic(T => {
    class SingleChildState extends framework.State$(T) {
      build(context) {
        return this.buildWithChild(context, this.widget[_child$]);
      }
    }
    (SingleChildState.new = function() {
      SingleChildState.__proto__.new.call(this);
      ;
    }).prototype = SingleChildState.prototype;
    dart.addTypeTests(SingleChildState);
    SingleChildState.prototype[_is_SingleChildState_default] = true;
    dart.addTypeCaches(SingleChildState);
    dart.setMethodSignature(SingleChildState, () => ({
      __proto__: dart.getMethods(SingleChildState.__proto__),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setLibraryUri(SingleChildState, I[14]);
    return SingleChildState;
  });
  nested.SingleChildState = nested.SingleChildState$();
  dart.addTypeTests(nested.SingleChildState, _is_SingleChildState_default);
  const _is__Selector0State_default = Symbol('_is__Selector0State_default');
  selector$._Selector0State$ = dart.generic(T => {
    var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
    var __t$TAndTTobool = () => (__t$TAndTTobool = dart.constFn(dart.fnType(core.bool, [T, T])))();
    var __t$TAndTToNbool = () => (__t$TAndTToNbool = dart.constFn(dart.nullable(__t$TAndTTobool())))();
    var __t$BuildContextAndTAndWidgetNToWidget = () => (__t$BuildContextAndTAndWidgetNToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, T, T$.WidgetN()])))();
    var __t$DiagnosticsPropertyOfT = () => (__t$DiagnosticsPropertyOfT = dart.constFn(diagnostics.DiagnosticsProperty$(T)))();
    class _Selector0State extends nested.SingleChildState$(selector$.Selector0$(T)) {
      get value() {
        return this[value$];
      }
      set value(value) {
        this[value$] = __t$TN().as(value);
      }
      buildWithChild(context, child) {
        let t10, t9, t12, t11, t10$, t9$;
        let selected = (t9 = this.widget, t10 = context, t9.selector(t10));
        let shouldInvalidateCache = !dart.equals(this.oldWidget, this.widget) || __t$TAndTToNbool().as(this.widget[_shouldRebuild]) != null && dart.nullCheck(__t$TAndTToNbool().as(this.widget[_shouldRebuild]))(T.as(this.value), selected) || __t$TAndTToNbool().as(this.widget[_shouldRebuild]) == null && !(C[17] || CT.C17).equals(this.value, selected);
        if (shouldInvalidateCache) {
          this.value = selected;
          this.oldWidget = this.widget;
          this.cache = (t9$ = this.widget, t10$ = context, t11 = selected, t12 = child, __t$BuildContextAndTAndWidgetNToWidget().as(t9$.builder)(t10$, t11, t12));
        }
        return dart.nullCheck(this.cache);
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        properties.add(new (__t$DiagnosticsPropertyOfT()).new("value", this.value));
      }
      static ['_#new#tearOff'](T) {
        return new (selector$._Selector0State$(T)).new();
      }
    }
    (_Selector0State.new = function() {
      this[value$] = null;
      this.cache = null;
      this.oldWidget = null;
      _Selector0State.__proto__.new.call(this);
      ;
    }).prototype = _Selector0State.prototype;
    dart.addTypeTests(_Selector0State);
    _Selector0State.prototype[_is__Selector0State_default] = true;
    dart.addTypeCaches(_Selector0State);
    dart.setMethodSignature(_Selector0State, () => ({
      __proto__: dart.getMethods(_Selector0State.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(_Selector0State, I[27]);
    dart.setFieldSignature(_Selector0State, () => ({
      __proto__: dart.getFields(_Selector0State.__proto__),
      value: dart.fieldType(dart.nullable(T)),
      cache: dart.fieldType(dart.nullable(framework.Widget)),
      oldWidget: dart.fieldType(dart.nullable(framework.Widget))
    }));
    return _Selector0State;
  });
  selector$._Selector0State = selector$._Selector0State$();
  dart.addTypeTests(selector$._Selector0State, _is__Selector0State_default);
  const _is_Selector_default = Symbol('_is_Selector_default');
  selector$.Selector$ = dart.generic((A, S) => {
    var __t$BuildContextToS = () => (__t$BuildContextToS = dart.constFn(dart.fnType(S, [framework.BuildContext])))();
    class Selector extends selector$.Selector0$(S) {
      static ['_#new#tearOff'](A, S, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let selector = opts && 'selector' in opts ? opts.selector : null;
        let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (selector$.Selector$(A, S)).new({key: key, builder: builder, selector: selector, shouldRebuild: shouldRebuild, child: child});
      }
    }
    (Selector.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let selector = opts && 'selector' in opts ? opts.selector : null;
      let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
      let child = opts && 'child' in opts ? opts.child : null;
      Selector.__proto__.new.call(this, {key: key, shouldRebuild: shouldRebuild, builder: builder, selector: dart.fn(context => selector(context, provider$.Provider.of(A, context)), __t$BuildContextToS()), child: child});
      ;
    }).prototype = Selector.prototype;
    dart.addTypeTests(Selector);
    Selector.prototype[_is_Selector_default] = true;
    dart.addTypeCaches(Selector);
    dart.setLibraryUri(Selector, I[27]);
    return Selector;
  });
  selector$.Selector = selector$.Selector$();
  dart.addTypeTests(selector$.Selector, _is_Selector_default);
  const _is_Selector2_default = Symbol('_is_Selector2_default');
  selector$.Selector2$ = dart.generic((A, B, S) => {
    var __t$BuildContextToS = () => (__t$BuildContextToS = dart.constFn(dart.fnType(S, [framework.BuildContext])))();
    class Selector2 extends selector$.Selector0$(S) {
      static ['_#new#tearOff'](A, B, S, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let selector = opts && 'selector' in opts ? opts.selector : null;
        let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (selector$.Selector2$(A, B, S)).new({key: key, builder: builder, selector: selector, shouldRebuild: shouldRebuild, child: child});
      }
    }
    (Selector2.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let selector = opts && 'selector' in opts ? opts.selector : null;
      let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
      let child = opts && 'child' in opts ? opts.child : null;
      Selector2.__proto__.new.call(this, {key: key, shouldRebuild: shouldRebuild, builder: builder, selector: dart.fn(context => selector(context, provider$.Provider.of(A, context), provider$.Provider.of(B, context)), __t$BuildContextToS()), child: child});
      ;
    }).prototype = Selector2.prototype;
    dart.addTypeTests(Selector2);
    Selector2.prototype[_is_Selector2_default] = true;
    dart.addTypeCaches(Selector2);
    dart.setLibraryUri(Selector2, I[27]);
    return Selector2;
  });
  selector$.Selector2 = selector$.Selector2$();
  dart.addTypeTests(selector$.Selector2, _is_Selector2_default);
  const _is_Selector3_default = Symbol('_is_Selector3_default');
  selector$.Selector3$ = dart.generic((A, B, C, S) => {
    var __t$BuildContextToS = () => (__t$BuildContextToS = dart.constFn(dart.fnType(S, [framework.BuildContext])))();
    class Selector3 extends selector$.Selector0$(S) {
      static ['_#new#tearOff'](A, B, C, S, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let selector = opts && 'selector' in opts ? opts.selector : null;
        let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (selector$.Selector3$(A, B, C, S)).new({key: key, builder: builder, selector: selector, shouldRebuild: shouldRebuild, child: child});
      }
    }
    (Selector3.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let selector = opts && 'selector' in opts ? opts.selector : null;
      let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
      let child = opts && 'child' in opts ? opts.child : null;
      Selector3.__proto__.new.call(this, {key: key, shouldRebuild: shouldRebuild, builder: builder, selector: dart.fn(context => selector(context, provider$.Provider.of(A, context), provider$.Provider.of(B, context), provider$.Provider.of(C, context)), __t$BuildContextToS()), child: child});
      ;
    }).prototype = Selector3.prototype;
    dart.addTypeTests(Selector3);
    Selector3.prototype[_is_Selector3_default] = true;
    dart.addTypeCaches(Selector3);
    dart.setLibraryUri(Selector3, I[27]);
    return Selector3;
  });
  selector$.Selector3 = selector$.Selector3$();
  dart.addTypeTests(selector$.Selector3, _is_Selector3_default);
  const _is_Selector4_default = Symbol('_is_Selector4_default');
  selector$.Selector4$ = dart.generic((A, B, C, D, S) => {
    var __t$BuildContextToS = () => (__t$BuildContextToS = dart.constFn(dart.fnType(S, [framework.BuildContext])))();
    class Selector4 extends selector$.Selector0$(S) {
      static ['_#new#tearOff'](A, B, C, D, S, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let selector = opts && 'selector' in opts ? opts.selector : null;
        let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (selector$.Selector4$(A, B, C, D, S)).new({key: key, builder: builder, selector: selector, shouldRebuild: shouldRebuild, child: child});
      }
    }
    (Selector4.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let selector = opts && 'selector' in opts ? opts.selector : null;
      let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
      let child = opts && 'child' in opts ? opts.child : null;
      Selector4.__proto__.new.call(this, {key: key, shouldRebuild: shouldRebuild, builder: builder, selector: dart.fn(context => selector(context, provider$.Provider.of(A, context), provider$.Provider.of(B, context), provider$.Provider.of(C, context), provider$.Provider.of(D, context)), __t$BuildContextToS()), child: child});
      ;
    }).prototype = Selector4.prototype;
    dart.addTypeTests(Selector4);
    Selector4.prototype[_is_Selector4_default] = true;
    dart.addTypeCaches(Selector4);
    dart.setLibraryUri(Selector4, I[27]);
    return Selector4;
  });
  selector$.Selector4 = selector$.Selector4$();
  dart.addTypeTests(selector$.Selector4, _is_Selector4_default);
  const _is_Selector5_default = Symbol('_is_Selector5_default');
  selector$.Selector5$ = dart.generic((A, B, C, D, E, S) => {
    var __t$BuildContextToS = () => (__t$BuildContextToS = dart.constFn(dart.fnType(S, [framework.BuildContext])))();
    class Selector5 extends selector$.Selector0$(S) {
      static ['_#new#tearOff'](A, B, C, D, E, S, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let selector = opts && 'selector' in opts ? opts.selector : null;
        let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (selector$.Selector5$(A, B, C, D, E, S)).new({key: key, builder: builder, selector: selector, shouldRebuild: shouldRebuild, child: child});
      }
    }
    (Selector5.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let selector = opts && 'selector' in opts ? opts.selector : null;
      let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
      let child = opts && 'child' in opts ? opts.child : null;
      Selector5.__proto__.new.call(this, {key: key, shouldRebuild: shouldRebuild, builder: builder, selector: dart.fn(context => selector(context, provider$.Provider.of(A, context), provider$.Provider.of(B, context), provider$.Provider.of(C, context), provider$.Provider.of(D, context), provider$.Provider.of(E, context)), __t$BuildContextToS()), child: child});
      ;
    }).prototype = Selector5.prototype;
    dart.addTypeTests(Selector5);
    Selector5.prototype[_is_Selector5_default] = true;
    dart.addTypeCaches(Selector5);
    dart.setLibraryUri(Selector5, I[27]);
    return Selector5;
  });
  selector$.Selector5 = selector$.Selector5$();
  dart.addTypeTests(selector$.Selector5, _is_Selector5_default);
  const _is_Selector6_default = Symbol('_is_Selector6_default');
  selector$.Selector6$ = dart.generic((A, B, C, D, E, F, S) => {
    var __t$BuildContextToS = () => (__t$BuildContextToS = dart.constFn(dart.fnType(S, [framework.BuildContext])))();
    class Selector6 extends selector$.Selector0$(S) {
      static ['_#new#tearOff'](A, B, C, D, E, F, S, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let selector = opts && 'selector' in opts ? opts.selector : null;
        let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (selector$.Selector6$(A, B, C, D, E, F, S)).new({key: key, builder: builder, selector: selector, shouldRebuild: shouldRebuild, child: child});
      }
    }
    (Selector6.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let selector = opts && 'selector' in opts ? opts.selector : null;
      let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
      let child = opts && 'child' in opts ? opts.child : null;
      Selector6.__proto__.new.call(this, {key: key, shouldRebuild: shouldRebuild, builder: builder, selector: dart.fn(context => selector(context, provider$.Provider.of(A, context), provider$.Provider.of(B, context), provider$.Provider.of(C, context), provider$.Provider.of(D, context), provider$.Provider.of(E, context), provider$.Provider.of(F, context)), __t$BuildContextToS()), child: child});
      ;
    }).prototype = Selector6.prototype;
    dart.addTypeTests(Selector6);
    Selector6.prototype[_is_Selector6_default] = true;
    dart.addTypeCaches(Selector6);
    dart.setLibraryUri(Selector6, I[27]);
    return Selector6;
  });
  selector$.Selector6 = selector$.Selector6$();
  dart.addTypeTests(selector$.Selector6, _is_Selector6_default);
  var _valueListenable = dart.privateName(value_listenable_provider, "_valueListenable");
  var _updateShouldNotify$ = dart.privateName(value_listenable_provider, "_updateShouldNotify");
  const _is_ValueListenableProvider_default = Symbol('_is_ValueListenableProvider_default');
  value_listenable_provider.ValueListenableProvider$ = dart.generic(T => {
    var __t$ValueListenableBuilderOfT = () => (__t$ValueListenableBuilderOfT = dart.constFn(value_listenable_builder.ValueListenableBuilder$(T)))();
    var __t$ProviderOfT = () => (__t$ProviderOfT = dart.constFn(provider$.Provider$(T)))();
    var __t$BuildContextAndTAndWidgetNToProviderOfT = () => (__t$BuildContextAndTAndWidgetNToProviderOfT = dart.constFn(dart.fnType(__t$ProviderOfT(), [framework.BuildContext, T, T$.WidgetN()])))();
    var __t$DiagnosticsPropertyOfT = () => (__t$DiagnosticsPropertyOfT = dart.constFn(diagnostics.DiagnosticsProperty$(T)))();
    class ValueListenableProvider extends nested.SingleChildStatelessWidget {
      static ['_#value#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (value_listenable_provider.ValueListenableProvider$(T)).value({key: key, value: value, updateShouldNotify: updateShouldNotify, child: child});
      }
      buildWithChild(context, child) {
        return new (__t$ValueListenableBuilderOfT()).new({valueListenable: this[_valueListenable], builder: dart.fn((context, value, _) => new (__t$ProviderOfT()).value({value: value, updateShouldNotify: this[_updateShouldNotify$], child: child}), __t$BuildContextAndTAndWidgetNToProviderOfT())});
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        properties.add(new (__t$DiagnosticsPropertyOfT()).new("value", this[_valueListenable].value));
      }
    }
    (ValueListenableProvider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[_valueListenable] = value;
      this[_updateShouldNotify$] = updateShouldNotify;
      ValueListenableProvider.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = ValueListenableProvider.prototype;
    dart.addTypeTests(ValueListenableProvider);
    ValueListenableProvider.prototype[_is_ValueListenableProvider_default] = true;
    dart.addTypeCaches(ValueListenableProvider);
    dart.setMethodSignature(ValueListenableProvider, () => ({
      __proto__: dart.getMethods(ValueListenableProvider.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(ValueListenableProvider, I[28]);
    dart.setFieldSignature(ValueListenableProvider, () => ({
      __proto__: dart.getFields(ValueListenableProvider.__proto__),
      [_valueListenable]: dart.finalFieldType(change_notifier.ValueListenable$(T)),
      [_updateShouldNotify$]: dart.finalFieldType(dart.nullable(dart.fnType(core.bool, [T, T])))
    }));
    return ValueListenableProvider;
  });
  value_listenable_provider.ValueListenableProvider = value_listenable_provider.ValueListenableProvider$();
  dart.addTypeTests(value_listenable_provider.ValueListenableProvider, _is_ValueListenableProvider_default);
  validator.equals = function equals(str, comparison) {
    return str === dart.toString(comparison);
  };
  validator.contains = function contains(str, substring) {
    return str[$contains](substring);
  };
  validator.matches = function matches(str, pattern) {
    let re = core.RegExp.new(pattern);
    return re.hasMatch(str);
  };
  validator.isEmail = function isEmail(str) {
    return validator._email.hasMatch(str[$toLowerCase]());
  };
  validator.isURL = function isURL(input, options = null) {
    let t9, t9$, t9$0, t9$1, t9$2, t9$3;
    let str = input;
    if (str == null || str[$isEmpty] || str.length > 2083 || str[$indexOf]("mailto:") === 0) {
      return false;
    }
    let defaultUrlOptions = new (T$.IdentityMapOfString$Object()).from(["protocols", T$.JSArrayOfString().of(["http", "https", "ftp"]), "require_tld", true, "require_protocol", false, "allow_underscores", false]);
    options = helpers.merge(options, defaultUrlOptions);
    let split = str[$split]("://");
    if (split[$length] > 1) {
      let protocol = helpers.shift(split);
      let protocols = T$.ListOfString().as(options[$_get]("protocols"));
      if (!protocols[$contains](protocol)) {
        return false;
      }
    } else if (dart.equals(options[$_get]("require_protocol"), true)) {
      return false;
    }
    str = split[$join]("://");
    split = str[$split]("#");
    str = helpers.shift(split);
    let hash = split[$join]("#");
    if (hash[$isNotEmpty] && core.RegExp.new("\\s").hasMatch(hash)) {
      return false;
    }
    split = (t9$ = (t9 = str, t9 == null ? null : t9[$split]("?")), t9$ == null ? T$.JSArrayOfString().of([]) : t9$);
    str = helpers.shift(split);
    let query = split[$join]("?");
    if (query !== "" && core.RegExp.new("\\s").hasMatch(query)) {
      return false;
    }
    split = (t9$1 = (t9$0 = str, t9$0 == null ? null : t9$0[$split]("/")), t9$1 == null ? T$.JSArrayOfString().of([]) : t9$1);
    str = helpers.shift(split);
    let path = split[$join]("/");
    if (path !== "" && core.RegExp.new("\\s").hasMatch(path)) {
      return false;
    }
    split = (t9$3 = (t9$2 = str, t9$2 == null ? null : t9$2[$split]("@")), t9$3 == null ? T$.JSArrayOfString().of([]) : t9$3);
    if (split[$length] > 1) {
      let auth = helpers.shift(split);
      if (auth != null && auth[$contains](":")) {
        let parts = auth[$split](":");
        let user = helpers.shift(parts);
        if (user == null || !core.RegExp.new("^\\S+$").hasMatch(user)) {
          return false;
        }
        let pass = parts[$join](":");
        if (!core.RegExp.new("^\\S*$").hasMatch(pass)) {
          return false;
        }
      }
    }
    let hostname = split[$join]("@");
    split = hostname[$split](":");
    let host = helpers.shift(split);
    if (split[$isNotEmpty]) {
      let portStr = split[$join](":");
      let port = core.int.tryParse(portStr, {radix: 10});
      if (!core.RegExp.new("^[0-9]+$").hasMatch(portStr) || port == null || dart.notNull(port) <= 0 || dart.notNull(port) > 65535) {
        return false;
      }
    }
    if (host == null || !validator.isIP(host) && !validator.isFQDN(host, options) && host !== "localhost") {
      return false;
    }
    return true;
  };
  validator.isIP = function isIP(str, version = null) {
    if (!(version == null || typeof version == 'string' || core.int.is(version))) dart.assertFailed(null, I[29], 189, 10, "version == null || version is String || version is int");
    version = dart.toString(version);
    if (version === "null") {
      return validator.isIP(str, 4) || validator.isIP(str, 6);
    } else if (version === "4") {
      if (!validator._ipv4Maybe.hasMatch(str)) {
        return false;
      }
      let parts = str[$split](".");
      parts[$sort](dart.fn((a, b) => core.int.parse(a) - core.int.parse(b), T$.StringAndStringToint()));
      return core.int.parse(parts[$_get](3)) <= 255;
    }
    return version === "6" && validator._ipv6.hasMatch(str);
  };
  validator.isFQDN = function isFQDN(str, options = null) {
    let defaultFqdnOptions = new (T$.IdentityMapOfString$bool()).from(["require_tld", true, "allow_underscores", false]);
    options = helpers.merge(options, defaultFqdnOptions);
    let parts = str[$split](".");
    if (core.bool.as(options[$_get]("require_tld"))) {
      let tld = parts[$removeLast]();
      if (parts[$isEmpty] || !core.RegExp.new("^[a-z]{2,}$").hasMatch(tld)) {
        return false;
      }
    }
    for (let part of parts) {
      if (core.bool.as(options[$_get]("allow_underscores"))) {
        if (part[$contains]("__")) {
          return false;
        }
      }
      if (!core.RegExp.new("^[a-z\\\\u00a1-\\\\uffff0-9-]+$").hasMatch(part)) {
        return false;
      }
      if (part[$_get](0) === "-" || part[$_get](part.length - 1) === "-" || part[$contains]("---")) {
        return false;
      }
    }
    return true;
  };
  validator.isAlpha = function isAlpha(str) {
    return validator._alpha.hasMatch(str);
  };
  validator.isNumeric = function isNumeric(str) {
    return validator._numeric.hasMatch(str);
  };
  validator.isAlphanumeric = function isAlphanumeric(str) {
    return validator._alphanumeric.hasMatch(str);
  };
  validator.isBase64 = function isBase64(str) {
    return validator._base64.hasMatch(str);
  };
  validator.isInt = function isInt(str) {
    return validator._int.hasMatch(str);
  };
  validator.isFloat = function isFloat(str) {
    return validator._float.hasMatch(str);
  };
  validator.isHexadecimal = function isHexadecimal(str) {
    return validator._hexadecimal.hasMatch(str);
  };
  validator.isHexColor = function isHexColor(str) {
    return validator._hexColor.hasMatch(str);
  };
  validator.isLowercase = function isLowercase(str) {
    return str === str[$toLowerCase]();
  };
  validator.isUppercase = function isUppercase(str) {
    return str === str[$toUpperCase]();
  };
  validator.isDivisibleBy = function isDivisibleBy(str, n) {
    if (!(typeof n == 'string' || core.int.is(n))) dart.assertFailed(null, I[29], 291, 10, "n is String || n is int");
    let number = null;
    if (core.int.is(n)) {
      number = n;
    } else if (typeof n == 'string') {
      number = core.int.tryParse(n);
    } else {
      return false;
    }
    if (number == null) return false;
    try {
      return core.double.parse(str)[$modulo](number) === 0;
    } catch (e$) {
      let e = dart.getThrown(e$);
      if (core.Object.is(e)) {
        return false;
      } else
        throw e$;
    }
  };
  validator.isLength = function isLength(str, min, max = null) {
    let surrogatePairs = validator._surrogatePairsRegExp.allMatches(str)[$toList]();
    let len = str.length - surrogatePairs[$length];
    return len >= min && (max == null || len <= dart.notNull(max));
  };
  validator.isByteLength = function isByteLength(str, min, max = null) {
    return str.length >= min && (max == null || str.length <= dart.notNull(max));
  };
  validator.isUUID = function isUUID(str, version = null) {
    if (version == null) {
      version = "all";
    } else {
      version = dart.toString(version);
    }
    let pat = validator._uuid[$_get](version);
    return pat != null && pat.hasMatch(str[$toUpperCase]());
  };
  validator.isDate = function isDate(str) {
    return core.DateTime.tryParse(str) != null;
  };
  validator.isAfter = function isAfter(str, date = null) {
    let referenceDate = null;
    if (date == null) {
      referenceDate = new core.DateTime.now();
    } else if (validator.isDate(date)) {
      referenceDate = core.DateTime.parse(date);
    } else {
      return false;
    }
    let strDate = core.DateTime.tryParse(str);
    if (strDate == null) return false;
    return strDate.isAfter(referenceDate);
  };
  validator.isBefore = function isBefore(str, date = null) {
    let referenceDate = null;
    if (date == null) {
      referenceDate = new core.DateTime.now();
    } else if (validator.isDate(date)) {
      referenceDate = core.DateTime.parse(date);
    } else {
      return false;
    }
    let strDate = core.DateTime.tryParse(str);
    if (strDate == null) return false;
    return strDate.isBefore(referenceDate);
  };
  validator.isIn = function isIn(str, values) {
    if (values == null) return false;
    if (typeof values == 'string') {
      return values[$contains](str);
    }
    if (!core.Iterable.is(values)) return false;
    for (let value of values) {
      if (dart.toString(value) === str) return true;
    }
    return false;
  };
  validator.isCreditCard = function isCreditCard(str) {
    let sanitized = str[$replaceAll](core.RegExp.new("[^0-9]+"), "");
    if (!validator._creditCard.hasMatch(sanitized)) {
      return false;
    }
    let sum = 0;
    let digit = null;
    let shouldDouble = false;
    for (let i = sanitized.length - 1; i >= 0; i = i - 1) {
      digit = sanitized[$substring](i, i + 1);
      let tmpNum = core.int.parse(digit);
      if (shouldDouble === true) {
        tmpNum = tmpNum * 2;
        if (tmpNum >= 10) {
          sum = sum + (tmpNum[$modulo](10) + 1);
        } else {
          sum = sum + tmpNum;
        }
      } else {
        sum = sum + tmpNum;
      }
      shouldDouble = !shouldDouble;
    }
    return sum[$modulo](10) === 0;
  };
  validator.isISBN = function isISBN(str, version = null) {
    if (version == null) {
      return validator.isISBN(str, "10") || validator.isISBN(str, "13");
    }
    version = dart.toString(version);
    let sanitized = str[$replaceAll](core.RegExp.new("[\\s-]+"), "");
    let checksum = 0;
    if (dart.equals(version, "10")) {
      if (!validator._isbn10Maybe.hasMatch(sanitized)) {
        return false;
      }
      for (let i = 0; i < 9; i = i + 1) {
        checksum = checksum + (i + 1) * core.int.parse(sanitized[$_get](i));
      }
      if (sanitized[$_get](9) === "X") {
        checksum = checksum + 10 * 10;
      } else {
        checksum = checksum + 10 * core.int.parse(sanitized[$_get](9));
      }
      return checksum[$modulo](11) === 0;
    } else if (dart.equals(version, "13")) {
      if (!validator._isbn13Maybe.hasMatch(sanitized)) {
        return false;
      }
      let factor = T$.JSArrayOfint().of([1, 3]);
      for (let i = 0; i < 12; i = i + 1) {
        checksum = checksum + factor[$_get](i[$modulo](2)) * core.int.parse(sanitized[$_get](i));
      }
      return core.int.parse(sanitized[$_get](12)) - (10 - checksum[$modulo](10))[$modulo](10) === 0;
    }
    return false;
  };
  validator.isJson = function isJson(str) {
    try {
      convert.json.decode(str);
    } catch (e$) {
      let e = dart.getThrown(e$);
      if (core.Object.is(e)) {
        return false;
      } else
        throw e$;
    }
    return true;
  };
  validator.isMultibyte = function isMultibyte(str) {
    return validator._multibyte.hasMatch(str);
  };
  validator.isAscii = function isAscii(str) {
    return validator._ascii.hasMatch(str);
  };
  validator.isFullWidth = function isFullWidth(str) {
    return validator._fullWidth.hasMatch(str);
  };
  validator.isHalfWidth = function isHalfWidth(str) {
    return validator._halfWidth.hasMatch(str);
  };
  validator.isVariableWidth = function isVariableWidth(str) {
    return validator.isFullWidth(str) && validator.isHalfWidth(str);
  };
  validator.isSurrogatePair = function isSurrogatePair(str) {
    return validator._surrogatePairsRegExp.hasMatch(str);
  };
  validator.isMongoId = function isMongoId(str) {
    return validator.isHexadecimal(str) && str.length === 24;
  };
  dart.defineLazy(validator, {
    /*validator._email*/get _email() {
      return core.RegExp.new("^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$");
    },
    set _email(value) {},
    /*validator._ipv4Maybe*/get _ipv4Maybe() {
      return core.RegExp.new("^(\\d?\\d?\\d)\\.(\\d?\\d?\\d)\\.(\\d?\\d?\\d)\\.(\\d?\\d?\\d)$");
    },
    set _ipv4Maybe(value) {},
    /*validator._ipv6*/get _ipv6() {
      return core.RegExp.new("^::|^::1|^([a-fA-F0-9]{1,4}::?){1,7}([a-fA-F0-9]{1,4})$");
    },
    set _ipv6(value) {},
    /*validator._surrogatePairsRegExp*/get _surrogatePairsRegExp() {
      return core.RegExp.new("[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]");
    },
    set _surrogatePairsRegExp(value) {},
    /*validator._alpha*/get _alpha() {
      return core.RegExp.new("^[a-zA-Z]+$");
    },
    set _alpha(value) {},
    /*validator._alphanumeric*/get _alphanumeric() {
      return core.RegExp.new("^[a-zA-Z0-9]+$");
    },
    set _alphanumeric(value) {},
    /*validator._numeric*/get _numeric() {
      return core.RegExp.new("^-?[0-9]+$");
    },
    set _numeric(value) {},
    /*validator._int*/get _int() {
      return core.RegExp.new("^(?:-?(?:0|[1-9][0-9]*))$");
    },
    set _int(value) {},
    /*validator._float*/get _float() {
      return core.RegExp.new("^(?:-?(?:[0-9]+))?(?:\\.[0-9]*)?(?:[eE][\\+\\-]?(?:[0-9]+))?$");
    },
    set _float(value) {},
    /*validator._hexadecimal*/get _hexadecimal() {
      return core.RegExp.new("^[0-9a-fA-F]+$");
    },
    set _hexadecimal(value) {},
    /*validator._hexColor*/get _hexColor() {
      return core.RegExp.new("^#?([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$");
    },
    set _hexColor(value) {},
    /*validator._base64*/get _base64() {
      return core.RegExp.new("^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=|[A-Za-z0-9+\\/]{4})$");
    },
    set _base64(value) {},
    /*validator._creditCard*/get _creditCard() {
      return core.RegExp.new("^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$");
    },
    set _creditCard(value) {},
    /*validator._isbn10Maybe*/get _isbn10Maybe() {
      return core.RegExp.new("^(?:[0-9]{9}X|[0-9]{10})$");
    },
    set _isbn10Maybe(value) {},
    /*validator._isbn13Maybe*/get _isbn13Maybe() {
      return core.RegExp.new("^(?:[0-9]{13})$");
    },
    set _isbn13Maybe(value) {},
    /*validator._uuid*/get _uuid() {
      return new (T$.IdentityMapOfString$RegExp()).from(["3", core.RegExp.new("^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$"), "4", core.RegExp.new("^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$"), "5", core.RegExp.new("^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$"), "all", core.RegExp.new("^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$")]);
    },
    set _uuid(value) {},
    /*validator._multibyte*/get _multibyte() {
      return core.RegExp.new("[^\\x00-\\x7F]");
    },
    set _multibyte(value) {},
    /*validator._ascii*/get _ascii() {
      return core.RegExp.new("^[\\x00-\\x7F]+$");
    },
    set _ascii(value) {},
    /*validator._fullWidth*/get _fullWidth() {
      return core.RegExp.new("[^\\u0020-\\u007E\\uFF61-\\uFF9F\\uFFA0-\\uFFDC\\uFFE8-\\uFFEE0-9a-zA-Z]");
    },
    set _fullWidth(value) {},
    /*validator._halfWidth*/get _halfWidth() {
      return core.RegExp.new("[\\u0020-\\u007E\\uFF61-\\uFF9F\\uFFA0-\\uFFDC\\uFFE8-\\uFFEE0-9a-zA-Z]");
    },
    set _halfWidth(value) {}
  }, false);
  sanitizer.toString = function toString(input) {
    if (input == null || core.List.is(input) && input[$isEmpty]) {
      input = "";
    }
    return dart.toString(input);
  };
  sanitizer.toDate = function toDate(str) {
    try {
      return core.DateTime.parse(str);
    } catch (e$) {
      let e = dart.getThrown(e$);
      if (core.Object.is(e)) {
        return null;
      } else
        throw e$;
    }
  };
  sanitizer.toFloat = function toFloat(str) {
    try {
      return core.double.parse(str);
    } catch (e$) {
      let e = dart.getThrown(e$);
      if (core.Object.is(e)) {
        return 0 / 0;
      } else
        throw e$;
    }
  };
  sanitizer.toDouble = function toDouble(str) {
    return sanitizer.toFloat(str);
  };
  sanitizer.toInt = function toInt(str, opts) {
    let radix = opts && 'radix' in opts ? opts.radix : 10;
    try {
      return core.int.parse(str, {radix: radix});
    } catch (e$) {
      let e = dart.getThrown(e$);
      if (core.Object.is(e)) {
        try {
          return core.double.parse(str)[$toInt]();
        } catch (e$0) {
          let e = dart.getThrown(e$0);
          if (core.Object.is(e)) {
            return 0 / 0;
          } else
            throw e$0;
        }
      } else
        throw e$;
    }
  };
  sanitizer.toBoolean = function toBoolean(str, strict = false) {
    if (strict === true) {
      return str === "1" || str === "true";
    }
    return str !== "0" && str !== "false" && str !== "";
  };
  sanitizer.trim = function trim(str, chars = null) {
    let pattern = chars != null ? core.RegExp.new("^[" + dart.str(chars) + "]+|[" + dart.str(chars) + "]+$") : core.RegExp.new("^\\s+|\\s+$");
    return str[$replaceAll](pattern, "");
  };
  sanitizer.ltrim = function ltrim(str, chars = null) {
    let pattern = chars != null ? core.RegExp.new("^[" + dart.str(chars) + "]+") : core.RegExp.new("^\\s+");
    return str[$replaceAll](pattern, "");
  };
  sanitizer.rtrim = function rtrim(str, chars = null) {
    let pattern = chars != null ? core.RegExp.new("[" + dart.str(chars) + "]+$") : core.RegExp.new("\\s+$");
    return str[$replaceAll](pattern, "");
  };
  sanitizer.whitelist = function whitelist(str, chars) {
    return str[$replaceAll](core.RegExp.new("[^" + chars + "]+"), "");
  };
  sanitizer.blacklist = function blacklist(str, chars) {
    return str[$replaceAll](core.RegExp.new("[" + chars + "]+"), "");
  };
  sanitizer.stripLow = function stripLow(str, keepNewLines = false) {
    let chars = keepNewLines === true ? " -\t\v\f-" : " -";
    return sanitizer.blacklist(str, chars);
  };
  sanitizer.escape = function escape(str) {
    return str[$replaceAll](core.RegExp.new("&"), "&amp;")[$replaceAll](core.RegExp.new("\""), "&quot;")[$replaceAll](core.RegExp.new("'"), "&#x27;")[$replaceAll](core.RegExp.new("<"), "&lt;")[$replaceAll](core.RegExp.new(">"), "&gt;");
  };
  sanitizer.normalizeEmail = function normalizeEmail(email, options = null) {
    options = helpers.merge(options, sanitizer._defaultNormalizeEmailOptions);
    if (validator.isEmail(email) === false) {
      return "";
    }
    let parts = email[$split]("@");
    parts[$_set](1, dart.dsend(parts[$_get](1), 'toLowerCase', []));
    if (dart.equals(options[$_get]("lowercase"), true)) {
      parts[$_set](0, dart.dsend(parts[$_get](0), 'toLowerCase', []));
    }
    if (dart.equals(parts[$_get](1), "gmail.com") || dart.equals(parts[$_get](1), "googlemail.com")) {
      if (dart.equals(options[$_get]("lowercase"), false)) {
        parts[$_set](0, dart.dsend(parts[$_get](0), 'toLowerCase', []));
      }
      parts[$_set](0, dart.dsend(dart.dsend(dart.dsend(parts[$_get](0), 'replaceAll', [".", ""]), 'split', ["+"]), '_get', [0]));
      parts[$_set](1, "gmail.com");
    }
    return parts[$join]("@");
  };
  dart.defineLazy(sanitizer, {
    /*sanitizer._defaultNormalizeEmailOptions*/get _defaultNormalizeEmailOptions() {
      return new (T$.IdentityMapOfString$Object()).from(["lowercase", true]);
    },
    set _defaultNormalizeEmailOptions(value) {}
  }, false);
  const StatelessElement_SingleChildWidgetElementMixin$36$ = class StatelessElement_SingleChildWidgetElementMixin extends framework.StatelessElement {};
  (StatelessElement_SingleChildWidgetElementMixin$36$.new = function(widget) {
    nested.SingleChildWidgetElementMixin[dart.mixinNew].call(this);
    StatelessElement_SingleChildWidgetElementMixin$36$.__proto__.new.call(this, widget);
  }).prototype = StatelessElement_SingleChildWidgetElementMixin$36$.prototype;
  dart.applyMixin(StatelessElement_SingleChildWidgetElementMixin$36$, nested.SingleChildWidgetElementMixin);
  nested._NestedElement = class _NestedElement extends StatelessElement_SingleChildWidgetElementMixin$36$ {
    static ['_#new#tearOff'](widget) {
      return new nested._NestedElement.new(widget);
    }
    get widget() {
      return nested.Nested.as(super.widget);
    }
    build() {
      let t15, t15$, t15$0;
      let nestedHook = null;
      let nextNode = (t15$ = (t15 = this[_parent], t15 == null ? null : t15.injectedChild), t15$ == null ? this.widget[_child$] : t15$);
      for (let child of this.widget[_children][$reversed]) {
        nextNode = nestedHook = new nested._NestedHook.new({owner: this, wrappedWidget: child, injectedChild: nextNode});
      }
      if (nestedHook != null) {
        for (let node of this.nodes) {
          t15$0 = node;
          (() => {
            t15$0.wrappedChild = dart.nullCheck(nestedHook).wrappedWidget;
            t15$0.injectedChild = nestedHook.injectedChild;
            return t15$0;
          })();
          let next = nestedHook.injectedChild;
          if (nested._NestedHook.is(next)) {
            nestedHook = next;
          } else {
            break;
          }
        }
      }
      return dart.nullCheck(nextNode);
    }
  };
  (nested._NestedElement.new = function(widget) {
    this.nodes = T$.LinkedHashSetOf_NestedHookElement().new();
    nested._NestedElement.__proto__.new.call(this, widget);
    ;
  }).prototype = nested._NestedElement.prototype;
  dart.addTypeTests(nested._NestedElement);
  dart.addTypeCaches(nested._NestedElement);
  dart.setGetterSignature(nested._NestedElement, () => ({
    __proto__: dart.getGetters(nested._NestedElement.__proto__),
    widget: nested.Nested
  }));
  dart.setLibraryUri(nested._NestedElement, I[14]);
  dart.setFieldSignature(nested._NestedElement, () => ({
    __proto__: dart.getFields(nested._NestedElement.__proto__),
    nodes: dart.finalFieldType(core.Set$(nested._NestedHookElement))
  }));
  nested._NestedHook = class _NestedHook extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let injectedChild = opts && 'injectedChild' in opts ? opts.injectedChild : null;
      let wrappedWidget = opts && 'wrappedWidget' in opts ? opts.wrappedWidget : null;
      let owner = opts && 'owner' in opts ? opts.owner : null;
      return new nested._NestedHook.new({injectedChild: injectedChild, wrappedWidget: wrappedWidget, owner: owner});
    }
    createElement() {
      return new nested._NestedHookElement.new(this);
    }
    build(context) {
      return dart.throw(new core.StateError.new("handled internally"));
    }
  };
  (nested._NestedHook.new = function(opts) {
    let injectedChild = opts && 'injectedChild' in opts ? opts.injectedChild : null;
    let wrappedWidget = opts && 'wrappedWidget' in opts ? opts.wrappedWidget : null;
    let owner = opts && 'owner' in opts ? opts.owner : null;
    this.injectedChild = injectedChild;
    this.wrappedWidget = wrappedWidget;
    this.owner = owner;
    nested._NestedHook.__proto__.new.call(this);
    ;
  }).prototype = nested._NestedHook.prototype;
  dart.addTypeTests(nested._NestedHook);
  dart.addTypeCaches(nested._NestedHook);
  dart.setMethodSignature(nested._NestedHook, () => ({
    __proto__: dart.getMethods(nested._NestedHook.__proto__),
    createElement: dart.fnType(nested._NestedHookElement, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(nested._NestedHook, I[14]);
  dart.setFieldSignature(nested._NestedHook, () => ({
    __proto__: dart.getFields(nested._NestedHook.__proto__),
    wrappedWidget: dart.finalFieldType(nested.SingleChildWidget),
    injectedChild: dart.finalFieldType(dart.nullable(framework.Widget)),
    owner: dart.finalFieldType(nested._NestedElement)
  }));
  var _injectedChild = dart.privateName(nested, "_injectedChild");
  var _wrappedChild = dart.privateName(nested, "_wrappedChild");
  nested._NestedHookElement = class _NestedHookElement extends framework.StatelessElement {
    static ['_#new#tearOff'](widget) {
      return new nested._NestedHookElement.new(widget);
    }
    get widget() {
      return nested._NestedHook.as(super.widget);
    }
    get injectedChild() {
      return this[_injectedChild];
    }
    set injectedChild(value) {
      let previous = this[_injectedChild];
      if (nested._NestedHook.is(value) && nested._NestedHook.is(previous) && framework.Widget.canUpdate(value.wrappedWidget, previous.wrappedWidget)) {
        return;
      }
      if (!dart.equals(previous, value)) {
        this[_injectedChild] = value;
        this.visitChildren(dart.fn(e => e.markNeedsBuild(), T$.ElementTovoid()));
      }
    }
    get wrappedChild() {
      return this[_wrappedChild];
    }
    set wrappedChild(value) {
      if (!dart.equals(this[_wrappedChild], value)) {
        this[_wrappedChild] = value;
        this.markNeedsBuild();
      }
    }
    mount(parent, newSlot) {
      this.widget.owner.nodes.add(this);
      this[_wrappedChild] = this.widget.wrappedWidget;
      this[_injectedChild] = this.widget.injectedChild;
      super.mount(parent, newSlot);
    }
    unmount() {
      this.widget.owner.nodes.remove(this);
      super.unmount();
    }
    build() {
      return dart.nullCheck(this.wrappedChild);
    }
  };
  (nested._NestedHookElement.new = function(widget) {
    this[_injectedChild] = null;
    this[_wrappedChild] = null;
    nested._NestedHookElement.__proto__.new.call(this, widget);
    ;
  }).prototype = nested._NestedHookElement.prototype;
  dart.addTypeTests(nested._NestedHookElement);
  dart.addTypeCaches(nested._NestedHookElement);
  dart.setMethodSignature(nested._NestedHookElement, () => ({
    __proto__: dart.getMethods(nested._NestedHookElement.__proto__),
    mount: dart.fnType(dart.void, [dart.nullable(framework.Element), dart.dynamic])
  }));
  dart.setGetterSignature(nested._NestedHookElement, () => ({
    __proto__: dart.getGetters(nested._NestedHookElement.__proto__),
    widget: nested._NestedHook,
    injectedChild: dart.nullable(framework.Widget),
    wrappedChild: dart.nullable(nested.SingleChildWidget)
  }));
  dart.setSetterSignature(nested._NestedHookElement, () => ({
    __proto__: dart.getSetters(nested._NestedHookElement.__proto__),
    injectedChild: dart.nullable(framework.Widget),
    wrappedChild: dart.nullable(nested.SingleChildWidget)
  }));
  dart.setLibraryUri(nested._NestedHookElement, I[14]);
  dart.setFieldSignature(nested._NestedHookElement, () => ({
    __proto__: dart.getFields(nested._NestedHookElement.__proto__),
    [_injectedChild]: dart.fieldType(dart.nullable(framework.Widget)),
    [_wrappedChild]: dart.fieldType(dart.nullable(nested.SingleChildWidget))
  }));
  nested.SingleChildWidget = class SingleChildWidget extends core.Object {};
  (nested.SingleChildWidget.new = function() {
    ;
  }).prototype = nested.SingleChildWidget.prototype;
  dart.addTypeTests(nested.SingleChildWidget);
  dart.addTypeCaches(nested.SingleChildWidget);
  nested.SingleChildWidget[dart.implements] = () => [framework.Widget];
  dart.setLibraryUri(nested.SingleChildWidget, I[14]);
  const StatefulElement_SingleChildWidgetElementMixin$36 = class StatefulElement_SingleChildWidgetElementMixin extends framework.StatefulElement {};
  (StatefulElement_SingleChildWidgetElementMixin$36.new = function(widget) {
    nested.SingleChildWidgetElementMixin[dart.mixinNew].call(this);
    StatefulElement_SingleChildWidgetElementMixin$36.__proto__.new.call(this, widget);
  }).prototype = StatefulElement_SingleChildWidgetElementMixin$36.prototype;
  dart.applyMixin(StatefulElement_SingleChildWidgetElementMixin$36, nested.SingleChildWidgetElementMixin);
  nested.SingleChildStatefulElement = class SingleChildStatefulElement extends StatefulElement_SingleChildWidgetElementMixin$36 {
    static ['_#new#tearOff'](widget) {
      return new nested.SingleChildStatefulElement.new(widget);
    }
    get widget() {
      return nested.SingleChildStatefulWidget.as(super.widget);
    }
    get state() {
      return T$.SingleChildStateOfSingleChildStatefulWidget().as(super.state);
    }
    build() {
      if (this[_parent] != null) {
        return this.state.buildWithChild(this, dart.nullCheck(dart.nullCheck(this[_parent]).injectedChild));
      }
      return super.build();
    }
  };
  (nested.SingleChildStatefulElement.new = function(widget) {
    nested.SingleChildStatefulElement.__proto__.new.call(this, widget);
    ;
  }).prototype = nested.SingleChildStatefulElement.prototype;
  dart.addTypeTests(nested.SingleChildStatefulElement);
  dart.addTypeCaches(nested.SingleChildStatefulElement);
  dart.setGetterSignature(nested.SingleChildStatefulElement, () => ({
    __proto__: dart.getGetters(nested.SingleChildStatefulElement.__proto__),
    widget: nested.SingleChildStatefulWidget,
    state: nested.SingleChildState$(nested.SingleChildStatefulWidget)
  }));
  dart.setLibraryUri(nested.SingleChildStatefulElement, I[14]);
  var builder$7 = dart.privateName(nested, "SingleChildBuilder.builder");
  nested.SingleChildBuilder = class SingleChildBuilder extends nested.SingleChildStatelessWidget {
    get builder() {
      return this[builder$7];
    }
    set builder(value) {
      super.builder = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new nested.SingleChildBuilder.new({key: key, builder: builder, child: child});
    }
    buildWithChild(context, child) {
      let t16, t15;
      t15 = context;
      t16 = child;
      return this.builder(t15, t16);
    }
  };
  (nested.SingleChildBuilder.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    let child = opts && 'child' in opts ? opts.child : null;
    this[builder$7] = builder;
    nested.SingleChildBuilder.__proto__.new.call(this, {key: key, child: child});
    ;
  }).prototype = nested.SingleChildBuilder.prototype;
  dart.addTypeTests(nested.SingleChildBuilder);
  dart.addTypeCaches(nested.SingleChildBuilder);
  dart.setMethodSignature(nested.SingleChildBuilder, () => ({
    __proto__: dart.getMethods(nested.SingleChildBuilder.__proto__),
    buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
  }));
  dart.setLibraryUri(nested.SingleChildBuilder, I[14]);
  dart.setFieldSignature(nested.SingleChildBuilder, () => ({
    __proto__: dart.getFields(nested.SingleChildBuilder.__proto__),
    builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)]))
  }));
  nested.SingleChildStatelessWidgetMixin = class SingleChildStatelessWidgetMixin extends core.Object {};
  nested.SingleChildStatelessWidgetMixin[dart.mixinOn] = Object => class SingleChildStatelessWidgetMixin extends Object {
    get [_child$]() {
      return this.child;
    }
    createElement() {
      return new nested.SingleChildStatelessElement.new(this);
    }
    build(context) {
      return this.buildWithChild(context, this.child);
    }
  };
  (nested.SingleChildStatelessWidgetMixin[dart.mixinNew] = function() {
  }).prototype = nested.SingleChildStatelessWidgetMixin.prototype;
  dart.addTypeTests(nested.SingleChildStatelessWidgetMixin);
  dart.addTypeCaches(nested.SingleChildStatelessWidgetMixin);
  nested.SingleChildStatelessWidgetMixin[dart.implements] = () => [framework.StatelessWidget, nested.SingleChildStatelessWidget, core.Object];
  dart.setMethodSignature(nested.SingleChildStatelessWidgetMixin, () => ({
    __proto__: dart.getMethods(nested.SingleChildStatelessWidgetMixin.__proto__),
    createElement: dart.fnType(nested.SingleChildStatelessElement, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(nested.SingleChildStatelessWidgetMixin, () => ({
    __proto__: dart.getGetters(nested.SingleChildStatelessWidgetMixin.__proto__),
    [_child$]: dart.nullable(framework.Widget)
  }));
  dart.setLibraryUri(nested.SingleChildStatelessWidgetMixin, I[14]);
  nested.SingleChildStatefulWidgetMixin = class SingleChildStatefulWidgetMixin extends framework.StatefulWidget {};
  nested.SingleChildStatefulWidgetMixin[dart.mixinOn] = StatefulWidget => class SingleChildStatefulWidgetMixin extends StatefulWidget {
    createElement() {
      return new nested._SingleChildStatefulMixinElement.new(this);
    }
  };
  dart.addTypeTests(nested.SingleChildStatefulWidgetMixin);
  dart.addTypeCaches(nested.SingleChildStatefulWidgetMixin);
  nested.SingleChildStatefulWidgetMixin[dart.implements] = () => [nested.SingleChildWidget, framework.StatefulWidget];
  dart.setMethodSignature(nested.SingleChildStatefulWidgetMixin, () => ({
    __proto__: dart.getMethods(nested.SingleChildStatefulWidgetMixin.__proto__),
    createElement: dart.fnType(nested._SingleChildStatefulMixinElement, [])
  }));
  dart.setLibraryUri(nested.SingleChildStatefulWidgetMixin, I[14]);
  const _is_SingleChildStateMixin_default = Symbol('_is_SingleChildStateMixin_default');
  nested.SingleChildStateMixin$ = dart.generic(T => {
    class SingleChildStateMixin extends framework.State$(T) {}
    SingleChildStateMixin[dart.mixinOn] = State => class SingleChildStateMixin extends State {
      build(context) {
        return this.buildWithChild(context, dart.nullCheck(nested.SingleChildStatefulWidgetMixin.as(this.widget).child));
      }
    };
    dart.addTypeTests(SingleChildStateMixin);
    SingleChildStateMixin.prototype[_is_SingleChildStateMixin_default] = true;
    dart.addTypeCaches(SingleChildStateMixin);
    SingleChildStateMixin[dart.implements] = () => [framework.State$(T)];
    dart.setMethodSignature(SingleChildStateMixin, () => ({
      __proto__: dart.getMethods(SingleChildStateMixin.__proto__),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setLibraryUri(SingleChildStateMixin, I[14]);
    return SingleChildStateMixin;
  });
  nested.SingleChildStateMixin = nested.SingleChildStateMixin$();
  dart.addTypeTests(nested.SingleChildStateMixin, _is_SingleChildStateMixin_default);
  const StatefulElement_SingleChildWidgetElementMixin$36$ = class StatefulElement_SingleChildWidgetElementMixin extends framework.StatefulElement {};
  (StatefulElement_SingleChildWidgetElementMixin$36$.new = function(widget) {
    nested.SingleChildWidgetElementMixin[dart.mixinNew].call(this);
    StatefulElement_SingleChildWidgetElementMixin$36$.__proto__.new.call(this, widget);
  }).prototype = StatefulElement_SingleChildWidgetElementMixin$36$.prototype;
  dart.applyMixin(StatefulElement_SingleChildWidgetElementMixin$36$, nested.SingleChildWidgetElementMixin);
  nested._SingleChildStatefulMixinElement = class _SingleChildStatefulMixinElement extends StatefulElement_SingleChildWidgetElementMixin$36$ {
    static ['_#new#tearOff'](widget) {
      return new nested._SingleChildStatefulMixinElement.new(widget);
    }
    get widget() {
      return nested.SingleChildStatefulWidgetMixin.as(super.widget);
    }
    get state() {
      return T$.SingleChildStateMixinOfStatefulWidget().as(super.state);
    }
    build() {
      if (this[_parent] != null) {
        return this.state.buildWithChild(this, dart.nullCheck(dart.nullCheck(this[_parent]).injectedChild));
      }
      return super.build();
    }
  };
  (nested._SingleChildStatefulMixinElement.new = function(widget) {
    nested._SingleChildStatefulMixinElement.__proto__.new.call(this, widget);
    ;
  }).prototype = nested._SingleChildStatefulMixinElement.prototype;
  dart.addTypeTests(nested._SingleChildStatefulMixinElement);
  dart.addTypeCaches(nested._SingleChildStatefulMixinElement);
  dart.setGetterSignature(nested._SingleChildStatefulMixinElement, () => ({
    __proto__: dart.getGetters(nested._SingleChildStatefulMixinElement.__proto__),
    widget: nested.SingleChildStatefulWidgetMixin,
    state: nested.SingleChildStateMixin$(framework.StatefulWidget)
  }));
  dart.setLibraryUri(nested._SingleChildStatefulMixinElement, I[14]);
  nested.SingleChildInheritedElementMixin = class SingleChildInheritedElementMixin extends core.Object {};
  nested.SingleChildInheritedElementMixin[dart.mixinOn] = _SingleChildInheritedElementMixin$36InheritedElement$36SingleChildWidgetElementMixin => class SingleChildInheritedElementMixin extends _SingleChildInheritedElementMixin$36InheritedElement$36SingleChildWidgetElementMixin {
    build() {
      if (this[_parent] != null) {
        return dart.nullCheck(dart.nullCheck(this[_parent]).injectedChild);
      }
      return super.build();
    }
  };
  dart.addTypeTests(nested.SingleChildInheritedElementMixin);
  dart.addTypeCaches(nested.SingleChildInheritedElementMixin);
  nested.SingleChildInheritedElementMixin[dart.implements] = () => [nested.SingleChildWidgetElementMixin, framework.InheritedElement];
  dart.setMethodSignature(nested.SingleChildInheritedElementMixin, () => ({
    __proto__: dart.getMethods(nested.SingleChildInheritedElementMixin.__proto__),
    build: dart.fnType(framework.Widget, [])
  }));
  dart.setLibraryUri(nested.SingleChildInheritedElementMixin, I[14]);
  helpers.shift = function shift(elements) {
    if (elements[$isEmpty]) return null;
    return elements[$removeAt](0);
  };
  helpers.merge = function merge(obj, defaults) {
    if (obj == null) {
      return defaults;
    }
    defaults[$forEach](dart.fn((key, val) => obj[$putIfAbsent](key, dart.fn(() => val, T$.VoidToObject())), T$.StringAndObjectTovoid()));
    return obj;
  };
  dart.trackLibraries("zapp_user_main", {
    "file:///zapp/project/.zapp_entry.dart": $46zapp_entry,
    "file:///zapp/project/lib/main.dart": main,
    "file:///zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart": web_plugin_registrant,
    "package:flutter_app/repositories/cart_repository.dart": cart_repository,
    "package:flutter_app/screens/cart.dart": cart,
    "package:flutter_app/screens/login.dart": login,
    "package:flutter_app/screens/products.dart": products,
    "package:flutter_app/screens/purchase_confirmation.dart": purchase_confirmation,
    "package:flutter_app/screens/register.dart": register,
    "package:provider/provider.dart": provider,
    "package:flutter_app/models/product.dart": product,
    "package:flutter_app/components/product_card.dart": product_card,
    "package:flutter_app/components/custom_text_field.dart": custom_text_field,
    "package:flutter_app/screens/profile.dart": profile,
    "package:string_validator/string_validator.dart": string_validator,
    "package:flutter_app/repositories/products_repository.dart": products_repository,
    "package:flutter_app/screens/product_details.dart": product_details,
    "package:provider/src/async_provider.dart": async_provider,
    "package:provider/src/change_notifier_provider.dart": change_notifier_provider,
    "package:provider/src/consumer.dart": consumer,
    "package:provider/src/listenable_provider.dart": listenable_provider,
    "package:provider/src/provider.dart": provider$,
    "package:provider/src/proxy_provider.dart": proxy_provider,
    "package:provider/src/reassemble_handler.dart": reassemble_handler,
    "package:provider/src/selector.dart": selector$,
    "package:provider/src/value_listenable_provider.dart": value_listenable_provider,
    "package:string_validator/src/validator.dart": validator,
    "package:string_validator/src/sanitizer.dart": sanitizer,
    "package:nested/nested.dart": nested,
    "package:string_validator/src/helpers.dart": helpers
  }, {
    "package:provider/src/provider.dart": ["inherited_provider.dart", "deferred_inherited_provider.dart", "devtool.dart"]
  }, '{"version":3,"sourceRoot":"","sources":["/zapp/project/.zapp_entry.dart","/zapp/project/lib/main.dart","/zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart","/zapp/project/lib/repositories/cart_repository.dart","/zapp/project/lib/screens/cart.dart","/zapp/project/lib/screens/login.dart","/zapp/project/lib/screens/products.dart","/zapp/project/lib/screens/purchase_confirmation.dart","/zapp/project/lib/screens/register.dart","/zapp/project/lib/models/product.dart","/zapp/project/lib/components/product_card.dart","/zapp/project/lib/components/custom_text_field.dart","/zapp/project/lib/screens/profile.dart","/zapp/project/lib/repositories/products_repository.dart","/zapp/project/lib/screens/product_details.dart","/zapp/pub/.pub_cache/hosted/pub.dev/nested-1.0.0/lib/nested.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-5.0.0/lib/src/inherited_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-5.0.0/lib/src/deferred_inherited_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-5.0.0/lib/src/async_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-5.0.0/lib/src/listenable_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-5.0.0/lib/src/change_notifier_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-5.0.0/lib/src/consumer.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-5.0.0/lib/src/provider.dart","/workspace/build/dart-sdk/packages/flutter/lib/src/widgets/framework.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-5.0.0/lib/src/devtool.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-5.0.0/lib/src/proxy_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-5.0.0/lib/src/reassemble_handler.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-5.0.0/lib/src/selector.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-5.0.0/lib/src/value_listenable_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/string_validator-1.0.0/lib/src/validator.dart","/zapp/pub/.pub_cache/hosted/pub.dev/string_validator-1.0.0/lib/src/sanitizer.dart","/zapp/pub/.pub_cache/hosted/pub.dev/string_validator-1.0.0/lib/src/helpers.dart"],"names":[],"mappings":"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","file":"main.js"}');
  // Exports:
  return {
    zapp__project__$46zapp_entry: $46zapp_entry,
    zapp__project__lib__main: main,
    zapp__project__$46dart_tool__dartpad__web_plugin_registrant: web_plugin_registrant,
    repositories__cart_repository: cart_repository,
    screens__cart: cart,
    screens__login: login,
    screens__products: products,
    screens__purchase_confirmation: purchase_confirmation,
    screens__register: register,
    provider: provider,
    models__product: product,
    components__product_card: product_card,
    components__custom_text_field: custom_text_field,
    screens__profile: profile,
    string_validator: string_validator,
    repositories__products_repository: products_repository,
    screens__product_details: product_details,
    src__async_provider: async_provider,
    src__change_notifier_provider: change_notifier_provider,
    src__consumer: consumer,
    src__listenable_provider: listenable_provider,
    src__provider: provider$,
    src__proxy_provider: proxy_provider,
    src__reassemble_handler: reassemble_handler,
    src__selector: selector$,
    src__value_listenable_provider: value_listenable_provider,
    src__validator: validator,
    src__sanitizer: sanitizer,
    nested: nested,
    src__helpers: helpers
  };
}));

//# sourceMappingURL=main.js.map
